

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Jun 01 00:53:05 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    41                           	dabs	1,0x7E,2
    42     0000                     
    43                           ; Version 2.40
    44                           ; Generated 17/11/2021 GMT
    45                           ; 
    46                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution. Publication is not required when
    60                           ;        this file is used in an embedded application.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F887 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78     0000                     	;# 
    79     0001                     	;# 
    80     0002                     	;# 
    81     0003                     	;# 
    82     0004                     	;# 
    83     0005                     	;# 
    84     0006                     	;# 
    85     0007                     	;# 
    86     0008                     	;# 
    87     0009                     	;# 
    88     000A                     	;# 
    89     000B                     	;# 
    90     000C                     	;# 
    91     000D                     	;# 
    92     000E                     	;# 
    93     000E                     	;# 
    94     000F                     	;# 
    95     0010                     	;# 
    96     0011                     	;# 
    97     0012                     	;# 
    98     0013                     	;# 
    99     0014                     	;# 
   100     0015                     	;# 
   101     0015                     	;# 
   102     0016                     	;# 
   103     0017                     	;# 
   104     0018                     	;# 
   105     0019                     	;# 
   106     001A                     	;# 
   107     001B                     	;# 
   108     001B                     	;# 
   109     001C                     	;# 
   110     001D                     	;# 
   111     001E                     	;# 
   112     001F                     	;# 
   113     0081                     	;# 
   114     0085                     	;# 
   115     0086                     	;# 
   116     0087                     	;# 
   117     0088                     	;# 
   118     0089                     	;# 
   119     008C                     	;# 
   120     008D                     	;# 
   121     008E                     	;# 
   122     008F                     	;# 
   123     0090                     	;# 
   124     0091                     	;# 
   125     0092                     	;# 
   126     0093                     	;# 
   127     0093                     	;# 
   128     0093                     	;# 
   129     0094                     	;# 
   130     0095                     	;# 
   131     0096                     	;# 
   132     0097                     	;# 
   133     0098                     	;# 
   134     0099                     	;# 
   135     009A                     	;# 
   136     009B                     	;# 
   137     009C                     	;# 
   138     009D                     	;# 
   139     009E                     	;# 
   140     009F                     	;# 
   141     0105                     	;# 
   142     0107                     	;# 
   143     0108                     	;# 
   144     0109                     	;# 
   145     010C                     	;# 
   146     010C                     	;# 
   147     010D                     	;# 
   148     010E                     	;# 
   149     010F                     	;# 
   150     0185                     	;# 
   151     0187                     	;# 
   152     0188                     	;# 
   153     0189                     	;# 
   154     018C                     	;# 
   155     018D                     	;# 
   156     0000                     	;# 
   157     0001                     	;# 
   158     0002                     	;# 
   159     0003                     	;# 
   160     0004                     	;# 
   161     0005                     	;# 
   162     0006                     	;# 
   163     0007                     	;# 
   164     0008                     	;# 
   165     0009                     	;# 
   166     000A                     	;# 
   167     000B                     	;# 
   168     000C                     	;# 
   169     000D                     	;# 
   170     000E                     	;# 
   171     000E                     	;# 
   172     000F                     	;# 
   173     0010                     	;# 
   174     0011                     	;# 
   175     0012                     	;# 
   176     0013                     	;# 
   177     0014                     	;# 
   178     0015                     	;# 
   179     0015                     	;# 
   180     0016                     	;# 
   181     0017                     	;# 
   182     0018                     	;# 
   183     0019                     	;# 
   184     001A                     	;# 
   185     001B                     	;# 
   186     001B                     	;# 
   187     001C                     	;# 
   188     001D                     	;# 
   189     001E                     	;# 
   190     001F                     	;# 
   191     0081                     	;# 
   192     0085                     	;# 
   193     0086                     	;# 
   194     0087                     	;# 
   195     0088                     	;# 
   196     0089                     	;# 
   197     008C                     	;# 
   198     008D                     	;# 
   199     008E                     	;# 
   200     008F                     	;# 
   201     0090                     	;# 
   202     0091                     	;# 
   203     0092                     	;# 
   204     0093                     	;# 
   205     0093                     	;# 
   206     0093                     	;# 
   207     0094                     	;# 
   208     0095                     	;# 
   209     0096                     	;# 
   210     0097                     	;# 
   211     0098                     	;# 
   212     0099                     	;# 
   213     009A                     	;# 
   214     009B                     	;# 
   215     009C                     	;# 
   216     009D                     	;# 
   217     009E                     	;# 
   218     009F                     	;# 
   219     0105                     	;# 
   220     0107                     	;# 
   221     0108                     	;# 
   222     0109                     	;# 
   223     010C                     	;# 
   224     010C                     	;# 
   225     010D                     	;# 
   226     010E                     	;# 
   227     010F                     	;# 
   228     0185                     	;# 
   229     0187                     	;# 
   230     0188                     	;# 
   231     0189                     	;# 
   232     018C                     	;# 
   233     018D                     	;# 
   234     0000                     	;# 
   235     0001                     	;# 
   236     0002                     	;# 
   237     0003                     	;# 
   238     0004                     	;# 
   239     0005                     	;# 
   240     0006                     	;# 
   241     0007                     	;# 
   242     0008                     	;# 
   243     0009                     	;# 
   244     000A                     	;# 
   245     000B                     	;# 
   246     000C                     	;# 
   247     000D                     	;# 
   248     000E                     	;# 
   249     000E                     	;# 
   250     000F                     	;# 
   251     0010                     	;# 
   252     0011                     	;# 
   253     0012                     	;# 
   254     0013                     	;# 
   255     0014                     	;# 
   256     0015                     	;# 
   257     0015                     	;# 
   258     0016                     	;# 
   259     0017                     	;# 
   260     0018                     	;# 
   261     0019                     	;# 
   262     001A                     	;# 
   263     001B                     	;# 
   264     001B                     	;# 
   265     001C                     	;# 
   266     001D                     	;# 
   267     001E                     	;# 
   268     001F                     	;# 
   269     0081                     	;# 
   270     0085                     	;# 
   271     0086                     	;# 
   272     0087                     	;# 
   273     0088                     	;# 
   274     0089                     	;# 
   275     008C                     	;# 
   276     008D                     	;# 
   277     008E                     	;# 
   278     008F                     	;# 
   279     0090                     	;# 
   280     0091                     	;# 
   281     0092                     	;# 
   282     0093                     	;# 
   283     0093                     	;# 
   284     0093                     	;# 
   285     0094                     	;# 
   286     0095                     	;# 
   287     0096                     	;# 
   288     0097                     	;# 
   289     0098                     	;# 
   290     0099                     	;# 
   291     009A                     	;# 
   292     009B                     	;# 
   293     009C                     	;# 
   294     009D                     	;# 
   295     009E                     	;# 
   296     009F                     	;# 
   297     0105                     	;# 
   298     0107                     	;# 
   299     0108                     	;# 
   300     0109                     	;# 
   301     010C                     	;# 
   302     010C                     	;# 
   303     010D                     	;# 
   304     010E                     	;# 
   305     010F                     	;# 
   306     0185                     	;# 
   307     0187                     	;# 
   308     0188                     	;# 
   309     0189                     	;# 
   310     018C                     	;# 
   311     018D                     	;# 
   312     0000                     	;# 
   313     0001                     	;# 
   314     0002                     	;# 
   315     0003                     	;# 
   316     0004                     	;# 
   317     0005                     	;# 
   318     0006                     	;# 
   319     0007                     	;# 
   320     0008                     	;# 
   321     0009                     	;# 
   322     000A                     	;# 
   323     000B                     	;# 
   324     000C                     	;# 
   325     000D                     	;# 
   326     000E                     	;# 
   327     000E                     	;# 
   328     000F                     	;# 
   329     0010                     	;# 
   330     0011                     	;# 
   331     0012                     	;# 
   332     0013                     	;# 
   333     0014                     	;# 
   334     0015                     	;# 
   335     0015                     	;# 
   336     0016                     	;# 
   337     0017                     	;# 
   338     0018                     	;# 
   339     0019                     	;# 
   340     001A                     	;# 
   341     001B                     	;# 
   342     001B                     	;# 
   343     001C                     	;# 
   344     001D                     	;# 
   345     001E                     	;# 
   346     001F                     	;# 
   347     0081                     	;# 
   348     0085                     	;# 
   349     0086                     	;# 
   350     0087                     	;# 
   351     0088                     	;# 
   352     0089                     	;# 
   353     008C                     	;# 
   354     008D                     	;# 
   355     008E                     	;# 
   356     008F                     	;# 
   357     0090                     	;# 
   358     0091                     	;# 
   359     0092                     	;# 
   360     0093                     	;# 
   361     0093                     	;# 
   362     0093                     	;# 
   363     0094                     	;# 
   364     0095                     	;# 
   365     0096                     	;# 
   366     0097                     	;# 
   367     0098                     	;# 
   368     0099                     	;# 
   369     009A                     	;# 
   370     009B                     	;# 
   371     009C                     	;# 
   372     009D                     	;# 
   373     009E                     	;# 
   374     009F                     	;# 
   375     0105                     	;# 
   376     0107                     	;# 
   377     0108                     	;# 
   378     0109                     	;# 
   379     010C                     	;# 
   380     010C                     	;# 
   381     010D                     	;# 
   382     010E                     	;# 
   383     010F                     	;# 
   384     0185                     	;# 
   385     0187                     	;# 
   386     0188                     	;# 
   387     0189                     	;# 
   388     018C                     	;# 
   389     018D                     	;# 
   390     0000                     	;# 
   391     0001                     	;# 
   392     0002                     	;# 
   393     0003                     	;# 
   394     0004                     	;# 
   395     0005                     	;# 
   396     0006                     	;# 
   397     0007                     	;# 
   398     0008                     	;# 
   399     0009                     	;# 
   400     000A                     	;# 
   401     000B                     	;# 
   402     000C                     	;# 
   403     000D                     	;# 
   404     000E                     	;# 
   405     000E                     	;# 
   406     000F                     	;# 
   407     0010                     	;# 
   408     0011                     	;# 
   409     0012                     	;# 
   410     0013                     	;# 
   411     0014                     	;# 
   412     0015                     	;# 
   413     0015                     	;# 
   414     0016                     	;# 
   415     0017                     	;# 
   416     0018                     	;# 
   417     0019                     	;# 
   418     001A                     	;# 
   419     001B                     	;# 
   420     001B                     	;# 
   421     001C                     	;# 
   422     001D                     	;# 
   423     001E                     	;# 
   424     001F                     	;# 
   425     0081                     	;# 
   426     0085                     	;# 
   427     0086                     	;# 
   428     0087                     	;# 
   429     0088                     	;# 
   430     0089                     	;# 
   431     008C                     	;# 
   432     008D                     	;# 
   433     008E                     	;# 
   434     008F                     	;# 
   435     0090                     	;# 
   436     0091                     	;# 
   437     0092                     	;# 
   438     0093                     	;# 
   439     0093                     	;# 
   440     0093                     	;# 
   441     0094                     	;# 
   442     0095                     	;# 
   443     0096                     	;# 
   444     0097                     	;# 
   445     0098                     	;# 
   446     0099                     	;# 
   447     009A                     	;# 
   448     009B                     	;# 
   449     009C                     	;# 
   450     009D                     	;# 
   451     009E                     	;# 
   452     009F                     	;# 
   453     0105                     	;# 
   454     0107                     	;# 
   455     0108                     	;# 
   456     0109                     	;# 
   457     010C                     	;# 
   458     010C                     	;# 
   459     010D                     	;# 
   460     010E                     	;# 
   461     010F                     	;# 
   462     0185                     	;# 
   463     0187                     	;# 
   464     0188                     	;# 
   465     0189                     	;# 
   466     018C                     	;# 
   467     018D                     	;# 
   468                           
   469                           	psect	strings
   470     0800                     __pstrings:
   471     0800                     stringtab:
   472     0800                     __stringtab:
   473                           
   474                           ;	String table - string pointers are 1 byte each
   475     0800  1BFF               	btfsc	btemp+1,7
   476     0801  280A               	ljmp	stringcode
   477     0802  1383               	bcf	3,7
   478     0803  187F               	btfsc	btemp+1,0
   479     0804  1783               	bsf	3,7
   480     0805  0800               	movf	0,w
   481     0806  0A84               	incf	4,f
   482     0807  1903               	skipnz
   483     0808  0AFF               	incf	btemp+1,f
   484     0809  0008               	return
   485     080A                     stringcode:
   486     080A                     stringdir:
   487     080A  3008               	movlw	high stringdir
   488     080B  008A               	movwf	10
   489     080C  0804               	movf	4,w
   490     080D  0A84               	incf	4,f
   491     080E  0782               	addwf	2,f
   492     080F                     __stringbase:
   493     080F  3400               	retlw	0
   494     0810                     __end_of__stringtab:
   495     0810                     _dpowers:
   496     0810  3401               	retlw	1
   497     0811  3400               	retlw	0
   498     0812  340A               	retlw	10
   499     0813  3400               	retlw	0
   500     0814  3464               	retlw	100
   501     0815  3400               	retlw	0
   502     0816  34E8               	retlw	232
   503     0817  3403               	retlw	3
   504     0818  3410               	retlw	16
   505     0819  3427               	retlw	39
   506     081A                     __end_of_dpowers:
   507     081A                     _message:
   508     081A  3432               	retlw	50
   509     081B  342E               	retlw	46
   510     081C  3445               	retlw	69
   511     081D  346E               	retlw	110
   512     081E  3476               	retlw	118
   513     081F  3469               	retlw	105
   514     0820  3461               	retlw	97
   515     0821  3472               	retlw	114
   516     0822  3420               	retlw	32
   517     0823  3441               	retlw	65
   518     0824  3473               	retlw	115
   519     0825  3463               	retlw	99
   520     0826  3469               	retlw	105
   521     0827  3469               	retlw	105
   522     0828  3400               	retlw	0
   523     0829                     __end_of_message:
   524     0019                     _TXREG	set	25
   525     0018                     _RCSTA	set	24
   526     001B                     _CCPR2L	set	27
   527     001D                     _CCP2CONbits	set	29
   528     0012                     _T2CONbits	set	18
   529     0015                     _CCPR1L	set	21
   530     0017                     _CCP1CONbits	set	23
   531     0009                     _PORTE	set	9
   532     0008                     _PORTD	set	8
   533     001A                     _RCREG	set	26
   534     0018                     _RCSTAbits	set	24
   535     0006                     _PORTBbits	set	6
   536     000B                     _INTCONbits	set	11
   537     001E                     _ADRESH	set	30
   538     001F                     _ADCON0bits	set	31
   539     000C                     _PIR1bits	set	12
   540     000D                     _PIR2bits	set	13
   541     000B                     _INTCON	set	11
   542     00C4                     _CREN	set	196
   543     00C1                     _OERR	set	193
   544     0065                     _RCIF	set	101
   545     0031                     _RB1	set	49
   546     0030                     _RB0	set	48
   547     0098                     _TXSTA	set	152
   548     0099                     _SPBRG	set	153
   549     0092                     _PR2	set	146
   550     008C                     _PIE1bits	set	140
   551     009F                     _ADCON1bits	set	159
   552     008F                     _OSCCONbits	set	143
   553     0095                     _WPUB	set	149
   554     0081                     _OPTION_REGbits	set	129
   555     0086                     _TRISB	set	134
   556     0085                     _TRISA	set	133
   557     0087                     _TRISCbits	set	135
   558     008F                     _OSCCON	set	143
   559     04C1                     _TRMT	set	1217
   560     010C                     _EEDATA	set	268
   561     010D                     _EEADR	set	269
   562     0189                     _ANSELH	set	393
   563     0188                     _ANSEL	set	392
   564     018D                     _EECON2	set	397
   565     018C                     _EECON1bits	set	396
   566     0829                     STR_1:
   567     0829  3431               	retlw	49	;'1'
   568     082A  342E               	retlw	46	;'.'
   569     082B  344C               	retlw	76	;'L'
   570     082C  3465               	retlw	101	;'e'
   571     082D  3465               	retlw	101	;'e'
   572     082E  3472               	retlw	114	;'r'
   573     082F  3420               	retlw	32	;' '
   574     0830  3470               	retlw	112	;'p'
   575     0831  346F               	retlw	111	;'o'
   576     0832  3474               	retlw	116	;'t'
   577     0833  3465               	retlw	101	;'e'
   578     0834  346E               	retlw	110	;'n'
   579     0835  3463               	retlw	99	;'c'
   580     0836  3469               	retlw	105	;'i'
   581     0837  346F               	retlw	111	;'o'
   582     0838  346D               	retlw	109	;'m'
   583     0839  3465               	retlw	101	;'e'
   584     083A  3474               	retlw	116	;'t'
   585     083B  3472               	retlw	114	;'r'
   586     083C  346F               	retlw	111	;'o'
   587     083D  340D               	retlw	13
   588     083E  340A               	retlw	10
   589     083F  3400               	retlw	0
   590     0840                     STR_4:
   591     0840  3425               	retlw	37	;'%'
   592     0841  3430               	retlw	48	;'0'
   593     0842  3433               	retlw	51	;'3'
   594     0843  3475               	retlw	117	;'u'
   595     0844  340D               	retlw	13
   596     0845  340A               	retlw	10
   597     0846  3400               	retlw	0
   598     083D                     
   599                           	psect	cinit
   600     0011                     start_initialization:	
   601                           ; #config settings
   602                           
   603     0011                     __initialization:
   604                           
   605                           ; Clear objects allocated to BANK0
   606     0011  1383               	bcf	3,7	;select IRP bank0
   607     0012  3040               	movlw	low __pbssBANK0
   608     0013  0084               	movwf	4
   609     0014  3059               	movlw	low (__pbssBANK0+25)
   610     0015  120A  158A  25A3  120A  118A  	fcall	clear_ram0
   611                           
   612                           ; Clear objects allocated to BANK1
   613     001A  1683               	bsf	3,5	;RP0=1, select bank1
   614     001B  1303               	bcf	3,6	;RP1=0, select bank1
   615     001C  01C1               	clrf	__pbssBANK1& (0+127)
   616     001D  01C2               	clrf	(__pbssBANK1+1)& (0+127)
   617     001E  01C3               	clrf	(__pbssBANK1+2)& (0+127)
   618     001F  01C4               	clrf	(__pbssBANK1+3)& (0+127)
   619     0020  01C5               	clrf	(__pbssBANK1+4)& (0+127)
   620     0021  01C6               	clrf	(__pbssBANK1+5)& (0+127)
   621     0022                     end_of_initialization:	
   622                           ;End of C runtime variable initialization code
   623                           
   624     0022                     __end_of__initialization:
   625     0022  0183               	clrf	3
   626     0023  120A  118A  29CA   	ljmp	_main	;jump to C main() function
   627                           
   628                           	psect	bssBANK0
   629     0040                     __pbssBANK0:
   630     0040                     _val:
   631     0040                     	ds	4
   632     0044                     _periodo_ms:
   633     0044                     	ds	4
   634     0048                     _valprom:
   635     0048                     	ds	2
   636     004A                     _valpot1:
   637     004A                     	ds	2
   638     004C                     _valpot0:
   639     004C                     	ds	2
   640     004E                     _valadr:
   641     004E                     	ds	2
   642     0050                     _numport:
   643     0050                     	ds	2
   644     0052                     _chn:
   645     0052                     	ds	2
   646     0054                     _chn2:
   647     0054                     	ds	2
   648     0056                     _chn1:
   649     0056                     	ds	2
   650     0058                     _portsl:
   651     0058                     	ds	1
   652                           
   653                           	psect	bssBANK1
   654     00C1                     __pbssBANK1:
   655     00C1                     _valad:
   656     00C1                     	ds	4
   657     00C5                     _i:
   658     00C5                     	ds	2
   659                           
   660                           	psect	clrtext
   661     0DA3                     clear_ram0:	
   662                           ;	Called with FSR containing the base address, and
   663                           ;	W with the last address+1
   664                           
   665     0DA3  0064               	clrwdt	;clear the watchdog before getting into this loop
   666     0DA4                     clrloop0:
   667     0DA4  0180               	clrf	0	;clear RAM location pointed to by FSR
   668     0DA5  0A84               	incf	4,f	;increment pointer
   669     0DA6  0604               	xorwf	4,w	;XOR with final address
   670     0DA7  1903               	btfsc	3,2	;have we reached the end yet?
   671     0DA8  3400               	retlw	0	;all done for this memory range, return
   672     0DA9  0604               	xorwf	4,w	;XOR again to restore value
   673     0DAA  2DA4               	goto	clrloop0	;do the next byte
   674                           
   675                           	psect	cstackBANK1
   676     00A0                     __pcstackBANK1:
   677     00A0                     ?___lwmod:
   678     00A0                     ___fltol@sign1:	
   679                           ; 2 bytes @ 0x0
   680                           
   681     00A0                     ___lwmod@divisor:	
   682                           ; 1 bytes @ 0x0
   683                           
   684     00A0                     ___lldiv@quotient:	
   685                           ; 2 bytes @ 0x0
   686                           
   687                           
   688                           ; 4 bytes @ 0x0
   689     00A0                     	ds	1
   690     00A1                     ___fltol@exp1:
   691                           
   692                           ; 1 bytes @ 0x1
   693     00A1                     	ds	1
   694     00A2                     ?_PWM_init:
   695     00A2                     PWM_init@chn1:	
   696                           ; 1 bytes @ 0x2
   697                           
   698     00A2                     ___lwmod@dividend:	
   699                           ; 2 bytes @ 0x2
   700                           
   701                           
   702                           ; 2 bytes @ 0x2
   703     00A2                     	ds	2
   704     00A4                     ___lldiv@counter:
   705     00A4                     ___lwmod@counter:	
   706                           ; 1 bytes @ 0x4
   707                           
   708     00A4                     PWM_init@chn2:	
   709                           ; 1 bytes @ 0x4
   710                           
   711                           
   712                           ; 2 bytes @ 0x4
   713     00A4                     	ds	1
   714     00A5                     ?_UART_Init:
   715     00A5                     ?_sprintf:	
   716                           ; 1 bytes @ 0x5
   717                           
   718     00A5                     sprintf@f:	
   719                           ; 2 bytes @ 0x5
   720                           
   721     00A5                     UART_Init@baud_rate:	
   722                           ; 1 bytes @ 0x5
   723                           
   724                           
   725                           ; 4 bytes @ 0x5
   726     00A5                     	ds	1
   727     00A6                     PWM_init@periodo_ms:
   728                           
   729                           ; 4 bytes @ 0x6
   730     00A6                     	ds	2
   731     00A8                     ??_sprintf:
   732                           
   733                           ; 1 bytes @ 0x8
   734     00A8                     	ds	1
   735     00A9                     ??_UART_Init:
   736                           
   737                           ; 1 bytes @ 0x9
   738     00A9                     	ds	2
   739     00AB                     sprintf@ap:
   740                           
   741                           ; 1 bytes @ 0xB
   742     00AB                     	ds	1
   743     00AC                     sprintf@flag:
   744                           
   745                           ; 1 bytes @ 0xC
   746     00AC                     	ds	1
   747     00AD                     UART_Init@n:
   748     00AD                     sprintf@val:	
   749                           ; 2 bytes @ 0xD
   750                           
   751                           
   752                           ; 2 bytes @ 0xD
   753     00AD                     	ds	2
   754     00AF                     sprintf@prec:
   755                           
   756                           ; 1 bytes @ 0xF
   757     00AF                     	ds	1
   758     00B0                     sprintf@sp:
   759                           
   760                           ; 1 bytes @ 0x10
   761     00B0                     	ds	1
   762     00B1                     sprintf@width:
   763                           
   764                           ; 2 bytes @ 0x11
   765     00B1                     	ds	2
   766     00B3                     sprintf@c:
   767                           
   768                           ; 1 bytes @ 0x13
   769     00B3                     	ds	1
   770     00B4                     ??_main:
   771                           
   772                           ; 1 bytes @ 0x14
   773     00B4                     	ds	3
   774     00B7                     main@text:
   775                           
   776                           ; 9 bytes @ 0x17
   777     00B7                     	ds	9
   778     00C0                     main@c:
   779                           
   780                           ; 1 bytes @ 0x20
   781     00C0                     	ds	1
   782                           
   783                           	psect	cstackCOMMON
   784     0070                     __pcstackCOMMON:
   785     0070                     ?_UART_Data_Ready:
   786     0070                     ?_isdigit:	
   787                           ; 1 bit 
   788                           
   789     0070                     ?_setup:	
   790                           ; 1 bit 
   791                           
   792     0070                     ?_preguntas:	
   793                           ; 1 bytes @ 0x0
   794                           
   795     0070                     ?_UART_GetC:	
   796                           ; 1 bytes @ 0x0
   797                           
   798     0070                     ?_UART_PutC:	
   799                           ; 1 bytes @ 0x0
   800                           
   801     0070                     ?_readEEPROM:	
   802                           ; 1 bytes @ 0x0
   803                           
   804     0070                     ??_readEEPROM:	
   805                           ; 1 bytes @ 0x0
   806                           
   807     0070                     ?_writeEEPROM:	
   808                           ; 1 bytes @ 0x0
   809                           
   810     0070                     ?_isr:	
   811                           ; 1 bytes @ 0x0
   812                           
   813     0070                     ?_uart_read:	
   814                           ; 1 bytes @ 0x0
   815                           
   816     0070                     ?_main:	
   817                           ; 1 bytes @ 0x0
   818                           
   819     0070                     ?___xxtofl:	
   820                           ; 1 bytes @ 0x0
   821                           
   822     0070                     readEEPROM@address:	
   823                           ; 4 bytes @ 0x0
   824                           
   825     0070                     writeEEPROM@dataEE:	
   826                           ; 1 bytes @ 0x0
   827                           
   828     0070                     PWmanual_init@portsl:	
   829                           ; 1 bytes @ 0x0
   830                           
   831     0070                     ___xxtofl@val:	
   832                           ; 1 bytes @ 0x0
   833                           
   834                           
   835                           ; 4 bytes @ 0x0
   836     0070                     	ds	1
   837     0071                     ??_writeEEPROM:
   838     0071                     writeEEPROM@address:	
   839                           ; 1 bytes @ 0x1
   840                           
   841                           
   842                           ; 1 bytes @ 0x1
   843     0071                     	ds	1
   844     0072                     writeEEPROM@INTCON_SAVE:
   845                           
   846                           ; 1 bytes @ 0x2
   847     0072                     	ds	2
   848     0074                     ??___xxtofl:
   849                           
   850                           ; 1 bytes @ 0x4
   851     0074                     	ds	4
   852     0078                     ___xxtofl@sign:
   853                           
   854                           ; 1 bytes @ 0x8
   855     0078                     	ds	1
   856     0079                     ___xxtofl@exp:
   857                           
   858                           ; 1 bytes @ 0x9
   859     0079                     	ds	1
   860     007A                     ___xxtofl@arg:
   861                           
   862                           ; 4 bytes @ 0xA
   863     007A                     	ds	4
   864                           
   865                           	psect	cstackBANK0
   866     0020                     __pcstackBANK0:
   867     0020                     ?___fleq:
   868     0020                     ?___flge:	
   869                           ; 1 bit 
   870                           
   871     0020                     ?_PWM_duty:	
   872                           ; 1 bit 
   873                           
   874     0020                     PWM_duty@chn:	
   875                           ; 1 bytes @ 0x0
   876                           
   877     0020                     ___fleq@ff1:	
   878                           ; 2 bytes @ 0x0
   879                           
   880     0020                     ___flge@ff1:	
   881                           ; 4 bytes @ 0x0
   882                           
   883                           
   884                           ; 4 bytes @ 0x0
   885     0020                     	ds	2
   886     0022                     PWM_duty@duty:
   887                           
   888                           ; 4 bytes @ 0x2
   889     0022                     	ds	2
   890     0024                     ___fleq@ff2:
   891     0024                     ___flge@ff2:	
   892                           ; 4 bytes @ 0x4
   893                           
   894                           
   895                           ; 4 bytes @ 0x4
   896     0024                     	ds	2
   897     0026                     ??_PWM_duty:
   898                           
   899                           ; 1 bytes @ 0x6
   900     0026                     	ds	2
   901     0028                     ??___fleq:
   902     0028                     ??___flge:	
   903                           ; 1 bytes @ 0x8
   904                           
   905                           
   906                           ; 1 bytes @ 0x8
   907     0028                     	ds	4
   908     002C                     ?_PWmanual_func:
   909     002C                     PWmanual_func@valad:	
   910                           ; 1 bytes @ 0xC
   911                           
   912                           
   913                           ; 4 bytes @ 0xC
   914     002C                     	ds	4
   915     0030                     ??_PWmanual_func:
   916                           
   917                           ; 1 bytes @ 0x10
   918     0030                     	ds	1
   919     0031                     ??_isr:
   920                           
   921                           ; 1 bytes @ 0x11
   922     0031                     	ds	6
   923     0037                     ??_setup:
   924     0037                     ?_PWmanual_init:	
   925                           ; 1 bytes @ 0x17
   926                           
   927     0037                     ??_UART_Data_Ready:	
   928                           ; 1 bytes @ 0x17
   929                           
   930     0037                     ??_UART_GetC:	
   931                           ; 1 bytes @ 0x17
   932                           
   933     0037                     ??_UART_PutC:	
   934                           ; 1 bytes @ 0x17
   935                           
   936     0037                     ??_isdigit:	
   937                           ; 1 bytes @ 0x17
   938                           
   939     0037                     ??_uart_read:	
   940                           ; 1 bytes @ 0x17
   941                           
   942     0037                     ?___wmul:	
   943                           ; 1 bytes @ 0x17
   944                           
   945     0037                     ?___lwdiv:	
   946                           ; 2 bytes @ 0x17
   947                           
   948     0037                     ?___lldiv:	
   949                           ; 2 bytes @ 0x17
   950                           
   951     0037                     ?___fltol:	
   952                           ; 4 bytes @ 0x17
   953                           
   954     0037                     UART_PutC@data:	
   955                           ; 4 bytes @ 0x17
   956                           
   957     0037                     _isdigit$1182:	
   958                           ; 1 bytes @ 0x17
   959                           
   960     0037                     PWmanual_init@numport:	
   961                           ; 1 bytes @ 0x17
   962                           
   963     0037                     ___wmul@multiplier:	
   964                           ; 2 bytes @ 0x17
   965                           
   966     0037                     ___lwdiv@divisor:	
   967                           ; 2 bytes @ 0x17
   968                           
   969     0037                     ___lldiv@divisor:	
   970                           ; 2 bytes @ 0x17
   971                           
   972     0037                     ___fltol@f1:	
   973                           ; 4 bytes @ 0x17
   974                           
   975                           
   976                           ; 4 bytes @ 0x17
   977     0037                     	ds	1
   978     0038                     ?_UART_Print:
   979     0038                     isdigit@c:	
   980                           ; 1 bytes @ 0x18
   981                           
   982     0038                     UART_Print@data:	
   983                           ; 1 bytes @ 0x18
   984                           
   985                           
   986                           ; 2 bytes @ 0x18
   987     0038                     	ds	1
   988     0039                     ??_PWmanual_init:
   989     0039                     ___wmul@multiplicand:	
   990                           ; 1 bytes @ 0x19
   991                           
   992     0039                     ___lwdiv@dividend:	
   993                           ; 2 bytes @ 0x19
   994                           
   995                           
   996                           ; 2 bytes @ 0x19
   997     0039                     	ds	1
   998     003A                     ??_UART_Print:
   999                           
  1000                           ; 1 bytes @ 0x1A
  1001     003A                     	ds	1
  1002     003B                     ??___wmul:
  1003     003B                     ??___fltol:	
  1004                           ; 1 bytes @ 0x1B
  1005                           
  1006     003B                     ??___lwdiv:	
  1007                           ; 1 bytes @ 0x1B
  1008                           
  1009     003B                     ___wmul@product:	
  1010                           ; 1 bytes @ 0x1B
  1011                           
  1012     003B                     ___lldiv@dividend:	
  1013                           ; 2 bytes @ 0x1B
  1014                           
  1015                           
  1016                           ; 4 bytes @ 0x1B
  1017     003B                     	ds	1
  1018     003C                     UART_Print@i:
  1019     003C                     ___lwdiv@counter:	
  1020                           ; 1 bytes @ 0x1C
  1021                           
  1022                           
  1023                           ; 1 bytes @ 0x1C
  1024     003C                     	ds	1
  1025     003D                     ??_preguntas:
  1026     003D                     ___lwdiv@quotient:	
  1027                           ; 1 bytes @ 0x1D
  1028                           
  1029                           
  1030                           ; 2 bytes @ 0x1D
  1031     003D                     	ds	2
  1032     003F                     ??_PWM_init:
  1033     003F                     ??___lldiv:	
  1034                           ; 1 bytes @ 0x1F
  1035                           
  1036     003F                     ??___lwmod:	
  1037                           ; 1 bytes @ 0x1F
  1038                           
  1039                           
  1040                           ; 1 bytes @ 0x1F
  1041     003F                     	ds	1
  1042                           
  1043                           	psect	maintext
  1044     01CA                     __pmaintext:	
  1045 ;;
  1046 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1047 ;;
  1048 ;; *************** function _main *****************
  1049 ;; Defined at:
  1050 ;;		line 166 in file "Kart_main.c"
  1051 ;; Parameters:    Size  Location     Type
  1052 ;;		None
  1053 ;; Auto vars:     Size  Location     Type
  1054 ;;  c               1   32[BANK1 ] unsigned char 
  1055 ;;  text            9   23[BANK1 ] unsigned char [9]
  1056 ;; Return value:  Size  Location     Type
  1057 ;;                  1    wreg      void 
  1058 ;; Registers used:
  1059 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1060 ;; Tracked objects:
  1061 ;;		On entry : B00/0
  1062 ;;		On exit  : 0/0
  1063 ;;		Unchanged: 0/0
  1064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1065 ;;      Params:         0       0       0       0       0
  1066 ;;      Locals:         0       0      10       0       0
  1067 ;;      Temps:          0       0       3       0       0
  1068 ;;      Totals:         0       0      13       0       0
  1069 ;;Total ram usage:       13 bytes
  1070 ;; Hardware stack levels required when called: 6
  1071 ;; This function calls:
  1072 ;;		_PWM_init
  1073 ;;		_PWmanual_init
  1074 ;;		_UART_Data_Ready
  1075 ;;		_UART_GetC
  1076 ;;		_UART_Init
  1077 ;;		_UART_Print
  1078 ;;		_UART_PutC
  1079 ;;		_preguntas
  1080 ;;		_setup
  1081 ;;		_sprintf
  1082 ;;		_uart_read
  1083 ;; This function is called by:
  1084 ;;		Startup code after reset
  1085 ;; This function uses a non-reentrant model
  1086 ;;
  1087                           
  1088     01CA                     _main:	
  1089                           ;psect for function _main
  1090                           
  1091     01CA                     l2543:	
  1092                           ;incstack = 0
  1093                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1094                           
  1095                           
  1096                           ;Kart_main.c: 168:     setup();
  1097     01CA  120A  158A  26AA  120A  118A  	fcall	_setup
  1098     01CF                     l2545:
  1099                           
  1100                           ;Kart_main.c: 169:     OSCCON = 0x70;
  1101     01CF  3070               	movlw	112
  1102     01D0  1683               	bsf	3,5	;RP0=1, select bank1
  1103     01D1  1303               	bcf	3,6	;RP1=0, select bank1
  1104     01D2  008F               	movwf	15	;volatile
  1105     01D3                     l2547:
  1106                           
  1107                           ;Kart_main.c: 170:      PWM_init (0,0,255);
  1108     01D3  3000               	movlw	0
  1109     01D4  00A2               	movwf	PWM_init@chn1^(0+128)
  1110     01D5  00A3               	movwf	(PWM_init@chn1+1)^(0+128)
  1111     01D6  3000               	movlw	0
  1112     01D7  00A4               	movwf	PWM_init@chn2^(0+128)
  1113     01D8  00A5               	movwf	(PWM_init@chn2+1)^(0+128)
  1114     01D9  3043               	movlw	67
  1115     01DA  00A9               	movwf	(PWM_init@periodo_ms+3)^(0+128)
  1116     01DB  307F               	movlw	127
  1117     01DC  00A8               	movwf	(PWM_init@periodo_ms+2)^(0+128)
  1118     01DD  3000               	movlw	0
  1119     01DE  00A7               	movwf	(PWM_init@periodo_ms+1)^(0+128)
  1120     01DF  3000               	movlw	0
  1121     01E0  00A6               	movwf	PWM_init@periodo_ms^(0+128)
  1122     01E1  120A  158A  2765  120A  118A  	fcall	_PWM_init
  1123     01E6                     l2549:
  1124                           
  1125                           ;Kart_main.c: 171:     ADCON0bits.GO =1;
  1126     01E6  1283               	bcf	3,5	;RP0=0, select bank0
  1127     01E7  1303               	bcf	3,6	;RP1=0, select bank0
  1128     01E8  149F               	bsf	31,1	;volatile
  1129     01E9                     l2551:
  1130                           
  1131                           ;Kart_main.c: 172:     UART_Init(9600);
  1132     01E9  3000               	movlw	0
  1133     01EA  1683               	bsf	3,5	;RP0=1, select bank1
  1134     01EB  1303               	bcf	3,6	;RP1=0, select bank1
  1135     01EC  00A8               	movwf	(UART_Init@baud_rate+3)^(0+128)
  1136     01ED  3000               	movlw	0
  1137     01EE  00A7               	movwf	(UART_Init@baud_rate+2)^(0+128)
  1138     01EF  3025               	movlw	37
  1139     01F0  00A6               	movwf	(UART_Init@baud_rate+1)^(0+128)
  1140     01F1  3080               	movlw	128
  1141     01F2  00A5               	movwf	UART_Init@baud_rate^(0+128)
  1142     01F3  120A  118A  242F  120A  118A  	fcall	_UART_Init
  1143     01F8                     l2553:
  1144                           
  1145                           ;Kart_main.c: 173:     PWmanual_init (TRISCbits.TRISC4,0);
  1146     01F8  3000               	movlw	0
  1147     01F9  1283               	bcf	3,5	;RP0=0, select bank0
  1148     01FA  1303               	bcf	3,6	;RP1=0, select bank0
  1149     01FB  00B7               	movwf	PWmanual_init@numport
  1150     01FC  00B8               	movwf	PWmanual_init@numport+1
  1151     01FD  1683               	bsf	3,5	;RP0=1, select bank1
  1152     01FE  1303               	bcf	3,6	;RP1=0, select bank1
  1153     01FF  0E07               	swapf	7,w	;volatile
  1154     0200  3901               	andlw	1
  1155     0201  120A  158A  25AB  120A  118A  	fcall	_PWmanual_init
  1156     0206                     l2555:
  1157                           
  1158                           ;Kart_main.c: 174:   _delay((unsigned long)((2000)*(4000000/4000.0)));
  1159     0206  300B               	movlw	11
  1160     0207  1683               	bsf	3,5	;RP0=1, select bank1
  1161     0208  1303               	bcf	3,6	;RP1=0, select bank1
  1162     0209  00B6               	movwf	(??_main^(0+128)+2)
  1163     020A  3026               	movlw	38
  1164     020B  00B5               	movwf	(??_main^(0+128)+1)
  1165     020C  305D               	movlw	93
  1166     020D  00B4               	movwf	??_main^(0+128)
  1167     020E                     u2657:
  1168     020E  0BB4               	decfsz	??_main^(0+128),f
  1169     020F  2A0E               	goto	u2657
  1170     0210  0BB5               	decfsz	(??_main^(0+128)+1),f
  1171     0211  2A0E               	goto	u2657
  1172     0212  0BB6               	decfsz	(??_main^(0+128)+2),f
  1173     0213  2A0E               	goto	u2657
  1174     0214                     l2557:
  1175                           
  1176                           ;Kart_main.c: 176:   UART_Print("1.Leer potenciometro\r\n");
  1177     0214  301A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1178     0215  1283               	bcf	3,5	;RP0=0, select bank0
  1179     0216  1303               	bcf	3,6	;RP1=0, select bank0
  1180     0217  00B8               	movwf	UART_Print@data
  1181     0218  3080               	movlw	128
  1182     0219  00B9               	movwf	UART_Print@data+1
  1183     021A  120A  158A  2675  120A  118A  	fcall	_UART_Print
  1184     021F                     l2559:
  1185                           
  1186                           ;Kart_main.c: 178:   _delay((unsigned long)((1000)*(4000000/4000.0)));
  1187     021F  3006               	movlw	6
  1188     0220  1683               	bsf	3,5	;RP0=1, select bank1
  1189     0221  1303               	bcf	3,6	;RP1=0, select bank1
  1190     0222  00B6               	movwf	(??_main^(0+128)+2)
  1191     0223  3013               	movlw	19
  1192     0224  00B5               	movwf	(??_main^(0+128)+1)
  1193     0225  30AD               	movlw	173
  1194     0226  00B4               	movwf	??_main^(0+128)
  1195     0227                     u2667:
  1196     0227  0BB4               	decfsz	??_main^(0+128),f
  1197     0228  2A27               	goto	u2667
  1198     0229  0BB5               	decfsz	(??_main^(0+128)+1),f
  1199     022A  2A27               	goto	u2667
  1200     022B  0BB6               	decfsz	(??_main^(0+128)+2),f
  1201     022C  2A27               	goto	u2667
  1202     022D                     l2561:
  1203                           
  1204                           ;Kart_main.c: 180:   UART_Print(message);
  1205     022D  300B               	movlw	(low ((_message-__stringbase)| (0+32768)))& (0+255)
  1206     022E  1283               	bcf	3,5	;RP0=0, select bank0
  1207     022F  1303               	bcf	3,6	;RP1=0, select bank0
  1208     0230  00B8               	movwf	UART_Print@data
  1209     0231  3080               	movlw	128
  1210     0232  00B9               	movwf	UART_Print@data+1
  1211     0233  120A  158A  2675  120A  118A  	fcall	_UART_Print
  1212     0238                     l2563:
  1213                           
  1214                           ;Kart_main.c: 182:   _delay((unsigned long)((1000)*(4000000/4000.0)));
  1215     0238  3006               	movlw	6
  1216     0239  1683               	bsf	3,5	;RP0=1, select bank1
  1217     023A  1303               	bcf	3,6	;RP1=0, select bank1
  1218     023B  00B6               	movwf	(??_main^(0+128)+2)
  1219     023C  3013               	movlw	19
  1220     023D  00B5               	movwf	(??_main^(0+128)+1)
  1221     023E  30AD               	movlw	173
  1222     023F  00B4               	movwf	??_main^(0+128)
  1223     0240                     u2677:
  1224     0240  0BB4               	decfsz	??_main^(0+128),f
  1225     0241  2A40               	goto	u2677
  1226     0242  0BB5               	decfsz	(??_main^(0+128)+1),f
  1227     0243  2A40               	goto	u2677
  1228     0244  0BB6               	decfsz	(??_main^(0+128)+2),f
  1229     0245  2A40               	goto	u2677
  1230     0246                     l2565:
  1231                           
  1232                           ;Kart_main.c: 184:   UART_Print("\r\n");
  1233     0246  302E               	movlw	(low (((STR_1+20)-__stringbase)| (0+32768)))& (0+255)
  1234     0247  1283               	bcf	3,5	;RP0=0, select bank0
  1235     0248  1303               	bcf	3,6	;RP1=0, select bank0
  1236     0249  00B8               	movwf	UART_Print@data
  1237     024A  3080               	movlw	128
  1238     024B  00B9               	movwf	UART_Print@data+1
  1239     024C  120A  158A  2675  120A  118A  	fcall	_UART_Print
  1240     0251                     l2567:
  1241                           
  1242                           ;Kart_main.c: 185:  ADCON0bits.GO =1;
  1243     0251  1283               	bcf	3,5	;RP0=0, select bank0
  1244     0252  1303               	bcf	3,6	;RP1=0, select bank0
  1245     0253  149F               	bsf	31,1	;volatile
  1246     0254                     l2569:
  1247                           
  1248                           ;Kart_main.c: 186:  char text[9];;Kart_main.c: 187:     i=0;
  1249     0254  1683               	bsf	3,5	;RP0=1, select bank1
  1250     0255  1303               	bcf	3,6	;RP1=0, select bank1
  1251     0256  01C5               	clrf	_i^(0+128)
  1252     0257  01C6               	clrf	(_i+1)^(0+128)
  1253     0258                     l2571:
  1254                           
  1255                           ;Kart_main.c: 190:     {;Kart_main.c: 192:        if (ADCON0bits.GO ==0){
  1256     0258  1283               	bcf	3,5	;RP0=0, select bank0
  1257     0259  1303               	bcf	3,6	;RP1=0, select bank0
  1258     025A  189F               	btfsc	31,1	;volatile
  1259     025B  2A5D               	goto	u2621
  1260     025C  2A5E               	goto	u2620
  1261     025D                     u2621:
  1262     025D  2AFF               	goto	l2603
  1263     025E                     u2620:
  1264     025E                     l2573:
  1265                           
  1266                           ;Kart_main.c: 193:            for (i=0;i<=2;i++){
  1267     025E  1683               	bsf	3,5	;RP0=1, select bank1
  1268     025F  1303               	bcf	3,6	;RP1=0, select bank1
  1269     0260  01C5               	clrf	_i^(0+128)
  1270     0261  01C6               	clrf	(_i+1)^(0+128)
  1271     0262                     l2575:
  1272     0262  0846               	movf	(_i+1)^(0+128),w
  1273     0263  3A80               	xorlw	128
  1274     0264  00FF               	movwf	btemp+1
  1275     0265  3080               	movlw	128
  1276     0266  027F               	subwf	btemp+1,w
  1277     0267  1D03               	skipz
  1278     0268  2A6B               	goto	u2635
  1279     0269  3003               	movlw	3
  1280     026A  0245               	subwf	_i^(0+128),w
  1281     026B                     u2635:
  1282     026B  1C03               	skipc
  1283     026C  2A6E               	goto	u2631
  1284     026D  2A6F               	goto	u2630
  1285     026E                     u2631:
  1286     026E  2A70               	goto	l2579
  1287     026F                     u2630:
  1288     026F  2AFF               	goto	l2603
  1289     0270                     l2579:
  1290                           
  1291                           ;Kart_main.c: 194:            ADCON0bits.CHS = i;
  1292     0270  1683               	bsf	3,5	;RP0=1, select bank1
  1293     0271  1303               	bcf	3,6	;RP1=0, select bank1
  1294     0272  0845               	movf	_i^(0+128),w
  1295     0273  00B4               	movwf	??_main^(0+128)
  1296     0274  0DB4               	rlf	??_main^(0+128),f
  1297     0275  0DB4               	rlf	??_main^(0+128),f
  1298     0276  1283               	bcf	3,5	;RP0=0, select bank0
  1299     0277  1303               	bcf	3,6	;RP1=0, select bank0
  1300     0278  081F               	movf	31,w	;volatile
  1301     0279  1683               	bsf	3,5	;RP0=1, select bank1
  1302     027A  1303               	bcf	3,6	;RP1=0, select bank1
  1303     027B  0634               	xorwf	??_main^(0+128),w
  1304     027C  39C3               	andlw	-61
  1305     027D  0634               	xorwf	??_main^(0+128),w
  1306     027E  1283               	bcf	3,5	;RP0=0, select bank0
  1307     027F  1303               	bcf	3,6	;RP1=0, select bank0
  1308     0280  009F               	movwf	31	;volatile
  1309     0281                     l2581:
  1310                           
  1311                           ;Kart_main.c: 195:            ADCON0bits.GO =1;
  1312     0281  149F               	bsf	31,1	;volatile
  1313     0282                     l2583:
  1314                           
  1315                           ;Kart_main.c: 197:            }
  1316     0282  3001               	movlw	1
  1317     0283  1683               	bsf	3,5	;RP0=1, select bank1
  1318     0284  1303               	bcf	3,6	;RP1=0, select bank1
  1319     0285  07C5               	addwf	_i^(0+128),f
  1320     0286  1803               	skipnc
  1321     0287  0AC6               	incf	(_i+1)^(0+128),f
  1322     0288  3000               	movlw	0
  1323     0289  07C6               	addwf	(_i+1)^(0+128),f
  1324     028A  2A62               	goto	l2575
  1325     028B                     l2587:
  1326                           
  1327                           ;Kart_main.c: 207:                UART_Print ("\r\n");
  1328     028B  302E               	movlw	(low (((STR_1+20)-__stringbase)| (0+32768)))& (0+255)
  1329     028C  1283               	bcf	3,5	;RP0=0, select bank0
  1330     028D  1303               	bcf	3,6	;RP1=0, select bank0
  1331     028E  00B8               	movwf	UART_Print@data
  1332     028F  3080               	movlw	128
  1333     0290  00B9               	movwf	UART_Print@data+1
  1334     0291  120A  158A  2675  120A  118A  	fcall	_UART_Print
  1335                           
  1336                           ;Kart_main.c: 208:             sprintf(text, "%03u\r\n", valprom);
  1337     0296  3031               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1338     0297  1683               	bsf	3,5	;RP0=1, select bank1
  1339     0298  1303               	bcf	3,6	;RP1=0, select bank1
  1340     0299  00A5               	movwf	sprintf@f^(0+128)
  1341     029A  1283               	bcf	3,5	;RP0=0, select bank0
  1342     029B  1303               	bcf	3,6	;RP1=0, select bank0
  1343     029C  0849               	movf	_valprom+1,w
  1344     029D  1683               	bsf	3,5	;RP0=1, select bank1
  1345     029E  1303               	bcf	3,6	;RP1=0, select bank1
  1346     029F  00A7               	movwf	((?_sprintf+1)^(0+128)+1)
  1347     02A0  1283               	bcf	3,5	;RP0=0, select bank0
  1348     02A1  1303               	bcf	3,6	;RP1=0, select bank0
  1349     02A2  0848               	movf	_valprom,w
  1350     02A3  1683               	bsf	3,5	;RP0=1, select bank1
  1351     02A4  1303               	bcf	3,6	;RP1=0, select bank1
  1352     02A5  00A6               	movwf	(?_sprintf^(0+128)+1)
  1353     02A6  30B7               	movlw	(low (main@text| 0))& (0+255)
  1354     02A7  120A  118A  2026  120A  118A  	fcall	_sprintf
  1355                           
  1356                           ;Kart_main.c: 209:             UART_Print(text);
  1357     02AC  30B7               	movlw	(low (main@text| 0))& (0+255)
  1358     02AD  1283               	bcf	3,5	;RP0=0, select bank0
  1359     02AE  1303               	bcf	3,6	;RP1=0, select bank0
  1360     02AF  00B8               	movwf	UART_Print@data
  1361     02B0  3000               	movlw	0
  1362     02B1  00B9               	movwf	UART_Print@data+1
  1363     02B2  120A  158A  2675  120A  118A  	fcall	_UART_Print
  1364                           
  1365                           ;Kart_main.c: 212:               preguntas();
  1366     02B7  120A  158A  2617  120A  118A  	fcall	_preguntas
  1367     02BC                     l2589:
  1368                           
  1369                           ;Kart_main.c: 213:              RCREG ='0';
  1370     02BC  3030               	movlw	48
  1371     02BD  1283               	bcf	3,5	;RP0=0, select bank0
  1372     02BE  1303               	bcf	3,6	;RP1=0, select bank0
  1373     02BF  009A               	movwf	26	;volatile
  1374                           
  1375                           ;Kart_main.c: 215:              break;
  1376     02C0  2B15               	goto	l2605
  1377     02C1                     l2591:
  1378                           
  1379                           ;Kart_main.c: 217:                _delay((unsigned long)((9200000)*(4000000/4000000.0)))
      +                          ;
  1380     02C1  302F               	movlw	47
  1381     02C2  1683               	bsf	3,5	;RP0=1, select bank1
  1382     02C3  1303               	bcf	3,6	;RP1=0, select bank1
  1383     02C4  00B6               	movwf	(??_main^(0+128)+2)
  1384     02C5  30AC               	movlw	172
  1385     02C6  00B5               	movwf	(??_main^(0+128)+1)
  1386     02C7  30EB               	movlw	235
  1387     02C8  00B4               	movwf	??_main^(0+128)
  1388     02C9                     u2687:
  1389     02C9  0BB4               	decfsz	??_main^(0+128),f
  1390     02CA  2AC9               	goto	u2687
  1391     02CB  0BB5               	decfsz	(??_main^(0+128)+1),f
  1392     02CC  2AC9               	goto	u2687
  1393     02CD  0BB6               	decfsz	(??_main^(0+128)+2),f
  1394     02CE  2AC9               	goto	u2687
  1395     02CF  2AD0               	nop2
  1396     02D0                     l2593:
  1397                           
  1398                           ;Kart_main.c: 218:                UART_Print ("\r\n");
  1399     02D0  302E               	movlw	(low (((STR_1+20)-__stringbase)| (0+32768)))& (0+255)
  1400     02D1  1283               	bcf	3,5	;RP0=0, select bank0
  1401     02D2  1303               	bcf	3,6	;RP1=0, select bank0
  1402     02D3  00B8               	movwf	UART_Print@data
  1403     02D4  3080               	movlw	128
  1404     02D5  00B9               	movwf	UART_Print@data+1
  1405     02D6  120A  158A  2675  120A  118A  	fcall	_UART_Print
  1406     02DB                     l2595:
  1407                           
  1408                           ;Kart_main.c: 219:                UART_Print(uart_read());
  1409     02DB  120A  158A  25DA  120A  118A  	fcall	_uart_read
  1410     02E0  1283               	bcf	3,5	;RP0=0, select bank0
  1411     02E1  1303               	bcf	3,6	;RP1=0, select bank0
  1412     02E2  00B8               	movwf	UART_Print@data
  1413     02E3  3080               	movlw	128
  1414     02E4  00B9               	movwf	UART_Print@data+1
  1415     02E5  120A  158A  2675  120A  118A  	fcall	_UART_Print
  1416     02EA                     l2597:
  1417                           
  1418                           ;Kart_main.c: 220:                UART_Print ("\r\n");
  1419     02EA  302E               	movlw	(low (((STR_1+20)-__stringbase)| (0+32768)))& (0+255)
  1420     02EB  1283               	bcf	3,5	;RP0=0, select bank0
  1421     02EC  1303               	bcf	3,6	;RP1=0, select bank0
  1422     02ED  00B8               	movwf	UART_Print@data
  1423     02EE  3080               	movlw	128
  1424     02EF  00B9               	movwf	UART_Print@data+1
  1425     02F0  120A  158A  2675  120A  118A  	fcall	_UART_Print
  1426     02F5                     l2599:
  1427                           
  1428                           ;Kart_main.c: 221:                preguntas();
  1429     02F5  120A  158A  2617  120A  118A  	fcall	_preguntas
  1430                           
  1431                           ;Kart_main.c: 222:                RCREG ='0';
  1432     02FA  3030               	movlw	48
  1433     02FB  1283               	bcf	3,5	;RP0=0, select bank0
  1434     02FC  1303               	bcf	3,6	;RP1=0, select bank0
  1435     02FD  009A               	movwf	26	;volatile
  1436                           
  1437                           ;Kart_main.c: 224:                break;
  1438     02FE  2B15               	goto	l2605
  1439     02FF                     l2603:
  1440     02FF  120A  158A  25DA  120A  118A  	fcall	_uart_read
  1441     0304  1683               	bsf	3,5	;RP0=1, select bank1
  1442     0305  1303               	bcf	3,6	;RP1=0, select bank1
  1443     0306  00B4               	movwf	??_main^(0+128)
  1444     0307  01B5               	clrf	(??_main^(0+128)+1)
  1445                           
  1446                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1447                           ; Switch size 1, requested type "simple"
  1448                           ; Number of cases is 1, Range of values is 0 to 0
  1449                           ; switch strategies available:
  1450                           ; Name         Instructions Cycles
  1451                           ; simple_byte            4     3 (average)
  1452                           ; direct_byte           11     8 (fixed)
  1453                           ; jumptable            260     6 (fixed)
  1454                           ;	Chosen strategy is simple_byte
  1455     0308  0835               	movf	(??_main+1)^(0+128),w
  1456     0309  3A00               	xorlw	0	; case 0
  1457     030A  1903               	skipnz
  1458     030B  2B0D               	goto	l2687
  1459     030C  2B15               	goto	l2605
  1460     030D                     l2687:
  1461                           
  1462                           ; Switch size 1, requested type "simple"
  1463                           ; Number of cases is 2, Range of values is 49 to 50
  1464                           ; switch strategies available:
  1465                           ; Name         Instructions Cycles
  1466                           ; simple_byte            7     4 (average)
  1467                           ; direct_byte           17    11 (fixed)
  1468                           ; jumptable            263     9 (fixed)
  1469                           ;	Chosen strategy is simple_byte
  1470     030D  0834               	movf	??_main^(0+128),w
  1471     030E  3A31               	xorlw	49	; case 49
  1472     030F  1903               	skipnz
  1473     0310  2A8B               	goto	l2587
  1474     0311  3A03               	xorlw	3	; case 50
  1475     0312  1903               	skipnz
  1476     0313  2AC1               	goto	l2591
  1477     0314  2B15               	goto	l2605
  1478     0315                     l2605:
  1479                           
  1480                           ;Kart_main.c: 228:     if ( UART_Data_Ready() )
  1481     0315  120A  158A  25B5  120A  118A  	fcall	_UART_Data_Ready
  1482     031A  1C03               	btfss	3,0
  1483     031B  2B1D               	goto	u2641
  1484     031C  2B1E               	goto	u2640
  1485     031D                     u2641:
  1486     031D  2A58               	goto	l2571
  1487     031E                     u2640:
  1488     031E                     l2607:
  1489                           
  1490                           ;Kart_main.c: 229:     {;Kart_main.c: 230:       uint8_t c = UART_GetC();
  1491     031E  120A  158A  25CC  120A  118A  	fcall	_UART_GetC
  1492     0323  1683               	bsf	3,5	;RP0=1, select bank1
  1493     0324  1303               	bcf	3,6	;RP1=0, select bank1
  1494     0325  00C0               	movwf	main@c^(0+128)
  1495     0326                     l2609:
  1496                           
  1497                           ;Kart_main.c: 231:       UART_PutC(c);
  1498     0326  0840               	movf	main@c^(0+128),w
  1499     0327  120A  118A  27F2  120A  118A  	fcall	_UART_PutC
  1500     032C  2A58               	goto	l2571
  1501     032D  120A  118A  280E   	ljmp	start
  1502     0330                     __end_of_main:
  1503                           
  1504                           	psect	text1
  1505     0DDA                     __ptext1:	
  1506 ;; *************** function _uart_read *****************
  1507 ;; Defined at:
  1508 ;;		line 148 in file "Kart_main.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;		None
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;		None
  1513 ;; Return value:  Size  Location     Type
  1514 ;;                  1    wreg      unsigned char 
  1515 ;; Registers used:
  1516 ;;		wreg
  1517 ;; Tracked objects:
  1518 ;;		On entry : 0/0
  1519 ;;		On exit  : 0/0
  1520 ;;		Unchanged: 0/0
  1521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1522 ;;      Params:         0       0       0       0       0
  1523 ;;      Locals:         0       0       0       0       0
  1524 ;;      Temps:          0       0       0       0       0
  1525 ;;      Totals:         0       0       0       0       0
  1526 ;;Total ram usage:        0 bytes
  1527 ;; Hardware stack levels used: 1
  1528 ;; Hardware stack levels required when called: 3
  1529 ;; This function calls:
  1530 ;;		Nothing
  1531 ;; This function is called by:
  1532 ;;		_main
  1533 ;; This function uses a non-reentrant model
  1534 ;;
  1535                           
  1536     0DDA                     _uart_read:	
  1537                           ;psect for function _uart_read
  1538                           
  1539     0DDA                     l1879:	
  1540                           ;incstack = 0
  1541                           ; Regs used in _uart_read: [wreg]
  1542                           
  1543                           
  1544                           ;Kart_main.c: 149:  if(PIR1bits.RCIF== 0){
  1545     0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  1546     0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  1547     0DDC  1A8C               	btfsc	12,5	;volatile
  1548     0DDD  2DDF               	goto	u1711
  1549     0DDE  2DE0               	goto	u1710
  1550     0DDF                     u1711:
  1551     0DDF  2DEB               	goto	l1891
  1552     0DE0                     u1710:
  1553     0DE0                     l1881:
  1554                           
  1555                           ;Kart_main.c: 150:      if (RCSTAbits.OERR){
  1556     0DE0  1C98               	btfss	24,1	;volatile
  1557     0DE1  2DE3               	goto	u1721
  1558     0DE2  2DE4               	goto	u1720
  1559     0DE3                     u1721:
  1560     0DE3  2DE9               	goto	l1885
  1561     0DE4                     u1720:
  1562     0DE4                     l1883:
  1563                           
  1564                           ;Kart_main.c: 151:          RCSTAbits.CREN =0;
  1565     0DE4  1218               	bcf	24,4	;volatile
  1566                           
  1567                           ;Kart_main.c: 152:          __nop();
  1568     0DE5  0000               	nop
  1569                           
  1570                           ;Kart_main.c: 153:          RCSTAbits.CREN =1;
  1571     0DE6  1283               	bcf	3,5	;RP0=0, select bank0
  1572     0DE7  1303               	bcf	3,6	;RP1=0, select bank0
  1573     0DE8  1618               	bsf	24,4	;volatile
  1574     0DE9                     l1885:
  1575                           
  1576                           ;Kart_main.c: 155:      return RCREG;
  1577     0DE9  081A               	movf	26,w	;volatile
  1578     0DEA  2DEC               	goto	l146
  1579     0DEB                     l1891:
  1580                           
  1581                           ;Kart_main.c: 158:      return 0;
  1582     0DEB  3000               	movlw	0
  1583     0DEC                     l146:
  1584     0DEC  0008               	return
  1585     0DED                     __end_of_uart_read:
  1586                           
  1587                           	psect	text2
  1588     0026                     __ptext2:	
  1589 ;; *************** function _sprintf *****************
  1590 ;; Defined at:
  1591 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1592 ;; Parameters:    Size  Location     Type
  1593 ;;  sp              1    wreg     PTR unsigned char 
  1594 ;;		 -> main@text(9), 
  1595 ;;  f               1    5[BANK1 ] PTR const unsigned char 
  1596 ;;		 -> STR_4(7), 
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;  sp              1   16[BANK1 ] PTR unsigned char 
  1599 ;;		 -> main@text(9), 
  1600 ;;  tmpval          4    0        struct .
  1601 ;;  width           2   17[BANK1 ] int 
  1602 ;;  val             2   13[BANK1 ] unsigned int 
  1603 ;;  cp              2    0        PTR const unsigned char 
  1604 ;;  len             2    0        unsigned int 
  1605 ;;  c               1   19[BANK1 ] unsigned char 
  1606 ;;  prec            1   15[BANK1 ] char 
  1607 ;;  flag            1   12[BANK1 ] unsigned char 
  1608 ;;  ap              1   11[BANK1 ] PTR void [1]
  1609 ;;		 -> ?_sprintf(2), 
  1610 ;; Return value:  Size  Location     Type
  1611 ;;                  2    5[BANK1 ] int 
  1612 ;; Registers used:
  1613 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1619 ;;      Params:         0       0       3       0       0
  1620 ;;      Locals:         0       0       9       0       0
  1621 ;;      Temps:          0       0       3       0       0
  1622 ;;      Totals:         0       0      15       0       0
  1623 ;;Total ram usage:       15 bytes
  1624 ;; Hardware stack levels used: 1
  1625 ;; Hardware stack levels required when called: 4
  1626 ;; This function calls:
  1627 ;;		___lwdiv
  1628 ;;		___lwmod
  1629 ;;		___wmul
  1630 ;;		_isdigit
  1631 ;; This function is called by:
  1632 ;;		_main
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636     0026                     _sprintf:	
  1637                           ;psect for function _sprintf
  1638                           
  1639                           
  1640                           ;incstack = 0
  1641                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1642                           ;sprintf@sp stored from wreg
  1643     0026  1683               	bsf	3,5	;RP0=1, select bank1
  1644     0027  1303               	bcf	3,6	;RP1=0, select bank1
  1645     0028  00B0               	movwf	sprintf@sp^(0+128)
  1646     0029                     l2445:
  1647                           
  1648                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  1649     0029  30A6               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1650     002A  00AB               	movwf	sprintf@ap^(0+128)
  1651                           
  1652                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1653     002B  29B5               	goto	l2529
  1654     002C                     l2447:
  1655                           
  1656                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1657     002C  3025               	movlw	37
  1658     002D  0633               	xorwf	sprintf@c^(0+128),w
  1659     002E  1903               	btfsc	3,2
  1660     002F  2831               	goto	u2491
  1661     0030  2832               	goto	u2490
  1662     0031                     u2491:
  1663     0031  283C               	goto	l2453
  1664     0032                     u2490:
  1665     0032                     l2449:
  1666                           
  1667                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1668     0032  0830               	movf	sprintf@sp^(0+128),w
  1669     0033  0084               	movwf	4
  1670     0034  0833               	movf	sprintf@c^(0+128),w
  1671     0035  1383               	bcf	3,7	;select IRP bank0
  1672     0036  0080               	movwf	0
  1673     0037                     l2451:
  1674     0037  3001               	movlw	1
  1675     0038  00A8               	movwf	??_sprintf^(0+128)
  1676     0039  0828               	movf	??_sprintf^(0+128),w
  1677     003A  07B0               	addwf	sprintf@sp^(0+128),f
  1678                           
  1679                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1680     003B  29B5               	goto	l2529
  1681     003C                     l2453:
  1682                           
  1683                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1684     003C  01B1               	clrf	sprintf@width^(0+128)
  1685     003D  01B2               	clrf	(sprintf@width+1)^(0+128)
  1686                           
  1687                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1688     003E  01AC               	clrf	sprintf@flag^(0+128)
  1689     003F  2845               	goto	l2459
  1690     0040                     l380:	
  1691                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 596:    case '0':
  1692                           
  1693                           
  1694                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  1695     0040  152C               	bsf	sprintf@flag^(0+128),2
  1696     0041                     l2455:
  1697                           
  1698                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 598:     f++;
  1699     0041  3001               	movlw	1
  1700     0042  00A8               	movwf	??_sprintf^(0+128)
  1701     0043  0828               	movf	??_sprintf^(0+128),w
  1702     0044  07A5               	addwf	sprintf@f^(0+128),f
  1703     0045                     l2459:	
  1704                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  1705                           
  1706     0045  0825               	movf	sprintf@f^(0+128),w
  1707     0046  0084               	movwf	4
  1708     0047  120A  158A  200A  120A  118A  	fcall	stringdir
  1709     004C  00A8               	movwf	??_sprintf^(0+128)
  1710     004D  01A9               	clrf	(??_sprintf^(0+128)+1)
  1711                           
  1712                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1713                           ; Switch size 1, requested type "simple"
  1714                           ; Number of cases is 1, Range of values is 0 to 0
  1715                           ; switch strategies available:
  1716                           ; Name         Instructions Cycles
  1717                           ; simple_byte            4     3 (average)
  1718                           ; direct_byte           11     8 (fixed)
  1719                           ; jumptable            260     6 (fixed)
  1720                           ;	Chosen strategy is simple_byte
  1721     004E  0829               	movf	(??_sprintf+1)^(0+128),w
  1722     004F  3A00               	xorlw	0	; case 0
  1723     0050  1903               	skipnz
  1724     0051  2853               	goto	l2689
  1725     0052  2858               	goto	l2461
  1726     0053                     l2689:
  1727                           
  1728                           ; Switch size 1, requested type "simple"
  1729                           ; Number of cases is 1, Range of values is 48 to 48
  1730                           ; switch strategies available:
  1731                           ; Name         Instructions Cycles
  1732                           ; simple_byte            4     3 (average)
  1733                           ; direct_byte           14    11 (fixed)
  1734                           ; jumptable            263     9 (fixed)
  1735                           ;	Chosen strategy is simple_byte
  1736     0053  0828               	movf	??_sprintf^(0+128),w
  1737     0054  3A30               	xorlw	48	; case 48
  1738     0055  1903               	skipnz
  1739     0056  2840               	goto	l380
  1740     0057  2858               	goto	l2461
  1741     0058                     l2461:
  1742                           
  1743                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1744     0058  0825               	movf	sprintf@f^(0+128),w
  1745     0059  0084               	movwf	4
  1746     005A  120A  158A  200A  120A  118A  	fcall	stringdir
  1747     005F  120A  158A  25ED  120A  118A  	fcall	_isdigit
  1748     0064  1C03               	btfss	3,0
  1749     0065  2867               	goto	u2501
  1750     0066  2868               	goto	u2500
  1751     0067                     u2501:
  1752     0067  28BC               	goto	l2477
  1753     0068                     u2500:
  1754     0068                     l2463:
  1755                           
  1756                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1757     0068  1683               	bsf	3,5	;RP0=1, select bank1
  1758     0069  1303               	bcf	3,6	;RP1=0, select bank1
  1759     006A  01B1               	clrf	sprintf@width^(0+128)
  1760     006B  01B2               	clrf	(sprintf@width+1)^(0+128)
  1761     006C                     l2465:
  1762                           
  1763                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1764     006C  300A               	movlw	10
  1765     006D  1283               	bcf	3,5	;RP0=0, select bank0
  1766     006E  1303               	bcf	3,6	;RP1=0, select bank0
  1767     006F  00B7               	movwf	___wmul@multiplier
  1768     0070  3000               	movlw	0
  1769     0071  00B8               	movwf	___wmul@multiplier+1
  1770     0072  1683               	bsf	3,5	;RP0=1, select bank1
  1771     0073  1303               	bcf	3,6	;RP1=0, select bank1
  1772     0074  0832               	movf	(sprintf@width+1)^(0+128),w
  1773     0075  1283               	bcf	3,5	;RP0=0, select bank0
  1774     0076  1303               	bcf	3,6	;RP1=0, select bank0
  1775     0077  00BA               	movwf	___wmul@multiplicand+1
  1776     0078  1683               	bsf	3,5	;RP0=1, select bank1
  1777     0079  1303               	bcf	3,6	;RP1=0, select bank1
  1778     007A  0831               	movf	sprintf@width^(0+128),w
  1779     007B  1283               	bcf	3,5	;RP0=0, select bank0
  1780     007C  1303               	bcf	3,6	;RP1=0, select bank0
  1781     007D  00B9               	movwf	___wmul@multiplicand
  1782     007E  120A  158A  264E  120A  118A  	fcall	___wmul
  1783     0083  1283               	bcf	3,5	;RP0=0, select bank0
  1784     0084  1303               	bcf	3,6	;RP1=0, select bank0
  1785     0085  0838               	movf	?___wmul+1,w
  1786     0086  1683               	bsf	3,5	;RP0=1, select bank1
  1787     0087  1303               	bcf	3,6	;RP1=0, select bank1
  1788     0088  00B2               	movwf	(sprintf@width+1)^(0+128)
  1789     0089  1283               	bcf	3,5	;RP0=0, select bank0
  1790     008A  1303               	bcf	3,6	;RP1=0, select bank0
  1791     008B  0837               	movf	?___wmul,w
  1792     008C  1683               	bsf	3,5	;RP0=1, select bank1
  1793     008D  1303               	bcf	3,6	;RP1=0, select bank1
  1794     008E  00B1               	movwf	sprintf@width^(0+128)
  1795     008F                     l2467:
  1796                           
  1797                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1798     008F  0825               	movf	sprintf@f^(0+128),w
  1799     0090  0084               	movwf	4
  1800     0091  120A  158A  200A  120A  118A  	fcall	stringdir
  1801     0096  3ED0               	addlw	208
  1802     0097  00A8               	movwf	??_sprintf^(0+128)
  1803     0098  30FF               	movlw	255
  1804     0099  1803               	skipnc
  1805     009A  3000               	movlw	0
  1806     009B  00A9               	movwf	(??_sprintf^(0+128)+1)
  1807     009C  0828               	movf	??_sprintf^(0+128),w
  1808     009D  07B1               	addwf	sprintf@width^(0+128),f
  1809     009E  1803               	skipnc
  1810     009F  0AB2               	incf	(sprintf@width+1)^(0+128),f
  1811     00A0  0829               	movf	(??_sprintf+1)^(0+128),w
  1812     00A1  07B2               	addwf	(sprintf@width+1)^(0+128),f
  1813     00A2                     l2469:
  1814     00A2  3001               	movlw	1
  1815     00A3  00A8               	movwf	??_sprintf^(0+128)
  1816     00A4  0828               	movf	??_sprintf^(0+128),w
  1817     00A5  07A5               	addwf	sprintf@f^(0+128),f
  1818     00A6                     l2471:
  1819                           
  1820                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1821     00A6  0825               	movf	sprintf@f^(0+128),w
  1822     00A7  0084               	movwf	4
  1823     00A8  120A  158A  200A  120A  118A  	fcall	stringdir
  1824     00AD  120A  158A  25ED  120A  118A  	fcall	_isdigit
  1825     00B2  1803               	btfsc	3,0
  1826     00B3  28B5               	goto	u2511
  1827     00B4  28B6               	goto	u2510
  1828     00B5                     u2511:
  1829     00B5  286C               	goto	l2465
  1830     00B6                     u2510:
  1831     00B6  28BC               	goto	l2477
  1832     00B7                     l2473:
  1833                           
  1834                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1835     00B7  30C0               	movlw	192
  1836     00B8  00A8               	movwf	??_sprintf^(0+128)
  1837     00B9  0828               	movf	??_sprintf^(0+128),w
  1838     00BA  04AC               	iorwf	sprintf@flag^(0+128),f
  1839                           
  1840                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  1841     00BB  28D8               	goto	l2479
  1842     00BC                     l2477:
  1843     00BC  3001               	movlw	1
  1844     00BD  1683               	bsf	3,5	;RP0=1, select bank1
  1845     00BE  1303               	bcf	3,6	;RP1=0, select bank1
  1846     00BF  07A5               	addwf	sprintf@f^(0+128),f
  1847     00C0  30FF               	movlw	-1
  1848     00C1  0725               	addwf	sprintf@f^(0+128),w
  1849     00C2  0084               	movwf	4
  1850     00C3  120A  158A  200A  120A  118A  	fcall	stringdir
  1851     00C8  00B3               	movwf	sprintf@c^(0+128)
  1852     00C9  00A8               	movwf	??_sprintf^(0+128)
  1853     00CA  01A9               	clrf	(??_sprintf^(0+128)+1)
  1854                           
  1855                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1856                           ; Switch size 1, requested type "simple"
  1857                           ; Number of cases is 1, Range of values is 0 to 0
  1858                           ; switch strategies available:
  1859                           ; Name         Instructions Cycles
  1860                           ; simple_byte            4     3 (average)
  1861                           ; direct_byte           11     8 (fixed)
  1862                           ; jumptable            260     6 (fixed)
  1863                           ;	Chosen strategy is simple_byte
  1864     00CB  0829               	movf	(??_sprintf+1)^(0+128),w
  1865     00CC  3A00               	xorlw	0	; case 0
  1866     00CD  1903               	skipnz
  1867     00CE  28D0               	goto	l2691
  1868     00CF  29B5               	goto	l2529
  1869     00D0                     l2691:
  1870                           
  1871                           ; Switch size 1, requested type "simple"
  1872                           ; Number of cases is 2, Range of values is 0 to 117
  1873                           ; switch strategies available:
  1874                           ; Name         Instructions Cycles
  1875                           ; simple_byte            7     4 (average)
  1876                           ; jumptable            260     6 (fixed)
  1877                           ;	Chosen strategy is simple_byte
  1878     00D0  0828               	movf	??_sprintf^(0+128),w
  1879     00D1  3A00               	xorlw	0	; case 0
  1880     00D2  1903               	skipnz
  1881     00D3  29C5               	goto	l2531
  1882     00D4  3A75               	xorlw	117	; case 117
  1883     00D5  1903               	skipnz
  1884     00D6  28B7               	goto	l2473
  1885     00D7  29B5               	goto	l2529
  1886     00D8                     l2479:
  1887                           
  1888                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1889     00D8  082B               	movf	sprintf@ap^(0+128),w
  1890     00D9  0084               	movwf	4
  1891     00DA  1383               	bcf	3,7	;select IRP bank0
  1892     00DB  0800               	movf	0,w
  1893     00DC  00AD               	movwf	sprintf@val^(0+128)
  1894     00DD  0A84               	incf	4,f
  1895     00DE  0800               	movf	0,w
  1896     00DF  00AE               	movwf	(sprintf@val+1)^(0+128)
  1897     00E0                     l2481:
  1898     00E0  3002               	movlw	2
  1899     00E1  00A8               	movwf	??_sprintf^(0+128)
  1900     00E2  0828               	movf	??_sprintf^(0+128),w
  1901     00E3  07AB               	addwf	sprintf@ap^(0+128),f
  1902     00E4                     l2483:
  1903                           
  1904                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1905     00E4  01B3               	clrf	sprintf@c^(0+128)
  1906     00E5  0AB3               	incf	sprintf@c^(0+128),f
  1907     00E6                     l2489:
  1908                           
  1909                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1910     00E6  0833               	movf	sprintf@c^(0+128),w
  1911     00E7  00A8               	movwf	??_sprintf^(0+128)
  1912     00E8  0728               	addwf	??_sprintf^(0+128),w
  1913     00E9  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1914     00EA  0084               	movwf	4
  1915     00EB  120A  158A  200A  120A  118A  	fcall	stringdir
  1916     00F0  00A9               	movwf	(??_sprintf+1)^(0+128)
  1917     00F1  120A  158A  200A  120A  118A  	fcall	stringdir
  1918     00F6  00AA               	movwf	((??_sprintf+1)^(0+128)+1)
  1919     00F7  082A               	movf	(??_sprintf+2)^(0+128),w
  1920     00F8  022E               	subwf	(sprintf@val+1)^(0+128),w
  1921     00F9  1D03               	skipz
  1922     00FA  28FD               	goto	u2525
  1923     00FB  0829               	movf	(??_sprintf+1)^(0+128),w
  1924     00FC  022D               	subwf	sprintf@val^(0+128),w
  1925     00FD                     u2525:
  1926     00FD  1803               	skipnc
  1927     00FE  2900               	goto	u2521
  1928     00FF  2901               	goto	u2520
  1929     0100                     u2521:
  1930     0100  2902               	goto	l2493
  1931     0101                     u2520:
  1932     0101  290C               	goto	l2495
  1933     0102                     l2493:
  1934     0102  3001               	movlw	1
  1935     0103  00A8               	movwf	??_sprintf^(0+128)
  1936     0104  0828               	movf	??_sprintf^(0+128),w
  1937     0105  07B3               	addwf	sprintf@c^(0+128),f
  1938     0106  3005               	movlw	5
  1939     0107  0633               	xorwf	sprintf@c^(0+128),w
  1940     0108  1D03               	btfss	3,2
  1941     0109  290B               	goto	u2531
  1942     010A  290C               	goto	u2530
  1943     010B                     u2531:
  1944     010B  28E6               	goto	l2489
  1945     010C                     u2530:
  1946     010C                     l2495:
  1947                           
  1948                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  1949     010C  0832               	movf	(sprintf@width+1)^(0+128),w
  1950     010D  3A80               	xorlw	128
  1951     010E  3C80               	sublw	128
  1952     010F  1D03               	skipz
  1953     0110  2913               	goto	u2545
  1954     0111  0831               	movf	sprintf@width^(0+128),w
  1955     0112  0233               	subwf	sprintf@c^(0+128),w
  1956     0113                     u2545:
  1957     0113  1803               	skipnc
  1958     0114  2916               	goto	u2541
  1959     0115  2917               	goto	u2540
  1960     0116                     u2541:
  1961     0116  2923               	goto	l2499
  1962     0117                     u2540:
  1963     0117                     l2497:
  1964                           
  1965                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  1966     0117  1683               	bsf	3,5	;RP0=1, select bank1
  1967     0118  1303               	bcf	3,6	;RP1=0, select bank1
  1968     0119  0833               	movf	sprintf@c^(0+128),w
  1969     011A  00A8               	movwf	??_sprintf^(0+128)
  1970     011B  01A9               	clrf	(??_sprintf^(0+128)+1)
  1971     011C  0828               	movf	??_sprintf^(0+128),w
  1972     011D  02B1               	subwf	sprintf@width^(0+128),f
  1973     011E  0829               	movf	(??_sprintf+1)^(0+128),w
  1974     011F  1C03               	skipc
  1975     0120  03B2               	decf	(sprintf@width+1)^(0+128),f
  1976     0121  02B2               	subwf	(sprintf@width+1)^(0+128),f
  1977     0122  2927               	goto	l2501
  1978     0123                     l2499:
  1979                           
  1980                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  1981     0123  1683               	bsf	3,5	;RP0=1, select bank1
  1982     0124  1303               	bcf	3,6	;RP1=0, select bank1
  1983     0125  01B1               	clrf	sprintf@width^(0+128)
  1984     0126  01B2               	clrf	(sprintf@width+1)^(0+128)
  1985     0127                     l2501:
  1986                           
  1987                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  1988     0127  1D2C               	btfss	sprintf@flag^(0+128),2
  1989     0128  292A               	goto	u2551
  1990     0129  292B               	goto	u2550
  1991     012A                     u2551:
  1992     012A  2947               	goto	l2511
  1993     012B                     u2550:
  1994     012B                     l2503:
  1995                           
  1996                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  1997     012B  0831               	movf	sprintf@width^(0+128),w
  1998     012C  0432               	iorwf	(sprintf@width+1)^(0+128),w
  1999     012D  1903               	btfsc	3,2
  2000     012E  2930               	goto	u2561
  2001     012F  2931               	goto	u2560
  2002     0130                     u2561:
  2003     0130  2962               	goto	l2519
  2004     0131                     u2560:
  2005     0131                     l2505:
  2006                           
  2007                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  2008     0131  0830               	movf	sprintf@sp^(0+128),w
  2009     0132  0084               	movwf	4
  2010     0133  3030               	movlw	48
  2011     0134  1383               	bcf	3,7	;select IRP bank0
  2012     0135  0080               	movwf	0
  2013     0136                     l2507:
  2014     0136  3001               	movlw	1
  2015     0137  00A8               	movwf	??_sprintf^(0+128)
  2016     0138  0828               	movf	??_sprintf^(0+128),w
  2017     0139  07B0               	addwf	sprintf@sp^(0+128),f
  2018     013A                     l2509:
  2019     013A  30FF               	movlw	255
  2020     013B  07B1               	addwf	sprintf@width^(0+128),f
  2021     013C  1803               	skipnc
  2022     013D  0AB2               	incf	(sprintf@width+1)^(0+128),f
  2023     013E  30FF               	movlw	255
  2024     013F  07B2               	addwf	(sprintf@width+1)^(0+128),f
  2025     0140  0831               	movf	sprintf@width^(0+128),w
  2026     0141  0432               	iorwf	(sprintf@width+1)^(0+128),w
  2027     0142  1D03               	btfss	3,2
  2028     0143  2945               	goto	u2571
  2029     0144  2946               	goto	u2570
  2030     0145                     u2571:
  2031     0145  2931               	goto	l2505
  2032     0146                     u2570:
  2033     0146  2962               	goto	l2519
  2034     0147                     l2511:
  2035                           
  2036                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1450:    if(width
  2037     0147  0831               	movf	sprintf@width^(0+128),w
  2038     0148  0432               	iorwf	(sprintf@width+1)^(0+128),w
  2039     0149  1903               	btfsc	3,2
  2040     014A  294C               	goto	u2581
  2041     014B  294D               	goto	u2580
  2042     014C                     u2581:
  2043     014C  2962               	goto	l2519
  2044     014D                     u2580:
  2045     014D                     l2513:
  2046                           
  2047                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  2048     014D  0830               	movf	sprintf@sp^(0+128),w
  2049     014E  0084               	movwf	4
  2050     014F  3020               	movlw	32
  2051     0150  1383               	bcf	3,7	;select IRP bank0
  2052     0151  0080               	movwf	0
  2053     0152                     l2515:
  2054     0152  3001               	movlw	1
  2055     0153  00A8               	movwf	??_sprintf^(0+128)
  2056     0154  0828               	movf	??_sprintf^(0+128),w
  2057     0155  07B0               	addwf	sprintf@sp^(0+128),f
  2058     0156                     l2517:
  2059     0156  30FF               	movlw	255
  2060     0157  07B1               	addwf	sprintf@width^(0+128),f
  2061     0158  1803               	skipnc
  2062     0159  0AB2               	incf	(sprintf@width+1)^(0+128),f
  2063     015A  30FF               	movlw	255
  2064     015B  07B2               	addwf	(sprintf@width+1)^(0+128),f
  2065     015C  0831               	movf	sprintf@width^(0+128),w
  2066     015D  0432               	iorwf	(sprintf@width+1)^(0+128),w
  2067     015E  1D03               	btfss	3,2
  2068     015F  2961               	goto	u2591
  2069     0160  2962               	goto	u2590
  2070     0161                     u2591:
  2071     0161  294D               	goto	l2513
  2072     0162                     u2590:
  2073     0162                     l2519:
  2074                           
  2075                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2076     0162  0833               	movf	sprintf@c^(0+128),w
  2077     0163  00AF               	movwf	sprintf@prec^(0+128)
  2078                           
  2079                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2080     0164  29AC               	goto	l2527
  2081     0165                     l2521:
  2082                           
  2083                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2084     0165  300A               	movlw	10
  2085     0166  00A0               	movwf	___lwmod@divisor^(0+128)
  2086     0167  3000               	movlw	0
  2087     0168  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  2088     0169  082F               	movf	sprintf@prec^(0+128),w
  2089     016A  00A8               	movwf	??_sprintf^(0+128)
  2090     016B  0728               	addwf	??_sprintf^(0+128),w
  2091     016C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2092     016D  0084               	movwf	4
  2093     016E  120A  158A  200A  120A  118A  	fcall	stringdir
  2094     0173  1283               	bcf	3,5	;RP0=0, select bank0
  2095     0174  1303               	bcf	3,6	;RP1=0, select bank0
  2096     0175  00B7               	movwf	___lwdiv@divisor
  2097     0176  120A  158A  200A  120A  118A  	fcall	stringdir
  2098     017B  00B8               	movwf	___lwdiv@divisor+1
  2099     017C  1683               	bsf	3,5	;RP0=1, select bank1
  2100     017D  1303               	bcf	3,6	;RP1=0, select bank1
  2101     017E  082E               	movf	(sprintf@val+1)^(0+128),w
  2102     017F  1283               	bcf	3,5	;RP0=0, select bank0
  2103     0180  1303               	bcf	3,6	;RP1=0, select bank0
  2104     0181  00BA               	movwf	___lwdiv@dividend+1
  2105     0182  1683               	bsf	3,5	;RP0=1, select bank1
  2106     0183  1303               	bcf	3,6	;RP1=0, select bank1
  2107     0184  082D               	movf	sprintf@val^(0+128),w
  2108     0185  1283               	bcf	3,5	;RP0=0, select bank0
  2109     0186  1303               	bcf	3,6	;RP1=0, select bank0
  2110     0187  00B9               	movwf	___lwdiv@dividend
  2111     0188  120A  158A  271F  120A  118A  	fcall	___lwdiv
  2112     018D  1283               	bcf	3,5	;RP0=0, select bank0
  2113     018E  1303               	bcf	3,6	;RP1=0, select bank0
  2114     018F  0838               	movf	?___lwdiv+1,w
  2115     0190  1683               	bsf	3,5	;RP0=1, select bank1
  2116     0191  1303               	bcf	3,6	;RP1=0, select bank1
  2117     0192  00A3               	movwf	(___lwmod@dividend+1)^(0+128)
  2118     0193  1283               	bcf	3,5	;RP0=0, select bank0
  2119     0194  1303               	bcf	3,6	;RP1=0, select bank0
  2120     0195  0837               	movf	?___lwdiv,w
  2121     0196  1683               	bsf	3,5	;RP0=1, select bank1
  2122     0197  1303               	bcf	3,6	;RP1=0, select bank1
  2123     0198  00A2               	movwf	___lwmod@dividend^(0+128)
  2124     0199  120A  158A  26DF  120A  118A  	fcall	___lwmod
  2125     019E  1683               	bsf	3,5	;RP0=1, select bank1
  2126     019F  1303               	bcf	3,6	;RP1=0, select bank1
  2127     01A0  0820               	movf	?___lwmod^(0+128),w
  2128     01A1  3E30               	addlw	48
  2129     01A2  00B3               	movwf	sprintf@c^(0+128)
  2130     01A3                     l2523:
  2131                           
  2132                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2133     01A3  0830               	movf	sprintf@sp^(0+128),w
  2134     01A4  0084               	movwf	4
  2135     01A5  0833               	movf	sprintf@c^(0+128),w
  2136     01A6  1383               	bcf	3,7	;select IRP bank0
  2137     01A7  0080               	movwf	0
  2138     01A8                     l2525:
  2139     01A8  3001               	movlw	1
  2140     01A9  00A8               	movwf	??_sprintf^(0+128)
  2141     01AA  0828               	movf	??_sprintf^(0+128),w
  2142     01AB  07B0               	addwf	sprintf@sp^(0+128),f
  2143     01AC                     l2527:
  2144                           
  2145                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2146     01AC  30FF               	movlw	255
  2147     01AD  00A8               	movwf	??_sprintf^(0+128)
  2148     01AE  0828               	movf	??_sprintf^(0+128),w
  2149     01AF  07AF               	addwf	sprintf@prec^(0+128),f
  2150     01B0  0A2F               	incf	sprintf@prec^(0+128),w
  2151     01B1  1D03               	btfss	3,2
  2152     01B2  29B4               	goto	u2601
  2153     01B3  29B5               	goto	u2600
  2154     01B4                     u2601:
  2155     01B4  2965               	goto	l2521
  2156     01B5                     u2600:
  2157     01B5                     l2529:
  2158                           
  2159                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2160     01B5  3001               	movlw	1
  2161     01B6  07A5               	addwf	sprintf@f^(0+128),f
  2162     01B7  30FF               	movlw	-1
  2163     01B8  0725               	addwf	sprintf@f^(0+128),w
  2164     01B9  0084               	movwf	4
  2165     01BA  120A  158A  200A  120A  118A  	fcall	stringdir
  2166     01BF  00B3               	movwf	sprintf@c^(0+128)
  2167     01C0  0833               	movf	sprintf@c^(0+128),w
  2168     01C1  1D03               	btfss	3,2
  2169     01C2  29C4               	goto	u2611
  2170     01C3  29C5               	goto	u2610
  2171     01C4                     u2611:
  2172     01C4  282C               	goto	l2447
  2173     01C5                     u2610:
  2174     01C5                     l2531:
  2175                           
  2176                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2177     01C5  0830               	movf	sprintf@sp^(0+128),w
  2178     01C6  0084               	movwf	4
  2179     01C7  1383               	bcf	3,7	;select IRP bank0
  2180     01C8  0180               	clrf	0
  2181     01C9                     l410:
  2182     01C9  0008               	return
  2183     01CA                     __end_of_sprintf:
  2184                           
  2185                           	psect	text3
  2186     0DED                     __ptext3:	
  2187 ;; *************** function _isdigit *****************
  2188 ;; Defined at:
  2189 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\isdigit.c"
  2190 ;; Parameters:    Size  Location     Type
  2191 ;;  c               1    wreg     unsigned char 
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;  c               1   24[BANK0 ] unsigned char 
  2194 ;; Return value:  Size  Location     Type
  2195 ;;		None               void
  2196 ;; Registers used:
  2197 ;;		wreg, status,2, status,0
  2198 ;; Tracked objects:
  2199 ;;		On entry : 0/0
  2200 ;;		On exit  : 0/0
  2201 ;;		Unchanged: 0/0
  2202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2203 ;;      Params:         0       0       0       0       0
  2204 ;;      Locals:         0       2       0       0       0
  2205 ;;      Temps:          0       0       0       0       0
  2206 ;;      Totals:         0       2       0       0       0
  2207 ;;Total ram usage:        2 bytes
  2208 ;; Hardware stack levels used: 1
  2209 ;; Hardware stack levels required when called: 3
  2210 ;; This function calls:
  2211 ;;		Nothing
  2212 ;; This function is called by:
  2213 ;;		_sprintf
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217     0DED                     _isdigit:	
  2218                           ;psect for function _isdigit
  2219                           
  2220                           
  2221                           ;incstack = 0
  2222                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2223                           ;isdigit@c stored from wreg
  2224     0DED  1283               	bcf	3,5	;RP0=0, select bank0
  2225     0DEE  1303               	bcf	3,6	;RP1=0, select bank0
  2226     0DEF  00B8               	movwf	isdigit@c
  2227     0DF0                     l2269:
  2228     0DF0  01B7               	clrf	_isdigit$1182
  2229     0DF1                     l2271:
  2230     0DF1  303A               	movlw	58
  2231     0DF2  0238               	subwf	isdigit@c,w
  2232     0DF3  1803               	skipnc
  2233     0DF4  2DF6               	goto	u2071
  2234     0DF5  2DF7               	goto	u2070
  2235     0DF6                     u2071:
  2236     0DF6  2DFF               	goto	l2277
  2237     0DF7                     u2070:
  2238     0DF7                     l2273:
  2239     0DF7  3030               	movlw	48
  2240     0DF8  0238               	subwf	isdigit@c,w
  2241     0DF9  1C03               	skipc
  2242     0DFA  2DFC               	goto	u2081
  2243     0DFB  2DFD               	goto	u2080
  2244     0DFC                     u2081:
  2245     0DFC  2DFF               	goto	l2277
  2246     0DFD                     u2080:
  2247     0DFD                     l2275:
  2248     0DFD  01B7               	clrf	_isdigit$1182
  2249     0DFE  0AB7               	incf	_isdigit$1182,f
  2250     0DFF                     l2277:
  2251     0DFF  0C37               	rrf	_isdigit$1182,w
  2252     0E00                     l867:
  2253     0E00  0008               	return
  2254     0E01                     __end_of_isdigit:
  2255                           
  2256                           	psect	text4
  2257     0E4E                     __ptext4:	
  2258 ;; *************** function ___wmul *****************
  2259 ;; Defined at:
  2260 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;  multiplier      2   23[BANK0 ] unsigned int 
  2263 ;;  multiplicand    2   25[BANK0 ] unsigned int 
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;  product         2   27[BANK0 ] unsigned int 
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  2   23[BANK0 ] unsigned int 
  2268 ;; Registers used:
  2269 ;;		wreg, status,2, status,0
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2275 ;;      Params:         0       4       0       0       0
  2276 ;;      Locals:         0       2       0       0       0
  2277 ;;      Temps:          0       0       0       0       0
  2278 ;;      Totals:         0       6       0       0       0
  2279 ;;Total ram usage:        6 bytes
  2280 ;; Hardware stack levels used: 1
  2281 ;; Hardware stack levels required when called: 3
  2282 ;; This function calls:
  2283 ;;		Nothing
  2284 ;; This function is called by:
  2285 ;;		_sprintf
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289     0E4E                     ___wmul:	
  2290                           ;psect for function ___wmul
  2291                           
  2292     0E4E                     l2281:	
  2293                           ;incstack = 0
  2294                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2295                           
  2296     0E4E  1283               	bcf	3,5	;RP0=0, select bank0
  2297     0E4F  1303               	bcf	3,6	;RP1=0, select bank0
  2298     0E50  01BB               	clrf	___wmul@product
  2299     0E51  01BC               	clrf	___wmul@product+1
  2300     0E52                     l2283:
  2301     0E52  1C37               	btfss	___wmul@multiplier,0
  2302     0E53  2E55               	goto	u2091
  2303     0E54  2E56               	goto	u2090
  2304     0E55                     u2091:
  2305     0E55  2E5C               	goto	l414
  2306     0E56                     u2090:
  2307     0E56                     l2285:
  2308     0E56  0839               	movf	___wmul@multiplicand,w
  2309     0E57  07BB               	addwf	___wmul@product,f
  2310     0E58  1803               	skipnc
  2311     0E59  0ABC               	incf	___wmul@product+1,f
  2312     0E5A  083A               	movf	___wmul@multiplicand+1,w
  2313     0E5B  07BC               	addwf	___wmul@product+1,f
  2314     0E5C                     l414:
  2315     0E5C  3001               	movlw	1
  2316     0E5D                     u2105:
  2317     0E5D  1003               	clrc
  2318     0E5E  0DB9               	rlf	___wmul@multiplicand,f
  2319     0E5F  0DBA               	rlf	___wmul@multiplicand+1,f
  2320     0E60  3EFF               	addlw	-1
  2321     0E61  1D03               	skipz
  2322     0E62  2E5D               	goto	u2105
  2323     0E63                     l2287:
  2324     0E63  3001               	movlw	1
  2325     0E64                     u2115:
  2326     0E64  1003               	clrc
  2327     0E65  0CB8               	rrf	___wmul@multiplier+1,f
  2328     0E66  0CB7               	rrf	___wmul@multiplier,f
  2329     0E67  3EFF               	addlw	-1
  2330     0E68  1D03               	skipz
  2331     0E69  2E64               	goto	u2115
  2332     0E6A                     l2289:
  2333     0E6A  0837               	movf	___wmul@multiplier,w
  2334     0E6B  0438               	iorwf	___wmul@multiplier+1,w
  2335     0E6C  1D03               	btfss	3,2
  2336     0E6D  2E6F               	goto	u2121
  2337     0E6E  2E70               	goto	u2120
  2338     0E6F                     u2121:
  2339     0E6F  2E52               	goto	l2283
  2340     0E70                     u2120:
  2341     0E70                     l2291:
  2342     0E70  083C               	movf	___wmul@product+1,w
  2343     0E71  00B8               	movwf	?___wmul+1
  2344     0E72  083B               	movf	___wmul@product,w
  2345     0E73  00B7               	movwf	?___wmul
  2346     0E74                     l416:
  2347     0E74  0008               	return
  2348     0E75                     __end_of___wmul:
  2349                           
  2350                           	psect	text5
  2351     0EDF                     __ptext5:	
  2352 ;; *************** function ___lwmod *****************
  2353 ;; Defined at:
  2354 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2355 ;; Parameters:    Size  Location     Type
  2356 ;;  divisor         2    0[BANK1 ] unsigned int 
  2357 ;;  dividend        2    2[BANK1 ] unsigned int 
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;  counter         1    4[BANK1 ] unsigned char 
  2360 ;; Return value:  Size  Location     Type
  2361 ;;                  2    0[BANK1 ] unsigned int 
  2362 ;; Registers used:
  2363 ;;		wreg, status,2, status,0
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2369 ;;      Params:         0       0       4       0       0
  2370 ;;      Locals:         0       0       1       0       0
  2371 ;;      Temps:          0       1       0       0       0
  2372 ;;      Totals:         0       1       5       0       0
  2373 ;;Total ram usage:        6 bytes
  2374 ;; Hardware stack levels used: 1
  2375 ;; Hardware stack levels required when called: 3
  2376 ;; This function calls:
  2377 ;;		Nothing
  2378 ;; This function is called by:
  2379 ;;		_sprintf
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383     0EDF                     ___lwmod:	
  2384                           ;psect for function ___lwmod
  2385                           
  2386     0EDF                     l2381:	
  2387                           ;incstack = 0
  2388                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2389                           
  2390     0EDF  1683               	bsf	3,5	;RP0=1, select bank1
  2391     0EE0  1303               	bcf	3,6	;RP1=0, select bank1
  2392     0EE1  0820               	movf	___lwmod@divisor^(0+128),w
  2393     0EE2  0421               	iorwf	(___lwmod@divisor+1)^(0+128),w
  2394     0EE3  1903               	btfsc	3,2
  2395     0EE4  2EE6               	goto	u2371
  2396     0EE5  2EE7               	goto	u2370
  2397     0EE6                     u2371:
  2398     0EE6  2F1A               	goto	l2399
  2399     0EE7                     u2370:
  2400     0EE7                     l2383:
  2401     0EE7  01A4               	clrf	___lwmod@counter^(0+128)
  2402     0EE8  0AA4               	incf	___lwmod@counter^(0+128),f
  2403     0EE9  2EF9               	goto	l2389
  2404     0EEA                     l2385:
  2405     0EEA  3001               	movlw	1
  2406     0EEB                     u2385:
  2407     0EEB  1003               	clrc
  2408     0EEC  0DA0               	rlf	___lwmod@divisor^(0+128),f
  2409     0EED  0DA1               	rlf	(___lwmod@divisor+1)^(0+128),f
  2410     0EEE  3EFF               	addlw	-1
  2411     0EEF  1D03               	skipz
  2412     0EF0  2EEB               	goto	u2385
  2413     0EF1                     l2387:
  2414     0EF1  3001               	movlw	1
  2415     0EF2  1283               	bcf	3,5	;RP0=0, select bank0
  2416     0EF3  1303               	bcf	3,6	;RP1=0, select bank0
  2417     0EF4  00BF               	movwf	??___lwmod
  2418     0EF5  083F               	movf	??___lwmod,w
  2419     0EF6  1683               	bsf	3,5	;RP0=1, select bank1
  2420     0EF7  1303               	bcf	3,6	;RP1=0, select bank1
  2421     0EF8  07A4               	addwf	___lwmod@counter^(0+128),f
  2422     0EF9                     l2389:
  2423     0EF9  1FA1               	btfss	(___lwmod@divisor+1)^(0+128),7
  2424     0EFA  2EFC               	goto	u2391
  2425     0EFB  2EFD               	goto	u2390
  2426     0EFC                     u2391:
  2427     0EFC  2EEA               	goto	l2385
  2428     0EFD                     u2390:
  2429     0EFD                     l2391:
  2430     0EFD  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  2431     0EFE  0223               	subwf	(___lwmod@dividend+1)^(0+128),w
  2432     0EFF  1D03               	skipz
  2433     0F00  2F03               	goto	u2405
  2434     0F01  0820               	movf	___lwmod@divisor^(0+128),w
  2435     0F02  0222               	subwf	___lwmod@dividend^(0+128),w
  2436     0F03                     u2405:
  2437     0F03  1C03               	skipc
  2438     0F04  2F06               	goto	u2401
  2439     0F05  2F07               	goto	u2400
  2440     0F06                     u2401:
  2441     0F06  2F0D               	goto	l2395
  2442     0F07                     u2400:
  2443     0F07                     l2393:
  2444     0F07  0820               	movf	___lwmod@divisor^(0+128),w
  2445     0F08  02A2               	subwf	___lwmod@dividend^(0+128),f
  2446     0F09  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  2447     0F0A  1C03               	skipc
  2448     0F0B  03A3               	decf	(___lwmod@dividend+1)^(0+128),f
  2449     0F0C  02A3               	subwf	(___lwmod@dividend+1)^(0+128),f
  2450     0F0D                     l2395:
  2451     0F0D  3001               	movlw	1
  2452     0F0E                     u2415:
  2453     0F0E  1003               	clrc
  2454     0F0F  0CA1               	rrf	(___lwmod@divisor+1)^(0+128),f
  2455     0F10  0CA0               	rrf	___lwmod@divisor^(0+128),f
  2456     0F11  3EFF               	addlw	-1
  2457     0F12  1D03               	skipz
  2458     0F13  2F0E               	goto	u2415
  2459     0F14                     l2397:
  2460     0F14  3001               	movlw	1
  2461     0F15  02A4               	subwf	___lwmod@counter^(0+128),f
  2462     0F16  1D03               	btfss	3,2
  2463     0F17  2F19               	goto	u2421
  2464     0F18  2F1A               	goto	u2420
  2465     0F19                     u2421:
  2466     0F19  2EFD               	goto	l2391
  2467     0F1A                     u2420:
  2468     0F1A                     l2399:
  2469     0F1A  0823               	movf	(___lwmod@dividend+1)^(0+128),w
  2470     0F1B  00A1               	movwf	(?___lwmod+1)^(0+128)
  2471     0F1C  0822               	movf	___lwmod@dividend^(0+128),w
  2472     0F1D  00A0               	movwf	?___lwmod^(0+128)
  2473     0F1E                     l696:
  2474     0F1E  0008               	return
  2475     0F1F                     __end_of___lwmod:
  2476                           
  2477                           	psect	text6
  2478     0F1F                     __ptext6:	
  2479 ;; *************** function ___lwdiv *****************
  2480 ;; Defined at:
  2481 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;  divisor         2   23[BANK0 ] unsigned int 
  2484 ;;  dividend        2   25[BANK0 ] unsigned int 
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;  quotient        2   29[BANK0 ] unsigned int 
  2487 ;;  counter         1   28[BANK0 ] unsigned char 
  2488 ;; Return value:  Size  Location     Type
  2489 ;;                  2   23[BANK0 ] unsigned int 
  2490 ;; Registers used:
  2491 ;;		wreg, status,2, status,0
  2492 ;; Tracked objects:
  2493 ;;		On entry : 0/0
  2494 ;;		On exit  : 0/0
  2495 ;;		Unchanged: 0/0
  2496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2497 ;;      Params:         0       4       0       0       0
  2498 ;;      Locals:         0       3       0       0       0
  2499 ;;      Temps:          0       1       0       0       0
  2500 ;;      Totals:         0       8       0       0       0
  2501 ;;Total ram usage:        8 bytes
  2502 ;; Hardware stack levels used: 1
  2503 ;; Hardware stack levels required when called: 3
  2504 ;; This function calls:
  2505 ;;		Nothing
  2506 ;; This function is called by:
  2507 ;;		_sprintf
  2508 ;; This function uses a non-reentrant model
  2509 ;;
  2510                           
  2511     0F1F                     ___lwdiv:	
  2512                           ;psect for function ___lwdiv
  2513                           
  2514     0F1F                     l2355:	
  2515                           ;incstack = 0
  2516                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2517                           
  2518     0F1F  1283               	bcf	3,5	;RP0=0, select bank0
  2519     0F20  1303               	bcf	3,6	;RP1=0, select bank0
  2520     0F21  01BD               	clrf	___lwdiv@quotient
  2521     0F22  01BE               	clrf	___lwdiv@quotient+1
  2522     0F23                     l2357:
  2523     0F23  0837               	movf	___lwdiv@divisor,w
  2524     0F24  0438               	iorwf	___lwdiv@divisor+1,w
  2525     0F25  1903               	btfsc	3,2
  2526     0F26  2F28               	goto	u2301
  2527     0F27  2F29               	goto	u2300
  2528     0F28                     u2301:
  2529     0F28  2F60               	goto	l2377
  2530     0F29                     u2300:
  2531     0F29                     l2359:
  2532     0F29  01BC               	clrf	___lwdiv@counter
  2533     0F2A  0ABC               	incf	___lwdiv@counter,f
  2534     0F2B  2F37               	goto	l2365
  2535     0F2C                     l2361:
  2536     0F2C  3001               	movlw	1
  2537     0F2D                     u2315:
  2538     0F2D  1003               	clrc
  2539     0F2E  0DB7               	rlf	___lwdiv@divisor,f
  2540     0F2F  0DB8               	rlf	___lwdiv@divisor+1,f
  2541     0F30  3EFF               	addlw	-1
  2542     0F31  1D03               	skipz
  2543     0F32  2F2D               	goto	u2315
  2544     0F33                     l2363:
  2545     0F33  3001               	movlw	1
  2546     0F34  00BB               	movwf	??___lwdiv
  2547     0F35  083B               	movf	??___lwdiv,w
  2548     0F36  07BC               	addwf	___lwdiv@counter,f
  2549     0F37                     l2365:
  2550     0F37  1FB8               	btfss	___lwdiv@divisor+1,7
  2551     0F38  2F3A               	goto	u2321
  2552     0F39  2F3B               	goto	u2320
  2553     0F3A                     u2321:
  2554     0F3A  2F2C               	goto	l2361
  2555     0F3B                     u2320:
  2556     0F3B                     l2367:
  2557     0F3B  3001               	movlw	1
  2558     0F3C                     u2335:
  2559     0F3C  1003               	clrc
  2560     0F3D  0DBD               	rlf	___lwdiv@quotient,f
  2561     0F3E  0DBE               	rlf	___lwdiv@quotient+1,f
  2562     0F3F  3EFF               	addlw	-1
  2563     0F40  1D03               	skipz
  2564     0F41  2F3C               	goto	u2335
  2565     0F42  0838               	movf	___lwdiv@divisor+1,w
  2566     0F43  023A               	subwf	___lwdiv@dividend+1,w
  2567     0F44  1D03               	skipz
  2568     0F45  2F48               	goto	u2345
  2569     0F46  0837               	movf	___lwdiv@divisor,w
  2570     0F47  0239               	subwf	___lwdiv@dividend,w
  2571     0F48                     u2345:
  2572     0F48  1C03               	skipc
  2573     0F49  2F4B               	goto	u2341
  2574     0F4A  2F4C               	goto	u2340
  2575     0F4B                     u2341:
  2576     0F4B  2F53               	goto	l2373
  2577     0F4C                     u2340:
  2578     0F4C                     l2369:
  2579     0F4C  0837               	movf	___lwdiv@divisor,w
  2580     0F4D  02B9               	subwf	___lwdiv@dividend,f
  2581     0F4E  0838               	movf	___lwdiv@divisor+1,w
  2582     0F4F  1C03               	skipc
  2583     0F50  03BA               	decf	___lwdiv@dividend+1,f
  2584     0F51  02BA               	subwf	___lwdiv@dividend+1,f
  2585     0F52                     l2371:
  2586     0F52  143D               	bsf	___lwdiv@quotient,0
  2587     0F53                     l2373:
  2588     0F53  3001               	movlw	1
  2589     0F54                     u2355:
  2590     0F54  1003               	clrc
  2591     0F55  0CB8               	rrf	___lwdiv@divisor+1,f
  2592     0F56  0CB7               	rrf	___lwdiv@divisor,f
  2593     0F57  3EFF               	addlw	-1
  2594     0F58  1D03               	skipz
  2595     0F59  2F54               	goto	u2355
  2596     0F5A                     l2375:
  2597     0F5A  3001               	movlw	1
  2598     0F5B  02BC               	subwf	___lwdiv@counter,f
  2599     0F5C  1D03               	btfss	3,2
  2600     0F5D  2F5F               	goto	u2361
  2601     0F5E  2F60               	goto	u2360
  2602     0F5F                     u2361:
  2603     0F5F  2F3B               	goto	l2367
  2604     0F60                     u2360:
  2605     0F60                     l2377:
  2606     0F60  083E               	movf	___lwdiv@quotient+1,w
  2607     0F61  00B8               	movwf	?___lwdiv+1
  2608     0F62  083D               	movf	___lwdiv@quotient,w
  2609     0F63  00B7               	movwf	?___lwdiv
  2610     0F64                     l686:
  2611     0F64  0008               	return
  2612     0F65                     __end_of___lwdiv:
  2613                           
  2614                           	psect	text7
  2615     0EAA                     __ptext7:	
  2616 ;; *************** function _setup *****************
  2617 ;; Defined at:
  2618 ;;		line 246 in file "Kart_main.c"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;		None
  2621 ;; Auto vars:     Size  Location     Type
  2622 ;;		None
  2623 ;; Return value:  Size  Location     Type
  2624 ;;                  1    wreg      void 
  2625 ;; Registers used:
  2626 ;;		wreg, status,2, status,0
  2627 ;; Tracked objects:
  2628 ;;		On entry : 0/0
  2629 ;;		On exit  : 0/0
  2630 ;;		Unchanged: 0/0
  2631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2632 ;;      Params:         0       0       0       0       0
  2633 ;;      Locals:         0       0       0       0       0
  2634 ;;      Temps:          0       1       0       0       0
  2635 ;;      Totals:         0       1       0       0       0
  2636 ;;Total ram usage:        1 bytes
  2637 ;; Hardware stack levels used: 1
  2638 ;; Hardware stack levels required when called: 3
  2639 ;; This function calls:
  2640 ;;		Nothing
  2641 ;; This function is called by:
  2642 ;;		_main
  2643 ;; This function uses a non-reentrant model
  2644 ;;
  2645                           
  2646     0EAA                     _setup:	
  2647                           ;psect for function _setup
  2648                           
  2649     0EAA                     l1895:	
  2650                           ;incstack = 0
  2651                           ; Regs used in _setup: [wreg+status,2+status,0]
  2652                           
  2653                           
  2654                           ;Kart_main.c: 247:     ANSEL = 0b00000011;
  2655     0EAA  3003               	movlw	3
  2656     0EAB  1683               	bsf	3,5	;RP0=1, select bank3
  2657     0EAC  1703               	bsf	3,6	;RP1=1, select bank3
  2658     0EAD  0088               	movwf	8	;volatile
  2659     0EAE                     l1897:
  2660                           
  2661                           ;Kart_main.c: 248:     ANSELH = 0;
  2662     0EAE  0189               	clrf	9	;volatile
  2663     0EAF                     l1899:
  2664                           
  2665                           ;Kart_main.c: 250:     TRISA = 0xFF;
  2666     0EAF  30FF               	movlw	255
  2667     0EB0  1683               	bsf	3,5	;RP0=1, select bank1
  2668     0EB1  1303               	bcf	3,6	;RP1=0, select bank1
  2669     0EB2  0085               	movwf	5	;volatile
  2670     0EB3                     l1901:
  2671                           
  2672                           ;Kart_main.c: 251:     TRISB = 0b11111111;
  2673     0EB3  30FF               	movlw	255
  2674     0EB4  0086               	movwf	6	;volatile
  2675     0EB5                     l1903:
  2676                           
  2677                           ;Kart_main.c: 253:     OPTION_REGbits.nRBPU = 0;
  2678     0EB5  1381               	bcf	1,7	;volatile
  2679     0EB6                     l1905:
  2680                           
  2681                           ;Kart_main.c: 254:     WPUB = 0b1111;
  2682     0EB6  300F               	movlw	15
  2683     0EB7  0095               	movwf	21	;volatile
  2684                           
  2685                           ;Kart_main.c: 257:     PORTD = 0;
  2686     0EB8  1283               	bcf	3,5	;RP0=0, select bank0
  2687     0EB9  1303               	bcf	3,6	;RP1=0, select bank0
  2688     0EBA  0188               	clrf	8	;volatile
  2689                           
  2690                           ;Kart_main.c: 258:     PORTE = 0;
  2691     0EBB  0189               	clrf	9	;volatile
  2692     0EBC                     l1907:
  2693                           
  2694                           ;Kart_main.c: 264:     OSCCONbits.IRCF = 0b0111;
  2695     0EBC  3070               	movlw	112
  2696     0EBD  1683               	bsf	3,5	;RP0=1, select bank1
  2697     0EBE  1303               	bcf	3,6	;RP1=0, select bank1
  2698     0EBF  048F               	iorwf	15,f	;volatile
  2699     0EC0                     l1909:
  2700                           
  2701                           ;Kart_main.c: 265:     OSCCONbits.SCS = 1;
  2702     0EC0  140F               	bsf	15,0	;volatile
  2703     0EC1                     l1911:
  2704                           
  2705                           ;Kart_main.c: 268:     ADCON1bits.ADFM = 0;
  2706     0EC1  139F               	bcf	31,7	;volatile
  2707     0EC2                     l1913:
  2708                           
  2709                           ;Kart_main.c: 269:     ADCON1bits.VCFG0 = 0;
  2710     0EC2  121F               	bcf	31,4	;volatile
  2711     0EC3                     l1915:
  2712                           
  2713                           ;Kart_main.c: 270:     ADCON1bits.VCFG1 = 0;
  2714     0EC3  129F               	bcf	31,5	;volatile
  2715     0EC4                     l1917:
  2716                           
  2717                           ;Kart_main.c: 272:     ADCON0bits.ADCS = 0b01;
  2718     0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  2719     0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  2720     0EC6  081F               	movf	31,w	;volatile
  2721     0EC7  393F               	andlw	-193
  2722     0EC8  3840               	iorlw	64
  2723     0EC9  009F               	movwf	31	;volatile
  2724     0ECA                     l1919:
  2725                           
  2726                           ;Kart_main.c: 273:     ADCON0bits.CHS = 0;
  2727     0ECA  30C3               	movlw	-61
  2728     0ECB  059F               	andwf	31,f	;volatile
  2729     0ECC                     l1921:
  2730                           
  2731                           ;Kart_main.c: 274:     ADCON0bits.ADON= 1;
  2732     0ECC  141F               	bsf	31,0	;volatile
  2733     0ECD                     l1923:
  2734                           
  2735                           ;Kart_main.c: 275:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  2736     0ECD  300F               	movlw	15
  2737     0ECE  1283               	bcf	3,5	;RP0=0, select bank0
  2738     0ECF  1303               	bcf	3,6	;RP1=0, select bank0
  2739     0ED0  00B7               	movwf	??_setup
  2740     0ED1                     u2697:
  2741     0ED1  0BB7               	decfsz	??_setup,f
  2742     0ED2  2ED1               	goto	u2697
  2743     0ED3  2ED4               	nop2
  2744     0ED4                     l1925:
  2745                           
  2746                           ;Kart_main.c: 279:     PIR1bits.ADIF = 0;
  2747     0ED4  1283               	bcf	3,5	;RP0=0, select bank0
  2748     0ED5  1303               	bcf	3,6	;RP1=0, select bank0
  2749     0ED6  130C               	bcf	12,6	;volatile
  2750     0ED7                     l1927:
  2751                           
  2752                           ;Kart_main.c: 280:     PIE1bits.ADIE = 1;
  2753     0ED7  1683               	bsf	3,5	;RP0=1, select bank1
  2754     0ED8  1303               	bcf	3,6	;RP1=0, select bank1
  2755     0ED9  170C               	bsf	12,6	;volatile
  2756     0EDA                     l1929:
  2757                           
  2758                           ;Kart_main.c: 282:     INTCONbits.RBIE = 0;
  2759     0EDA  118B               	bcf	11,3	;volatile
  2760     0EDB                     l1931:
  2761                           
  2762                           ;Kart_main.c: 283:     INTCONbits.RBIF = 1;
  2763     0EDB  140B               	bsf	11,0	;volatile
  2764     0EDC                     l1933:
  2765                           
  2766                           ;Kart_main.c: 285:     INTCONbits.PEIE = 1;
  2767     0EDC  170B               	bsf	11,6	;volatile
  2768     0EDD                     l1935:
  2769                           
  2770                           ;Kart_main.c: 286:     INTCONbits.GIE = 1;
  2771     0EDD  178B               	bsf	11,7	;volatile
  2772     0EDE                     l166:
  2773     0EDE  0008               	return
  2774     0EDF                     __end_of_setup:
  2775                           
  2776                           	psect	text8
  2777     0E17                     __ptext8:	
  2778 ;; *************** function _preguntas *****************
  2779 ;; Defined at:
  2780 ;;		line 288 in file "Kart_main.c"
  2781 ;; Parameters:    Size  Location     Type
  2782 ;;		None
  2783 ;; Auto vars:     Size  Location     Type
  2784 ;;		None
  2785 ;; Return value:  Size  Location     Type
  2786 ;;                  1    wreg      void 
  2787 ;; Registers used:
  2788 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2789 ;; Tracked objects:
  2790 ;;		On entry : 0/0
  2791 ;;		On exit  : 0/0
  2792 ;;		Unchanged: 0/0
  2793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2794 ;;      Params:         0       0       0       0       0
  2795 ;;      Locals:         0       0       0       0       0
  2796 ;;      Temps:          0       0       0       0       0
  2797 ;;      Totals:         0       0       0       0       0
  2798 ;;Total ram usage:        0 bytes
  2799 ;; Hardware stack levels used: 1
  2800 ;; Hardware stack levels required when called: 5
  2801 ;; This function calls:
  2802 ;;		_UART_Print
  2803 ;; This function is called by:
  2804 ;;		_main
  2805 ;; This function uses a non-reentrant model
  2806 ;;
  2807                           
  2808     0E17                     _preguntas:	
  2809                           ;psect for function _preguntas
  2810                           
  2811     0E17                     l2079:	
  2812                           ;incstack = 0
  2813                           ; Regs used in _preguntas: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2814                           
  2815                           
  2816                           ;Kart_main.c: 290:     UART_Print ("1.Leer potenciometro\r\n");
  2817     0E17  301A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2818     0E18  1283               	bcf	3,5	;RP0=0, select bank0
  2819     0E19  1303               	bcf	3,6	;RP1=0, select bank0
  2820     0E1A  00B8               	movwf	UART_Print@data
  2821     0E1B  3080               	movlw	128
  2822     0E1C  00B9               	movwf	UART_Print@data+1
  2823     0E1D  120A  158A  2675  120A  158A  	fcall	_UART_Print
  2824                           
  2825                           ;Kart_main.c: 291:     UART_Print (message);
  2826     0E22  300B               	movlw	(low ((_message-__stringbase)| (0+32768)))& (0+255)
  2827     0E23  1283               	bcf	3,5	;RP0=0, select bank0
  2828     0E24  1303               	bcf	3,6	;RP1=0, select bank0
  2829     0E25  00B8               	movwf	UART_Print@data
  2830     0E26  3080               	movlw	128
  2831     0E27  00B9               	movwf	UART_Print@data+1
  2832     0E28  120A  158A  2675  120A  158A  	fcall	_UART_Print
  2833     0E2D                     l169:
  2834     0E2D  0008               	return
  2835     0E2E                     __end_of_preguntas:
  2836                           
  2837                           	psect	text9
  2838     0E75                     __ptext9:	
  2839 ;; *************** function _UART_Print *****************
  2840 ;; Defined at:
  2841 ;;		line 65 in file "USARTmodl.c"
  2842 ;; Parameters:    Size  Location     Type
  2843 ;;  data            2   24[BANK0 ] PTR const unsigned char 
  2844 ;;		 -> STR_7(23), STR_6(3), ROM(8192), STR_5(3), 
  2845 ;;		 -> main@text(9), STR_3(3), STR_2(3), message(15), 
  2846 ;;		 -> STR_1(23), 
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;  i               1   28[BANK0 ] unsigned char 
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  1    wreg      void 
  2851 ;; Registers used:
  2852 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2858 ;;      Params:         0       2       0       0       0
  2859 ;;      Locals:         0       1       0       0       0
  2860 ;;      Temps:          0       2       0       0       0
  2861 ;;      Totals:         0       5       0       0       0
  2862 ;;Total ram usage:        5 bytes
  2863 ;; Hardware stack levels used: 1
  2864 ;; Hardware stack levels required when called: 4
  2865 ;; This function calls:
  2866 ;;		_UART_PutC
  2867 ;; This function is called by:
  2868 ;;		_main
  2869 ;;		_preguntas
  2870 ;; This function uses a non-reentrant model
  2871 ;;
  2872                           
  2873     0E75                     _UART_Print:	
  2874                           ;psect for function _UART_Print
  2875                           
  2876     0E75                     l1617:	
  2877                           ;incstack = 0
  2878                           ; Regs used in _UART_Print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2879                           
  2880                           
  2881                           ;USARTmodl.c: 65: void UART_Print(const char *data);USARTmodl.c: 66: {;USARTmodl.c: 67: 
      +                            uint8_t i = 0;
  2882     0E75  1283               	bcf	3,5	;RP0=0, select bank0
  2883     0E76  1303               	bcf	3,6	;RP1=0, select bank0
  2884     0E77  01BC               	clrf	UART_Print@i
  2885                           
  2886                           ;USARTmodl.c: 68:   while (data[i] != '\0')
  2887     0E78  2E94               	goto	l1623
  2888     0E79                     l1619:
  2889                           
  2890                           ;USARTmodl.c: 69:     UART_PutC (data[i++]);
  2891     0E79  083C               	movf	UART_Print@i,w
  2892     0E7A  00BA               	movwf	??_UART_Print
  2893     0E7B  01BB               	clrf	??_UART_Print+1
  2894     0E7C  083A               	movf	??_UART_Print,w
  2895     0E7D  0738               	addwf	UART_Print@data,w
  2896     0E7E  0084               	movwf	4
  2897     0E7F  083B               	movf	??_UART_Print+1,w
  2898     0E80  1803               	skipnc
  2899     0E81  0A3B               	incf	??_UART_Print+1,w
  2900     0E82  0739               	addwf	UART_Print@data+1,w
  2901     0E83  00FF               	movwf	btemp+1
  2902     0E84  120A  158A  2000  120A  158A  	fcall	stringtab
  2903     0E89  120A  118A  27F2  120A  158A  	fcall	_UART_PutC
  2904     0E8E                     l1621:
  2905     0E8E  3001               	movlw	1
  2906     0E8F  1283               	bcf	3,5	;RP0=0, select bank0
  2907     0E90  1303               	bcf	3,6	;RP1=0, select bank0
  2908     0E91  00BA               	movwf	??_UART_Print
  2909     0E92  083A               	movf	??_UART_Print,w
  2910     0E93  07BC               	addwf	UART_Print@i,f
  2911     0E94                     l1623:
  2912                           
  2913                           ;USARTmodl.c: 68:   while (data[i] != '\0')
  2914     0E94  083C               	movf	UART_Print@i,w
  2915     0E95  00BA               	movwf	??_UART_Print
  2916     0E96  01BB               	clrf	??_UART_Print+1
  2917     0E97  083A               	movf	??_UART_Print,w
  2918     0E98  0738               	addwf	UART_Print@data,w
  2919     0E99  0084               	movwf	4
  2920     0E9A  083B               	movf	??_UART_Print+1,w
  2921     0E9B  1803               	skipnc
  2922     0E9C  0A3B               	incf	??_UART_Print+1,w
  2923     0E9D  0739               	addwf	UART_Print@data+1,w
  2924     0E9E  00FF               	movwf	btemp+1
  2925     0E9F  120A  158A  2000  120A  158A  	fcall	stringtab
  2926     0EA4  3A00               	xorlw	0
  2927     0EA5  1D03               	skipz
  2928     0EA6  2EA8               	goto	u1051
  2929     0EA7  2EA9               	goto	u1050
  2930     0EA8                     u1051:
  2931     0EA8  2E79               	goto	l1619
  2932     0EA9                     u1050:
  2933     0EA9                     l259:
  2934     0EA9  0008               	return
  2935     0EAA                     __end_of_UART_Print:
  2936                           
  2937                           	psect	text10
  2938     07F2                     __ptext10:	
  2939 ;; *************** function _UART_PutC *****************
  2940 ;; Defined at:
  2941 ;;		line 59 in file "USARTmodl.c"
  2942 ;; Parameters:    Size  Location     Type
  2943 ;;  data            1    wreg     const unsigned char 
  2944 ;; Auto vars:     Size  Location     Type
  2945 ;;  data            1   23[BANK0 ] const unsigned char 
  2946 ;; Return value:  Size  Location     Type
  2947 ;;                  1    wreg      void 
  2948 ;; Registers used:
  2949 ;;		wreg
  2950 ;; Tracked objects:
  2951 ;;		On entry : 0/0
  2952 ;;		On exit  : 0/0
  2953 ;;		Unchanged: 0/0
  2954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2955 ;;      Params:         0       0       0       0       0
  2956 ;;      Locals:         0       1       0       0       0
  2957 ;;      Temps:          0       0       0       0       0
  2958 ;;      Totals:         0       1       0       0       0
  2959 ;;Total ram usage:        1 bytes
  2960 ;; Hardware stack levels used: 1
  2961 ;; Hardware stack levels required when called: 3
  2962 ;; This function calls:
  2963 ;;		Nothing
  2964 ;; This function is called by:
  2965 ;;		_main
  2966 ;;		_UART_Print
  2967 ;; This function uses a non-reentrant model
  2968 ;;
  2969                           
  2970     07F2                     _UART_PutC:	
  2971                           ;psect for function _UART_PutC
  2972                           
  2973                           
  2974                           ;incstack = 0
  2975                           ; Regs used in _UART_PutC: [wreg]
  2976                           ;UART_PutC@data stored from wreg
  2977     07F2  1283               	bcf	3,5	;RP0=0, select bank0
  2978     07F3  1303               	bcf	3,6	;RP1=0, select bank0
  2979     07F4  00B7               	movwf	UART_PutC@data
  2980     07F5                     l1613:
  2981     07F5                     l250:	
  2982                           ;USARTmodl.c: 59: void UART_PutC(const char data);USARTmodl.c: 60: {;USARTmodl.c: 61:   
      +                          while (TRMT == 0);
  2983                           
  2984     07F5  1683               	bsf	3,5	;RP0=1, select bank1
  2985     07F6  1303               	bcf	3,6	;RP1=0, select bank1
  2986     07F7  1C98               	btfss	24,1	;volatile
  2987     07F8  2FFA               	goto	u1041
  2988     07F9  2FFB               	goto	u1040
  2989     07FA                     u1041:
  2990     07FA  2FF5               	goto	l250
  2991     07FB                     u1040:
  2992     07FB                     l1615:
  2993                           
  2994                           ;USARTmodl.c: 62:   TXREG = data;
  2995     07FB  1283               	bcf	3,5	;RP0=0, select bank0
  2996     07FC  1303               	bcf	3,6	;RP1=0, select bank0
  2997     07FD  0837               	movf	UART_PutC@data,w
  2998     07FE  0099               	movwf	25	;volatile
  2999     07FF                     l253:
  3000     07FF  0008               	return
  3001     0800                     __end_of_UART_PutC:
  3002                           
  3003                           	psect	text11
  3004     042F                     __ptext11:	
  3005 ;; *************** function _UART_Init *****************
  3006 ;; Defined at:
  3007 ;;		line 14 in file "USARTmodl.c"
  3008 ;; Parameters:    Size  Location     Type
  3009 ;;  baud_rate       4    5[BANK1 ] const unsigned long 
  3010 ;; Auto vars:     Size  Location     Type
  3011 ;;  n               2   13[BANK1 ] int 
  3012 ;; Return value:  Size  Location     Type
  3013 ;;                  1    wreg      void 
  3014 ;; Registers used:
  3015 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3016 ;; Tracked objects:
  3017 ;;		On entry : 0/0
  3018 ;;		On exit  : 0/0
  3019 ;;		Unchanged: 0/0
  3020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3021 ;;      Params:         0       0       4       0       0
  3022 ;;      Locals:         0       0       2       0       0
  3023 ;;      Temps:          0       0       4       0       0
  3024 ;;      Totals:         0       0      10       0       0
  3025 ;;Total ram usage:       10 bytes
  3026 ;; Hardware stack levels used: 1
  3027 ;; Hardware stack levels required when called: 4
  3028 ;; This function calls:
  3029 ;;		___lldiv
  3030 ;; This function is called by:
  3031 ;;		_main
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           
  3035     042F                     _UART_Init:	
  3036                           ;psect for function _UART_Init
  3037                           
  3038     042F                     l2429:	
  3039                           ;incstack = 0
  3040                           ; Regs used in _UART_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3041                           
  3042                           
  3043                           ;USARTmodl.c: 14: void UART_Init(const uint32_t baud_rate);USARTmodl.c: 15: {;USARTmodl.
      +                          c: 16:   int16_t n = ( 8000000 / (16 * baud_rate) ) - 1;
  3044     042F  1683               	bsf	3,5	;RP0=1, select bank1
  3045     0430  1303               	bcf	3,6	;RP1=0, select bank1
  3046     0431  0825               	movf	UART_Init@baud_rate^(0+128),w
  3047     0432  00A9               	movwf	??_UART_Init^(0+128)
  3048     0433  0826               	movf	(UART_Init@baud_rate+1)^(0+128),w
  3049     0434  00AA               	movwf	(??_UART_Init^(0+128)+1)
  3050     0435  0827               	movf	(UART_Init@baud_rate+2)^(0+128),w
  3051     0436  00AB               	movwf	(??_UART_Init^(0+128)+2)
  3052     0437  0828               	movf	(UART_Init@baud_rate+3)^(0+128),w
  3053     0438  00AC               	movwf	(??_UART_Init^(0+128)+3)
  3054     0439  3004               	movlw	4
  3055     043A                     u2445:
  3056     043A  1003               	clrc
  3057     043B  0DA9               	rlf	??_UART_Init^(0+128),f
  3058     043C  0DAA               	rlf	(??_UART_Init^(0+128)+1),f
  3059     043D  0DAB               	rlf	(??_UART_Init^(0+128)+2),f
  3060     043E  0DAC               	rlf	(??_UART_Init^(0+128)+3),f
  3061     043F                     u2440:
  3062     043F  3EFF               	addlw	-1
  3063     0440  1D03               	skipz
  3064     0441  2C3A               	goto	u2445
  3065     0442  082C               	movf	(??_UART_Init+3)^(0+128),w
  3066     0443  1283               	bcf	3,5	;RP0=0, select bank0
  3067     0444  1303               	bcf	3,6	;RP1=0, select bank0
  3068     0445  00BA               	movwf	___lldiv@divisor+3
  3069     0446  1683               	bsf	3,5	;RP0=1, select bank1
  3070     0447  1303               	bcf	3,6	;RP1=0, select bank1
  3071     0448  082B               	movf	(??_UART_Init+2)^(0+128),w
  3072     0449  1283               	bcf	3,5	;RP0=0, select bank0
  3073     044A  1303               	bcf	3,6	;RP1=0, select bank0
  3074     044B  00B9               	movwf	___lldiv@divisor+2
  3075     044C  1683               	bsf	3,5	;RP0=1, select bank1
  3076     044D  1303               	bcf	3,6	;RP1=0, select bank1
  3077     044E  082A               	movf	(??_UART_Init+1)^(0+128),w
  3078     044F  1283               	bcf	3,5	;RP0=0, select bank0
  3079     0450  1303               	bcf	3,6	;RP1=0, select bank0
  3080     0451  00B8               	movwf	___lldiv@divisor+1
  3081     0452  1683               	bsf	3,5	;RP0=1, select bank1
  3082     0453  1303               	bcf	3,6	;RP1=0, select bank1
  3083     0454  0829               	movf	??_UART_Init^(0+128),w
  3084     0455  1283               	bcf	3,5	;RP0=0, select bank0
  3085     0456  1303               	bcf	3,6	;RP1=0, select bank0
  3086     0457  00B7               	movwf	___lldiv@divisor
  3087     0458  3000               	movlw	0
  3088     0459  00BE               	movwf	___lldiv@dividend+3
  3089     045A  307A               	movlw	122
  3090     045B  00BD               	movwf	___lldiv@dividend+2
  3091     045C  3012               	movlw	18
  3092     045D  00BC               	movwf	___lldiv@dividend+1
  3093     045E  3000               	movlw	0
  3094     045F  00BB               	movwf	___lldiv@dividend
  3095     0460  120A  118A  2768  120A  118A  	fcall	___lldiv
  3096     0465  1283               	bcf	3,5	;RP0=0, select bank0
  3097     0466  1303               	bcf	3,6	;RP1=0, select bank0
  3098     0467  0837               	movf	?___lldiv,w
  3099     0468  3EFF               	addlw	255
  3100     0469  1683               	bsf	3,5	;RP0=1, select bank1
  3101     046A  1303               	bcf	3,6	;RP1=0, select bank1
  3102     046B  00AD               	movwf	UART_Init@n^(0+128)
  3103     046C  1283               	bcf	3,5	;RP0=0, select bank0
  3104     046D  1303               	bcf	3,6	;RP1=0, select bank0
  3105     046E  0838               	movf	?___lldiv+1,w
  3106     046F  1803               	skipnc
  3107     0470  3E01               	addlw	1
  3108     0471  3EFF               	addlw	255
  3109     0472  1683               	bsf	3,5	;RP0=1, select bank1
  3110     0473  1303               	bcf	3,6	;RP1=0, select bank1
  3111     0474  00AE               	movwf	(UART_Init@n+1)^(0+128)
  3112     0475                     l2431:
  3113                           
  3114                           ;USARTmodl.c: 18:   if (n < 0)
  3115     0475  1FAE               	btfss	(UART_Init@n+1)^(0+128),7
  3116     0476  2C78               	goto	u2451
  3117     0477  2C79               	goto	u2450
  3118     0478                     u2451:
  3119     0478  2C7B               	goto	l2435
  3120     0479                     u2450:
  3121     0479                     l2433:
  3122                           
  3123                           ;USARTmodl.c: 19:     n = 0;
  3124     0479  01AD               	clrf	UART_Init@n^(0+128)
  3125     047A  01AE               	clrf	(UART_Init@n+1)^(0+128)
  3126     047B                     l2435:
  3127                           
  3128                           ;USARTmodl.c: 21:   if (n > 255)
  3129     047B  082E               	movf	(UART_Init@n+1)^(0+128),w
  3130     047C  3A80               	xorlw	128
  3131     047D  00FF               	movwf	btemp+1
  3132     047E  3081               	movlw	129
  3133     047F  027F               	subwf	btemp+1,w
  3134     0480  1D03               	skipz
  3135     0481  2C84               	goto	u2465
  3136     0482  3000               	movlw	0
  3137     0483  022D               	subwf	UART_Init@n^(0+128),w
  3138     0484                     u2465:
  3139     0484  1C03               	skipc
  3140     0485  2C87               	goto	u2461
  3141     0486  2C88               	goto	u2460
  3142     0487                     u2461:
  3143     0487  2CE8               	goto	l2443
  3144     0488                     u2460:
  3145     0488                     l2437:
  3146                           
  3147                           ;USARTmodl.c: 22:   {;USARTmodl.c: 23:     n = ( 8000000 / (64 * baud_rate) ) - 1;
  3148     0488  1683               	bsf	3,5	;RP0=1, select bank1
  3149     0489  1303               	bcf	3,6	;RP1=0, select bank1
  3150     048A  0825               	movf	UART_Init@baud_rate^(0+128),w
  3151     048B  00A9               	movwf	??_UART_Init^(0+128)
  3152     048C  0826               	movf	(UART_Init@baud_rate+1)^(0+128),w
  3153     048D  00AA               	movwf	(??_UART_Init^(0+128)+1)
  3154     048E  0827               	movf	(UART_Init@baud_rate+2)^(0+128),w
  3155     048F  00AB               	movwf	(??_UART_Init^(0+128)+2)
  3156     0490  0828               	movf	(UART_Init@baud_rate+3)^(0+128),w
  3157     0491  00AC               	movwf	(??_UART_Init^(0+128)+3)
  3158     0492  3006               	movlw	6
  3159     0493                     u2475:
  3160     0493  1003               	clrc
  3161     0494  0DA9               	rlf	??_UART_Init^(0+128),f
  3162     0495  0DAA               	rlf	(??_UART_Init^(0+128)+1),f
  3163     0496  0DAB               	rlf	(??_UART_Init^(0+128)+2),f
  3164     0497  0DAC               	rlf	(??_UART_Init^(0+128)+3),f
  3165     0498                     u2470:
  3166     0498  3EFF               	addlw	-1
  3167     0499  1D03               	skipz
  3168     049A  2C93               	goto	u2475
  3169     049B  082C               	movf	(??_UART_Init+3)^(0+128),w
  3170     049C  1283               	bcf	3,5	;RP0=0, select bank0
  3171     049D  1303               	bcf	3,6	;RP1=0, select bank0
  3172     049E  00BA               	movwf	___lldiv@divisor+3
  3173     049F  1683               	bsf	3,5	;RP0=1, select bank1
  3174     04A0  1303               	bcf	3,6	;RP1=0, select bank1
  3175     04A1  082B               	movf	(??_UART_Init+2)^(0+128),w
  3176     04A2  1283               	bcf	3,5	;RP0=0, select bank0
  3177     04A3  1303               	bcf	3,6	;RP1=0, select bank0
  3178     04A4  00B9               	movwf	___lldiv@divisor+2
  3179     04A5  1683               	bsf	3,5	;RP0=1, select bank1
  3180     04A6  1303               	bcf	3,6	;RP1=0, select bank1
  3181     04A7  082A               	movf	(??_UART_Init+1)^(0+128),w
  3182     04A8  1283               	bcf	3,5	;RP0=0, select bank0
  3183     04A9  1303               	bcf	3,6	;RP1=0, select bank0
  3184     04AA  00B8               	movwf	___lldiv@divisor+1
  3185     04AB  1683               	bsf	3,5	;RP0=1, select bank1
  3186     04AC  1303               	bcf	3,6	;RP1=0, select bank1
  3187     04AD  0829               	movf	??_UART_Init^(0+128),w
  3188     04AE  1283               	bcf	3,5	;RP0=0, select bank0
  3189     04AF  1303               	bcf	3,6	;RP1=0, select bank0
  3190     04B0  00B7               	movwf	___lldiv@divisor
  3191     04B1  3000               	movlw	0
  3192     04B2  00BE               	movwf	___lldiv@dividend+3
  3193     04B3  307A               	movlw	122
  3194     04B4  00BD               	movwf	___lldiv@dividend+2
  3195     04B5  3012               	movlw	18
  3196     04B6  00BC               	movwf	___lldiv@dividend+1
  3197     04B7  3000               	movlw	0
  3198     04B8  00BB               	movwf	___lldiv@dividend
  3199     04B9  120A  118A  2768  120A  118A  	fcall	___lldiv
  3200     04BE  1283               	bcf	3,5	;RP0=0, select bank0
  3201     04BF  1303               	bcf	3,6	;RP1=0, select bank0
  3202     04C0  0837               	movf	?___lldiv,w
  3203     04C1  3EFF               	addlw	255
  3204     04C2  1683               	bsf	3,5	;RP0=1, select bank1
  3205     04C3  1303               	bcf	3,6	;RP1=0, select bank1
  3206     04C4  00AD               	movwf	UART_Init@n^(0+128)
  3207     04C5  1283               	bcf	3,5	;RP0=0, select bank0
  3208     04C6  1303               	bcf	3,6	;RP1=0, select bank0
  3209     04C7  0838               	movf	?___lldiv+1,w
  3210     04C8  1803               	skipnc
  3211     04C9  3E01               	addlw	1
  3212     04CA  3EFF               	addlw	255
  3213     04CB  1683               	bsf	3,5	;RP0=1, select bank1
  3214     04CC  1303               	bcf	3,6	;RP1=0, select bank1
  3215     04CD  00AE               	movwf	(UART_Init@n+1)^(0+128)
  3216     04CE                     l2439:
  3217                           
  3218                           ;USARTmodl.c: 24:     if (n > 255)
  3219     04CE  082E               	movf	(UART_Init@n+1)^(0+128),w
  3220     04CF  3A80               	xorlw	128
  3221     04D0  00FF               	movwf	btemp+1
  3222     04D1  3081               	movlw	129
  3223     04D2  027F               	subwf	btemp+1,w
  3224     04D3  1D03               	skipz
  3225     04D4  2CD7               	goto	u2485
  3226     04D5  3000               	movlw	0
  3227     04D6  022D               	subwf	UART_Init@n^(0+128),w
  3228     04D7                     u2485:
  3229     04D7  1C03               	skipc
  3230     04D8  2CDA               	goto	u2481
  3231     04D9  2CDB               	goto	u2480
  3232     04DA                     u2481:
  3233     04DA  2CE1               	goto	l231
  3234     04DB                     u2480:
  3235     04DB                     l2441:
  3236                           
  3237                           ;USARTmodl.c: 25:       n = 255;
  3238     04DB  30FF               	movlw	255
  3239     04DC  1683               	bsf	3,5	;RP0=1, select bank1
  3240     04DD  1303               	bcf	3,6	;RP1=0, select bank1
  3241     04DE  00AD               	movwf	UART_Init@n^(0+128)
  3242     04DF  3000               	movlw	0
  3243     04E0  00AE               	movwf	(UART_Init@n^(0+128)+1)
  3244     04E1                     l231:
  3245                           
  3246                           ;USARTmodl.c: 26:     SPBRG = n;
  3247     04E1  1683               	bsf	3,5	;RP0=1, select bank1
  3248     04E2  1303               	bcf	3,6	;RP1=0, select bank1
  3249     04E3  082D               	movf	UART_Init@n^(0+128),w
  3250     04E4  0099               	movwf	25	;volatile
  3251                           
  3252                           ;USARTmodl.c: 27:     TXSTA = 0x20;
  3253     04E5  3020               	movlw	32
  3254     04E6  0098               	movwf	24	;volatile
  3255                           
  3256                           ;USARTmodl.c: 28:   }
  3257     04E7  2CEE               	goto	l232
  3258     04E8                     l2443:
  3259                           
  3260                           ;USARTmodl.c: 31:   {;USARTmodl.c: 32:     SPBRG = n;
  3261     04E8  1683               	bsf	3,5	;RP0=1, select bank1
  3262     04E9  1303               	bcf	3,6	;RP1=0, select bank1
  3263     04EA  082D               	movf	UART_Init@n^(0+128),w
  3264     04EB  0099               	movwf	25	;volatile
  3265                           
  3266                           ;USARTmodl.c: 33:     TXSTA = 0x24;
  3267     04EC  3024               	movlw	36
  3268     04ED  0098               	movwf	24	;volatile
  3269     04EE                     l232:	
  3270                           ;USARTmodl.c: 34:   }
  3271                           
  3272                           
  3273                           ;USARTmodl.c: 36:   RCSTA = 0x90;
  3274     04EE  3090               	movlw	144
  3275     04EF  1283               	bcf	3,5	;RP0=0, select bank0
  3276     04F0  1303               	bcf	3,6	;RP1=0, select bank0
  3277     04F1  0098               	movwf	24	;volatile
  3278     04F2                     l233:
  3279     04F2  0008               	return
  3280     04F3                     __end_of_UART_Init:
  3281                           
  3282                           	psect	text12
  3283     0768                     __ptext12:	
  3284 ;; *************** function ___lldiv *****************
  3285 ;; Defined at:
  3286 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  3287 ;; Parameters:    Size  Location     Type
  3288 ;;  divisor         4   23[BANK0 ] unsigned long 
  3289 ;;  dividend        4   27[BANK0 ] unsigned long 
  3290 ;; Auto vars:     Size  Location     Type
  3291 ;;  quotient        4    0[BANK1 ] unsigned long 
  3292 ;;  counter         1    4[BANK1 ] unsigned char 
  3293 ;; Return value:  Size  Location     Type
  3294 ;;                  4   23[BANK0 ] unsigned long 
  3295 ;; Registers used:
  3296 ;;		wreg, status,2, status,0
  3297 ;; Tracked objects:
  3298 ;;		On entry : 0/0
  3299 ;;		On exit  : 0/0
  3300 ;;		Unchanged: 0/0
  3301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3302 ;;      Params:         0       8       0       0       0
  3303 ;;      Locals:         0       0       5       0       0
  3304 ;;      Temps:          0       1       0       0       0
  3305 ;;      Totals:         0       9       5       0       0
  3306 ;;Total ram usage:       14 bytes
  3307 ;; Hardware stack levels used: 1
  3308 ;; Hardware stack levels required when called: 3
  3309 ;; This function calls:
  3310 ;;		Nothing
  3311 ;; This function is called by:
  3312 ;;		_UART_Init
  3313 ;; This function uses a non-reentrant model
  3314 ;;
  3315                           
  3316     0768                     ___lldiv:	
  3317                           ;psect for function ___lldiv
  3318                           
  3319     0768                     l2295:	
  3320                           ;incstack = 0
  3321                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3322                           
  3323     0768  3000               	movlw	0
  3324     0769  1683               	bsf	3,5	;RP0=1, select bank1
  3325     076A  1303               	bcf	3,6	;RP1=0, select bank1
  3326     076B  00A3               	movwf	(___lldiv@quotient+3)^(0+128)
  3327     076C  3000               	movlw	0
  3328     076D  00A2               	movwf	(___lldiv@quotient+2)^(0+128)
  3329     076E  3000               	movlw	0
  3330     076F  00A1               	movwf	(___lldiv@quotient+1)^(0+128)
  3331     0770  3000               	movlw	0
  3332     0771  00A0               	movwf	___lldiv@quotient^(0+128)
  3333     0772  1283               	bcf	3,5	;RP0=0, select bank0
  3334     0773  1303               	bcf	3,6	;RP1=0, select bank0
  3335     0774  083A               	movf	___lldiv@divisor+3,w
  3336     0775  0439               	iorwf	___lldiv@divisor+2,w
  3337     0776  0438               	iorwf	___lldiv@divisor+1,w
  3338     0777  0437               	iorwf	___lldiv@divisor,w
  3339     0778  1903               	skipnz
  3340     0779  2F7B               	goto	u2131
  3341     077A  2F7C               	goto	u2130
  3342     077B                     u2131:
  3343     077B  2FD9               	goto	l2315
  3344     077C                     u2130:
  3345     077C                     l2297:
  3346     077C  1683               	bsf	3,5	;RP0=1, select bank1
  3347     077D  1303               	bcf	3,6	;RP1=0, select bank1
  3348     077E  01A4               	clrf	___lldiv@counter^(0+128)
  3349     077F  0AA4               	incf	___lldiv@counter^(0+128),f
  3350     0780  2F90               	goto	l2301
  3351     0781                     l2299:
  3352     0781  3001               	movlw	1
  3353     0782  00BF               	movwf	??___lldiv
  3354     0783                     u2145:
  3355     0783  1003               	clrc
  3356     0784  0DB7               	rlf	___lldiv@divisor,f
  3357     0785  0DB8               	rlf	___lldiv@divisor+1,f
  3358     0786  0DB9               	rlf	___lldiv@divisor+2,f
  3359     0787  0DBA               	rlf	___lldiv@divisor+3,f
  3360     0788  0BBF               	decfsz	??___lldiv,f
  3361     0789  2F83               	goto	u2145
  3362     078A  3001               	movlw	1
  3363     078B  00BF               	movwf	??___lldiv
  3364     078C  083F               	movf	??___lldiv,w
  3365     078D  1683               	bsf	3,5	;RP0=1, select bank1
  3366     078E  1303               	bcf	3,6	;RP1=0, select bank1
  3367     078F  07A4               	addwf	___lldiv@counter^(0+128),f
  3368     0790                     l2301:
  3369     0790  1283               	bcf	3,5	;RP0=0, select bank0
  3370     0791  1303               	bcf	3,6	;RP1=0, select bank0
  3371     0792  1FBA               	btfss	___lldiv@divisor+3,7
  3372     0793  2F95               	goto	u2151
  3373     0794  2F96               	goto	u2150
  3374     0795                     u2151:
  3375     0795  2F81               	goto	l2299
  3376     0796                     u2150:
  3377     0796                     l2303:
  3378     0796  3001               	movlw	1
  3379     0797  1283               	bcf	3,5	;RP0=0, select bank0
  3380     0798  00BF               	movwf	??___lldiv
  3381     0799                     u2165:
  3382     0799  1003               	clrc
  3383     079A  1683               	bsf	3,5	;RP0=1, select bank1
  3384     079B  1303               	bcf	3,6	;RP1=0, select bank1
  3385     079C  0DA0               	rlf	___lldiv@quotient^(0+128),f
  3386     079D  0DA1               	rlf	(___lldiv@quotient+1)^(0+128),f
  3387     079E  0DA2               	rlf	(___lldiv@quotient+2)^(0+128),f
  3388     079F  0DA3               	rlf	(___lldiv@quotient+3)^(0+128),f
  3389     07A0  1283               	bcf	3,5	;RP0=0, select bank0
  3390     07A1  1303               	bcf	3,6	;RP1=0, select bank0
  3391     07A2  0BBF               	decfsz	??___lldiv,f
  3392     07A3  2F99               	goto	u2165
  3393     07A4                     l2305:
  3394     07A4  083A               	movf	___lldiv@divisor+3,w
  3395     07A5  023E               	subwf	___lldiv@dividend+3,w
  3396     07A6  1D03               	skipz
  3397     07A7  2FB2               	goto	u2175
  3398     07A8  0839               	movf	___lldiv@divisor+2,w
  3399     07A9  023D               	subwf	___lldiv@dividend+2,w
  3400     07AA  1D03               	skipz
  3401     07AB  2FB2               	goto	u2175
  3402     07AC  0838               	movf	___lldiv@divisor+1,w
  3403     07AD  023C               	subwf	___lldiv@dividend+1,w
  3404     07AE  1D03               	skipz
  3405     07AF  2FB2               	goto	u2175
  3406     07B0  0837               	movf	___lldiv@divisor,w
  3407     07B1  023B               	subwf	___lldiv@dividend,w
  3408     07B2                     u2175:
  3409     07B2  1C03               	skipc
  3410     07B3  2FB5               	goto	u2171
  3411     07B4  2FB6               	goto	u2170
  3412     07B5                     u2171:
  3413     07B5  2FC7               	goto	l2311
  3414     07B6                     u2170:
  3415     07B6                     l2307:
  3416     07B6  0837               	movf	___lldiv@divisor,w
  3417     07B7  02BB               	subwf	___lldiv@dividend,f
  3418     07B8  0838               	movf	___lldiv@divisor+1,w
  3419     07B9  1C03               	skipc
  3420     07BA  0F38               	incfsz	___lldiv@divisor+1,w
  3421     07BB  02BC               	subwf	___lldiv@dividend+1,f
  3422     07BC  0839               	movf	___lldiv@divisor+2,w
  3423     07BD  1C03               	skipc
  3424     07BE  0F39               	incfsz	___lldiv@divisor+2,w
  3425     07BF  02BD               	subwf	___lldiv@dividend+2,f
  3426     07C0  083A               	movf	___lldiv@divisor+3,w
  3427     07C1  1C03               	skipc
  3428     07C2  0F3A               	incfsz	___lldiv@divisor+3,w
  3429     07C3  02BE               	subwf	___lldiv@dividend+3,f
  3430     07C4                     l2309:
  3431     07C4  1683               	bsf	3,5	;RP0=1, select bank1
  3432     07C5  1303               	bcf	3,6	;RP1=0, select bank1
  3433     07C6  1420               	bsf	___lldiv@quotient^(0+128),0
  3434     07C7                     l2311:
  3435     07C7  3001               	movlw	1
  3436     07C8                     u2185:
  3437     07C8  1003               	clrc
  3438     07C9  1283               	bcf	3,5	;RP0=0, select bank0
  3439     07CA  0CBA               	rrf	___lldiv@divisor+3,f
  3440     07CB  0CB9               	rrf	___lldiv@divisor+2,f
  3441     07CC  0CB8               	rrf	___lldiv@divisor+1,f
  3442     07CD  0CB7               	rrf	___lldiv@divisor,f
  3443     07CE  3EFF               	addlw	-1
  3444     07CF  1D03               	skipz
  3445     07D0  2FC8               	goto	u2185
  3446     07D1                     l2313:
  3447     07D1  3001               	movlw	1
  3448     07D2  1683               	bsf	3,5	;RP0=1, select bank1
  3449     07D3  1303               	bcf	3,6	;RP1=0, select bank1
  3450     07D4  02A4               	subwf	___lldiv@counter^(0+128),f
  3451     07D5  1D03               	btfss	3,2
  3452     07D6  2FD8               	goto	u2191
  3453     07D7  2FD9               	goto	u2190
  3454     07D8                     u2191:
  3455     07D8  2F96               	goto	l2303
  3456     07D9                     u2190:
  3457     07D9                     l2315:
  3458     07D9  1683               	bsf	3,5	;RP0=1, select bank1
  3459     07DA  1303               	bcf	3,6	;RP1=0, select bank1
  3460     07DB  0823               	movf	(___lldiv@quotient+3)^(0+128),w
  3461     07DC  1283               	bcf	3,5	;RP0=0, select bank0
  3462     07DD  1303               	bcf	3,6	;RP1=0, select bank0
  3463     07DE  00BA               	movwf	?___lldiv+3
  3464     07DF  1683               	bsf	3,5	;RP0=1, select bank1
  3465     07E0  1303               	bcf	3,6	;RP1=0, select bank1
  3466     07E1  0822               	movf	(___lldiv@quotient+2)^(0+128),w
  3467     07E2  1283               	bcf	3,5	;RP0=0, select bank0
  3468     07E3  1303               	bcf	3,6	;RP1=0, select bank0
  3469     07E4  00B9               	movwf	?___lldiv+2
  3470     07E5  1683               	bsf	3,5	;RP0=1, select bank1
  3471     07E6  1303               	bcf	3,6	;RP1=0, select bank1
  3472     07E7  0821               	movf	(___lldiv@quotient+1)^(0+128),w
  3473     07E8  1283               	bcf	3,5	;RP0=0, select bank0
  3474     07E9  1303               	bcf	3,6	;RP1=0, select bank0
  3475     07EA  00B8               	movwf	?___lldiv+1
  3476     07EB  1683               	bsf	3,5	;RP0=1, select bank1
  3477     07EC  1303               	bcf	3,6	;RP1=0, select bank1
  3478     07ED  0820               	movf	___lldiv@quotient^(0+128),w
  3479     07EE  1283               	bcf	3,5	;RP0=0, select bank0
  3480     07EF  1303               	bcf	3,6	;RP1=0, select bank0
  3481     07F0  00B7               	movwf	?___lldiv
  3482     07F1                     l450:
  3483     07F1  0008               	return
  3484     07F2                     __end_of___lldiv:
  3485                           
  3486                           	psect	text13
  3487     0DCC                     __ptext13:	
  3488 ;; *************** function _UART_GetC *****************
  3489 ;; Defined at:
  3490 ;;		line 46 in file "USARTmodl.c"
  3491 ;; Parameters:    Size  Location     Type
  3492 ;;		None
  3493 ;; Auto vars:     Size  Location     Type
  3494 ;;		None
  3495 ;; Return value:  Size  Location     Type
  3496 ;;                  1    wreg      unsigned char 
  3497 ;; Registers used:
  3498 ;;		wreg
  3499 ;; Tracked objects:
  3500 ;;		On entry : 0/0
  3501 ;;		On exit  : 0/0
  3502 ;;		Unchanged: 0/0
  3503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3504 ;;      Params:         0       0       0       0       0
  3505 ;;      Locals:         0       0       0       0       0
  3506 ;;      Temps:          0       0       0       0       0
  3507 ;;      Totals:         0       0       0       0       0
  3508 ;;Total ram usage:        0 bytes
  3509 ;; Hardware stack levels used: 1
  3510 ;; Hardware stack levels required when called: 3
  3511 ;; This function calls:
  3512 ;;		Nothing
  3513 ;; This function is called by:
  3514 ;;		_main
  3515 ;; This function uses a non-reentrant model
  3516 ;;
  3517                           
  3518     0DCC                     _UART_GetC:	
  3519                           ;psect for function _UART_GetC
  3520                           
  3521     0DCC                     l2089:	
  3522                           ;incstack = 0
  3523                           ; Regs used in _UART_GetC: [wreg]
  3524                           
  3525     0DCC                     l243:	
  3526                           ;USARTmodl.c: 48:   while (RCIF == 0) ;
  3527                           
  3528     0DCC  1283               	bcf	3,5	;RP0=0, select bank0
  3529     0DCD  1303               	bcf	3,6	;RP1=0, select bank0
  3530     0DCE  1E8C               	btfss	12,5	;volatile
  3531     0DCF  2DD1               	goto	u1931
  3532     0DD0  2DD2               	goto	u1930
  3533     0DD1                     u1931:
  3534     0DD1  2DCC               	goto	l243
  3535     0DD2                     u1930:
  3536     0DD2                     l245:
  3537                           
  3538                           ;USARTmodl.c: 49:   if (OERR)
  3539     0DD2  1C98               	btfss	24,1	;volatile
  3540     0DD3  2DD5               	goto	u1941
  3541     0DD4  2DD6               	goto	u1940
  3542     0DD5                     u1941:
  3543     0DD5  2DD8               	goto	l2093
  3544     0DD6                     u1940:
  3545     0DD6                     l2091:
  3546                           
  3547                           ;USARTmodl.c: 50:   {;USARTmodl.c: 51:     CREN = 0;
  3548     0DD6  1218               	bcf	24,4	;volatile
  3549                           
  3550                           ;USARTmodl.c: 52:     CREN = 1;
  3551     0DD7  1618               	bsf	24,4	;volatile
  3552     0DD8                     l2093:
  3553                           
  3554                           ;USARTmodl.c: 54:   return RCREG;
  3555     0DD8  081A               	movf	26,w	;volatile
  3556     0DD9                     l247:
  3557     0DD9  0008               	return
  3558     0DDA                     __end_of_UART_GetC:
  3559                           
  3560                           	psect	text14
  3561     0DB5                     __ptext14:	
  3562 ;; *************** function _UART_Data_Ready *****************
  3563 ;; Defined at:
  3564 ;;		line 41 in file "USARTmodl.c"
  3565 ;; Parameters:    Size  Location     Type
  3566 ;;		None
  3567 ;; Auto vars:     Size  Location     Type
  3568 ;;		None
  3569 ;; Return value:  Size  Location     Type
  3570 ;;		None               void
  3571 ;; Registers used:
  3572 ;;		status,2, status,0
  3573 ;; Tracked objects:
  3574 ;;		On entry : 0/0
  3575 ;;		On exit  : 0/0
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3578 ;;      Params:         0       0       0       0       0
  3579 ;;      Locals:         0       0       0       0       0
  3580 ;;      Temps:          0       0       0       0       0
  3581 ;;      Totals:         0       0       0       0       0
  3582 ;;Total ram usage:        0 bytes
  3583 ;; Hardware stack levels used: 1
  3584 ;; Hardware stack levels required when called: 3
  3585 ;; This function calls:
  3586 ;;		Nothing
  3587 ;; This function is called by:
  3588 ;;		_main
  3589 ;; This function uses a non-reentrant model
  3590 ;;
  3591                           
  3592     0DB5                     _UART_Data_Ready:	
  3593                           ;psect for function _UART_Data_Ready
  3594                           
  3595     0DB5                     l2081:	
  3596                           ;incstack = 0
  3597                           ; Regs used in _UART_Data_Ready: [status]
  3598                           
  3599                           
  3600                           ;USARTmodl.c: 43:   return RCIF;
  3601     0DB5  1283               	bcf	3,5	;RP0=0, select bank0
  3602     0DB6  1303               	bcf	3,6	;RP1=0, select bank0
  3603     0DB7  1A8C               	btfsc	12,5	;volatile
  3604     0DB8  2DBA               	goto	u1921
  3605     0DB9  2DBB               	goto	u1920
  3606     0DBA                     u1921:
  3607     0DBA  2DBD               	goto	l2085
  3608     0DBB                     u1920:
  3609     0DBB                     l2083:
  3610     0DBB  1003               	clrc
  3611     0DBC  2DBE               	goto	l240
  3612     0DBD                     l2085:
  3613     0DBD  1403               	setc
  3614     0DBE                     l240:
  3615     0DBE  0008               	return
  3616     0DBF                     __end_of_UART_Data_Ready:
  3617                           
  3618                           	psect	text15
  3619     0DAB                     __ptext15:	
  3620 ;; *************** function _PWmanual_init *****************
  3621 ;; Defined at:
  3622 ;;		line 12 in file "PWmanual.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;  portsl          1    wreg     unsigned char 
  3625 ;;  numport         2   23[BANK0 ] int 
  3626 ;; Auto vars:     Size  Location     Type
  3627 ;;  portsl          1    0[COMMON] unsigned char 
  3628 ;; Return value:  Size  Location     Type
  3629 ;;                  1    wreg      void 
  3630 ;; Registers used:
  3631 ;;		wreg, status,0
  3632 ;; Tracked objects:
  3633 ;;		On entry : 0/0
  3634 ;;		On exit  : 0/0
  3635 ;;		Unchanged: 0/0
  3636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3637 ;;      Params:         0       2       0       0       0
  3638 ;;      Locals:         0       0       0       0       0
  3639 ;;      Temps:          0       0       0       0       0
  3640 ;;      Totals:         0       2       0       0       0
  3641 ;;Total ram usage:        2 bytes
  3642 ;; Hardware stack levels used: 1
  3643 ;; Hardware stack levels required when called: 3
  3644 ;; This function calls:
  3645 ;;		Nothing
  3646 ;; This function is called by:
  3647 ;;		_main
  3648 ;; This function uses a non-reentrant model
  3649 ;;
  3650                           
  3651     0DAB                     _PWmanual_init:	
  3652                           ;psect for function _PWmanual_init
  3653                           
  3654     0DAB                     l1979:	
  3655                           ;incstack = 0
  3656                           ; Regs used in _PWmanual_init: [wreg+status,0]
  3657                           
  3658                           
  3659                           ;PWmanual.c: 14:     TRISCbits.TRISC3 = numport;
  3660     0DAB  1283               	bcf	3,5	;RP0=0, select bank0
  3661     0DAC  1303               	bcf	3,6	;RP1=0, select bank0
  3662     0DAD  0C37               	rrf	PWmanual_init@numport,w
  3663     0DAE  1683               	bsf	3,5	;RP0=1, select bank1
  3664     0DAF  1303               	bcf	3,6	;RP1=0, select bank1
  3665     0DB0  1C03               	skipc
  3666     0DB1  1187               	bcf	7,3	;volatile
  3667     0DB2  1803               	skipnc
  3668     0DB3  1587               	bsf	7,3	;volatile
  3669     0DB4                     l274:
  3670     0DB4  0008               	return
  3671     0DB5                     __end_of_PWmanual_init:
  3672                           
  3673                           	psect	text16
  3674     0F65                     __ptext16:	
  3675 ;; *************** function _PWM_init *****************
  3676 ;; Defined at:
  3677 ;;		line 11 in file "PWM.c"
  3678 ;; Parameters:    Size  Location     Type
  3679 ;;  chn1            2    2[BANK1 ] int 
  3680 ;;  chn2            2    4[BANK1 ] int 
  3681 ;;  periodo_ms      4    6[BANK1 ] float 
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;		None
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  1    wreg      void 
  3686 ;; Registers used:
  3687 ;;		wreg, status,2, status,0, pclath, cstack
  3688 ;; Tracked objects:
  3689 ;;		On entry : 0/0
  3690 ;;		On exit  : 0/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3693 ;;      Params:         0       0       8       0       0
  3694 ;;      Locals:         0       0       0       0       0
  3695 ;;      Temps:          0       0       0       0       0
  3696 ;;      Totals:         0       0       8       0       0
  3697 ;;Total ram usage:        8 bytes
  3698 ;; Hardware stack levels used: 1
  3699 ;; Hardware stack levels required when called: 4
  3700 ;; This function calls:
  3701 ;;		___fltol
  3702 ;; This function is called by:
  3703 ;;		_main
  3704 ;; This function uses a non-reentrant model
  3705 ;;
  3706                           
  3707     0F65                     _PWM_init:	
  3708                           ;psect for function _PWM_init
  3709                           
  3710     0F65                     l2403:	
  3711                           ;incstack = 0
  3712                           ; Regs used in _PWM_init: [wreg+status,2+status,0+pclath+cstack]
  3713                           
  3714                           
  3715                           ;PWM.c: 13:     TRISCbits.TRISC1 = chn2;
  3716     0F65  1683               	bsf	3,5	;RP0=1, select bank1
  3717     0F66  1303               	bcf	3,6	;RP1=0, select bank1
  3718     0F67  0C24               	rrf	PWM_init@chn2^(0+128),w
  3719     0F68  1C03               	skipc
  3720     0F69  1087               	bcf	7,1	;volatile
  3721     0F6A  1803               	skipnc
  3722     0F6B  1487               	bsf	7,1	;volatile
  3723                           
  3724                           ;PWM.c: 14:     TRISCbits.TRISC2 = chn1;
  3725     0F6C  0C22               	rrf	PWM_init@chn1^(0+128),w
  3726     0F6D  1C03               	skipc
  3727     0F6E  1107               	bcf	7,2	;volatile
  3728     0F6F  1803               	skipnc
  3729     0F70  1507               	bsf	7,2	;volatile
  3730     0F71                     l2405:
  3731                           
  3732                           ;PWM.c: 16:     PR2 = periodo_ms;
  3733     0F71  0829               	movf	(PWM_init@periodo_ms+3)^(0+128),w
  3734     0F72  1283               	bcf	3,5	;RP0=0, select bank0
  3735     0F73  1303               	bcf	3,6	;RP1=0, select bank0
  3736     0F74  00BA               	movwf	___fltol@f1+3
  3737     0F75  1683               	bsf	3,5	;RP0=1, select bank1
  3738     0F76  1303               	bcf	3,6	;RP1=0, select bank1
  3739     0F77  0828               	movf	(PWM_init@periodo_ms+2)^(0+128),w
  3740     0F78  1283               	bcf	3,5	;RP0=0, select bank0
  3741     0F79  1303               	bcf	3,6	;RP1=0, select bank0
  3742     0F7A  00B9               	movwf	___fltol@f1+2
  3743     0F7B  1683               	bsf	3,5	;RP0=1, select bank1
  3744     0F7C  1303               	bcf	3,6	;RP1=0, select bank1
  3745     0F7D  0827               	movf	(PWM_init@periodo_ms+1)^(0+128),w
  3746     0F7E  1283               	bcf	3,5	;RP0=0, select bank0
  3747     0F7F  1303               	bcf	3,6	;RP1=0, select bank0
  3748     0F80  00B8               	movwf	___fltol@f1+1
  3749     0F81  1683               	bsf	3,5	;RP0=1, select bank1
  3750     0F82  1303               	bcf	3,6	;RP1=0, select bank1
  3751     0F83  0826               	movf	PWM_init@periodo_ms^(0+128),w
  3752     0F84  1283               	bcf	3,5	;RP0=0, select bank0
  3753     0F85  1303               	bcf	3,6	;RP1=0, select bank0
  3754     0F86  00B7               	movwf	___fltol@f1
  3755     0F87  120A  118A  264F  120A  158A  	fcall	___fltol
  3756     0F8C  1283               	bcf	3,5	;RP0=0, select bank0
  3757     0F8D  1303               	bcf	3,6	;RP1=0, select bank0
  3758     0F8E  0837               	movf	?___fltol,w
  3759     0F8F  1683               	bsf	3,5	;RP0=1, select bank1
  3760     0F90  1303               	bcf	3,6	;RP1=0, select bank1
  3761     0F91  0092               	movwf	18	;volatile
  3762     0F92                     l2407:
  3763                           
  3764                           ;PWM.c: 17:     CCP1CONbits.P1M =0;
  3765     0F92  303F               	movlw	-193
  3766     0F93  1283               	bcf	3,5	;RP0=0, select bank0
  3767     0F94  1303               	bcf	3,6	;RP1=0, select bank0
  3768     0F95  0597               	andwf	23,f	;volatile
  3769     0F96                     l2409:
  3770                           
  3771                           ;PWM.c: 18:     CCP1CONbits.CCP1M =0b1100;
  3772     0F96  0817               	movf	23,w	;volatile
  3773     0F97  39F0               	andlw	-16
  3774     0F98  380C               	iorlw	12
  3775     0F99  0097               	movwf	23	;volatile
  3776     0F9A                     l2411:
  3777                           
  3778                           ;PWM.c: 20:     CCPR1L = 0x0f;
  3779     0F9A  300F               	movlw	15
  3780     0F9B  0095               	movwf	21	;volatile
  3781     0F9C                     l2413:
  3782                           
  3783                           ;PWM.c: 21:     CCP1CONbits.DC1B= 0;
  3784     0F9C  30CF               	movlw	-49
  3785     0F9D  0597               	andwf	23,f	;volatile
  3786     0F9E                     l2415:
  3787                           
  3788                           ;PWM.c: 23:     PIR1bits.TMR2IF =0;
  3789     0F9E  108C               	bcf	12,1	;volatile
  3790     0F9F                     l2417:
  3791                           
  3792                           ;PWM.c: 24:     T2CONbits.T2CKPS = 0b11;
  3793     0F9F  3003               	movlw	3
  3794     0FA0  0492               	iorwf	18,f	;volatile
  3795     0FA1                     l2419:
  3796                           
  3797                           ;PWM.c: 25:     T2CONbits.TMR2ON = 1;
  3798     0FA1  1512               	bsf	18,2	;volatile
  3799     0FA2                     l2421:
  3800                           
  3801                           ;PWM.c: 28:     CCP2CONbits.CCP2M = 0b1100;
  3802     0FA2  081D               	movf	29,w	;volatile
  3803     0FA3  39F0               	andlw	-16
  3804     0FA4  380C               	iorlw	12
  3805     0FA5  009D               	movwf	29	;volatile
  3806     0FA6                     l2423:
  3807                           
  3808                           ;PWM.c: 29:     CCPR2L = 0x0f;
  3809     0FA6  300F               	movlw	15
  3810     0FA7  009B               	movwf	27	;volatile
  3811     0FA8                     l2425:
  3812                           
  3813                           ;PWM.c: 30:     CCP2CONbits.DC2B0 = 0;
  3814     0FA8  121D               	bcf	29,4	;volatile
  3815     0FA9                     l2427:
  3816                           
  3817                           ;PWM.c: 31:     CCP2CONbits.DC2B1 = 0;
  3818     0FA9  129D               	bcf	29,5	;volatile
  3819     0FAA                     l198:	
  3820                           ;PWM.c: 34:     while (PIR1bits.TMR2IF == 0);
  3821                           
  3822     0FAA  1C8C               	btfss	12,1	;volatile
  3823     0FAB  2FAD               	goto	u2431
  3824     0FAC  2FAE               	goto	u2430
  3825     0FAD                     u2431:
  3826     0FAD  2FAA               	goto	l198
  3827     0FAE                     u2430:
  3828     0FAE                     l200:
  3829                           
  3830                           ;PWM.c: 35:     PIR1bits.TMR2IF = 0;
  3831     0FAE  108C               	bcf	12,1	;volatile
  3832     0FAF                     l201:
  3833     0FAF  0008               	return
  3834     0FB0                     __end_of_PWM_init:
  3835                           
  3836                           	psect	text17
  3837     064F                     __ptext17:	
  3838 ;; *************** function ___fltol *****************
  3839 ;; Defined at:
  3840 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  3841 ;; Parameters:    Size  Location     Type
  3842 ;;  f1              4   23[BANK0 ] void 
  3843 ;; Auto vars:     Size  Location     Type
  3844 ;;  exp1            1    1[BANK1 ] unsigned char 
  3845 ;;  sign1           1    0[BANK1 ] unsigned char 
  3846 ;; Return value:  Size  Location     Type
  3847 ;;                  4   23[BANK0 ] long 
  3848 ;; Registers used:
  3849 ;;		wreg, status,2, status,0
  3850 ;; Tracked objects:
  3851 ;;		On entry : 0/0
  3852 ;;		On exit  : 0/0
  3853 ;;		Unchanged: 0/0
  3854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3855 ;;      Params:         0       4       0       0       0
  3856 ;;      Locals:         0       0       2       0       0
  3857 ;;      Temps:          0       4       0       0       0
  3858 ;;      Totals:         0       8       2       0       0
  3859 ;;Total ram usage:       10 bytes
  3860 ;; Hardware stack levels used: 1
  3861 ;; Hardware stack levels required when called: 3
  3862 ;; This function calls:
  3863 ;;		Nothing
  3864 ;; This function is called by:
  3865 ;;		_PWM_init
  3866 ;; This function uses a non-reentrant model
  3867 ;;
  3868                           
  3869     064F                     ___fltol:	
  3870                           ;psect for function ___fltol
  3871                           
  3872     064F                     l2319:	
  3873                           ;incstack = 0
  3874                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3875                           
  3876     064F  1003               	clrc
  3877     0650  1283               	bcf	3,5	;RP0=0, select bank0
  3878     0651  1303               	bcf	3,6	;RP1=0, select bank0
  3879     0652  0D39               	rlf	___fltol@f1+2,w
  3880     0653  0D3A               	rlf	___fltol@f1+3,w
  3881     0654  1683               	bsf	3,5	;RP0=1, select bank1
  3882     0655  1303               	bcf	3,6	;RP1=0, select bank1
  3883     0656  00A1               	movwf	___fltol@exp1^(0+128)
  3884     0657  0821               	movf	___fltol@exp1^(0+128),w
  3885     0658  1D03               	btfss	3,2
  3886     0659  2E5B               	goto	u2201
  3887     065A  2E5C               	goto	u2200
  3888     065B                     u2201:
  3889     065B  2E67               	goto	l2325
  3890     065C                     u2200:
  3891     065C                     l2321:
  3892     065C  3000               	movlw	0
  3893     065D  1283               	bcf	3,5	;RP0=0, select bank0
  3894     065E  1303               	bcf	3,6	;RP1=0, select bank0
  3895     065F  00BA               	movwf	?___fltol+3
  3896     0660  3000               	movlw	0
  3897     0661  00B9               	movwf	?___fltol+2
  3898     0662  3000               	movlw	0
  3899     0663  00B8               	movwf	?___fltol+1
  3900     0664  3000               	movlw	0
  3901     0665  00B7               	movwf	?___fltol
  3902     0666  2EDC               	goto	l600
  3903     0667                     l2325:
  3904     0667  1283               	bcf	3,5	;RP0=0, select bank0
  3905     0668  1303               	bcf	3,6	;RP1=0, select bank0
  3906     0669  0837               	movf	___fltol@f1,w
  3907     066A  00BB               	movwf	??___fltol
  3908     066B  0838               	movf	___fltol@f1+1,w
  3909     066C  00BC               	movwf	??___fltol+1
  3910     066D  0839               	movf	___fltol@f1+2,w
  3911     066E  00BD               	movwf	??___fltol+2
  3912     066F  083A               	movf	___fltol@f1+3,w
  3913     0670  00BE               	movwf	??___fltol+3
  3914     0671  301F               	movlw	31
  3915     0672                     u2215:
  3916     0672  1003               	clrc
  3917     0673  0CBE               	rrf	??___fltol+3,f
  3918     0674  0CBD               	rrf	??___fltol+2,f
  3919     0675  0CBC               	rrf	??___fltol+1,f
  3920     0676  0CBB               	rrf	??___fltol,f
  3921     0677                     u2210:
  3922     0677  3EFF               	addlw	-1
  3923     0678  1D03               	skipz
  3924     0679  2E72               	goto	u2215
  3925     067A  083B               	movf	??___fltol,w
  3926     067B  1683               	bsf	3,5	;RP0=1, select bank1
  3927     067C  1303               	bcf	3,6	;RP1=0, select bank1
  3928     067D  00A0               	movwf	___fltol@sign1^(0+128)
  3929     067E                     l2327:
  3930     067E  1283               	bcf	3,5	;RP0=0, select bank0
  3931     067F  1303               	bcf	3,6	;RP1=0, select bank0
  3932     0680  17B9               	bsf	___fltol@f1+2,7
  3933     0681                     l2329:
  3934     0681  30FF               	movlw	255
  3935     0682  05B7               	andwf	___fltol@f1,f
  3936     0683  30FF               	movlw	255
  3937     0684  05B8               	andwf	___fltol@f1+1,f
  3938     0685  30FF               	movlw	255
  3939     0686  05B9               	andwf	___fltol@f1+2,f
  3940     0687  3000               	movlw	0
  3941     0688  05BA               	andwf	___fltol@f1+3,f
  3942     0689                     l2331:
  3943     0689  3096               	movlw	150
  3944     068A  1683               	bsf	3,5	;RP0=1, select bank1
  3945     068B  1303               	bcf	3,6	;RP1=0, select bank1
  3946     068C  02A1               	subwf	___fltol@exp1^(0+128),f
  3947     068D                     l2333:
  3948     068D  1FA1               	btfss	___fltol@exp1^(0+128),7
  3949     068E  2E90               	goto	u2221
  3950     068F  2E91               	goto	u2220
  3951     0690                     u2221:
  3952     0690  2EAF               	goto	l2343
  3953     0691                     u2220:
  3954     0691                     l2335:
  3955     0691  0821               	movf	___fltol@exp1^(0+128),w
  3956     0692  3A80               	xorlw	128
  3957     0693  3E97               	addlw	151
  3958     0694  1803               	skipnc
  3959     0695  2E97               	goto	u2231
  3960     0696  2E98               	goto	u2230
  3961     0697                     u2231:
  3962     0697  2E99               	goto	l2341
  3963     0698                     u2230:
  3964     0698  2E5C               	goto	l2321
  3965     0699                     l2341:
  3966     0699  3001               	movlw	1
  3967     069A                     u2245:
  3968     069A  1003               	clrc
  3969     069B  1283               	bcf	3,5	;RP0=0, select bank0
  3970     069C  1303               	bcf	3,6	;RP1=0, select bank0
  3971     069D  0CBA               	rrf	___fltol@f1+3,f
  3972     069E  0CB9               	rrf	___fltol@f1+2,f
  3973     069F  0CB8               	rrf	___fltol@f1+1,f
  3974     06A0  0CB7               	rrf	___fltol@f1,f
  3975     06A1  3EFF               	addlw	-1
  3976     06A2  1D03               	skipz
  3977     06A3  2E9A               	goto	u2245
  3978     06A4  3001               	movlw	1
  3979     06A5  00BB               	movwf	??___fltol
  3980     06A6  083B               	movf	??___fltol,w
  3981     06A7  1683               	bsf	3,5	;RP0=1, select bank1
  3982     06A8  1303               	bcf	3,6	;RP1=0, select bank1
  3983     06A9  07A1               	addwf	___fltol@exp1^(0+128),f
  3984     06AA  1D03               	btfss	3,2
  3985     06AB  2EAD               	goto	u2251
  3986     06AC  2EAE               	goto	u2250
  3987     06AD                     u2251:
  3988     06AD  2E99               	goto	l2341
  3989     06AE                     u2250:
  3990     06AE  2ECA               	goto	l2351
  3991     06AF                     l2343:
  3992     06AF  3020               	movlw	32
  3993     06B0  0221               	subwf	___fltol@exp1^(0+128),w
  3994     06B1  1C03               	skipc
  3995     06B2  2EB4               	goto	u2261
  3996     06B3  2EB5               	goto	u2260
  3997     06B4                     u2261:
  3998     06B4  2EC5               	goto	l607
  3999     06B5                     u2260:
  4000     06B5  2E5C               	goto	l2321
  4001     06B6                     l2349:
  4002     06B6  3001               	movlw	1
  4003     06B7  1283               	bcf	3,5	;RP0=0, select bank0
  4004     06B8  1303               	bcf	3,6	;RP1=0, select bank0
  4005     06B9  00BB               	movwf	??___fltol
  4006     06BA                     u2275:
  4007     06BA  1003               	clrc
  4008     06BB  0DB7               	rlf	___fltol@f1,f
  4009     06BC  0DB8               	rlf	___fltol@f1+1,f
  4010     06BD  0DB9               	rlf	___fltol@f1+2,f
  4011     06BE  0DBA               	rlf	___fltol@f1+3,f
  4012     06BF  0BBB               	decfsz	??___fltol,f
  4013     06C0  2EBA               	goto	u2275
  4014     06C1  3001               	movlw	1
  4015     06C2  1683               	bsf	3,5	;RP0=1, select bank1
  4016     06C3  1303               	bcf	3,6	;RP1=0, select bank1
  4017     06C4  02A1               	subwf	___fltol@exp1^(0+128),f
  4018     06C5                     l607:
  4019     06C5  0821               	movf	___fltol@exp1^(0+128),w
  4020     06C6  1D03               	btfss	3,2
  4021     06C7  2EC9               	goto	u2281
  4022     06C8  2ECA               	goto	u2280
  4023     06C9                     u2281:
  4024     06C9  2EB6               	goto	l2349
  4025     06CA                     u2280:
  4026     06CA                     l2351:
  4027     06CA  0820               	movf	___fltol@sign1^(0+128),w
  4028     06CB  1903               	btfsc	3,2
  4029     06CC  2ECE               	goto	u2291
  4030     06CD  2ECF               	goto	u2290
  4031     06CE                     u2291:
  4032     06CE  2EDC               	goto	l610
  4033     06CF                     u2290:
  4034     06CF                     l2353:
  4035     06CF  1283               	bcf	3,5	;RP0=0, select bank0
  4036     06D0  1303               	bcf	3,6	;RP1=0, select bank0
  4037     06D1  09B7               	comf	___fltol@f1,f
  4038     06D2  09B8               	comf	___fltol@f1+1,f
  4039     06D3  09B9               	comf	___fltol@f1+2,f
  4040     06D4  09BA               	comf	___fltol@f1+3,f
  4041     06D5  0AB7               	incf	___fltol@f1,f
  4042     06D6  1903               	skipnz
  4043     06D7  0AB8               	incf	___fltol@f1+1,f
  4044     06D8  1903               	skipnz
  4045     06D9  0AB9               	incf	___fltol@f1+2,f
  4046     06DA  1903               	skipnz
  4047     06DB  0ABA               	incf	___fltol@f1+3,f
  4048     06DC                     l610:
  4049     06DC                     l600:
  4050     06DC  0008               	return
  4051     06DD                     __end_of___fltol:
  4052                           
  4053                           	psect	text18
  4054     0330                     __ptext18:	
  4055 ;; *************** function _isr *****************
  4056 ;; Defined at:
  4057 ;;		line 87 in file "Kart_main.c"
  4058 ;; Parameters:    Size  Location     Type
  4059 ;;		None
  4060 ;; Auto vars:     Size  Location     Type
  4061 ;;		None
  4062 ;; Return value:  Size  Location     Type
  4063 ;;                  1    wreg      void 
  4064 ;; Registers used:
  4065 ;;		wreg, status,2, status,0, pclath, cstack
  4066 ;; Tracked objects:
  4067 ;;		On entry : 0/0
  4068 ;;		On exit  : 0/0
  4069 ;;		Unchanged: 0/0
  4070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4071 ;;      Params:         0       0       0       0       0
  4072 ;;      Locals:         0       0       0       0       0
  4073 ;;      Temps:          0       6       0       0       0
  4074 ;;      Totals:         0       6       0       0       0
  4075 ;;Total ram usage:        6 bytes
  4076 ;; Hardware stack levels used: 1
  4077 ;; Hardware stack levels required when called: 2
  4078 ;; This function calls:
  4079 ;;		_PWM_duty
  4080 ;;		_PWmanual_func
  4081 ;;		___xxtofl
  4082 ;;		_readEEPROM
  4083 ;;		_writeEEPROM
  4084 ;; This function is called by:
  4085 ;;		Interrupt level 1
  4086 ;; This function uses a non-reentrant model
  4087 ;;
  4088                           
  4089     0330                     _isr:	
  4090                           ;psect for function _isr
  4091                           
  4092     0330                     i1l2097:
  4093                           
  4094                           ;Kart_main.c: 89:    if(PIR1bits.ADIF){
  4095     0330  1F0C               	btfss	12,6	;volatile
  4096     0331  2B33               	goto	u195_21
  4097     0332  2B34               	goto	u195_20
  4098     0333                     u195_21:
  4099     0333  2BCC               	goto	i1l2117
  4100     0334                     u195_20:
  4101     0334                     i1l2099:
  4102                           
  4103                           ;Kart_main.c: 91:        if (ADCON0bits.CHS ==1){
  4104     0334  0C1F               	rrf	31,w	;volatile
  4105     0335  00B1               	movwf	??_isr
  4106     0336  0C31               	rrf	??_isr,w
  4107     0337  390F               	andlw	15
  4108     0338  3A01               	xorlw	1
  4109     0339  1D03               	skipz
  4110     033A  2B3C               	goto	u196_21
  4111     033B  2B3D               	goto	u196_20
  4112     033C                     u196_21:
  4113     033C  2B6C               	goto	i1l2105
  4114     033D                     u196_20:
  4115     033D                     i1l2101:
  4116                           
  4117                           ;Kart_main.c: 92:              PWM_duty(0,ADRESH);
  4118     033D  3000               	movlw	0
  4119     033E  00A0               	movwf	PWM_duty@chn
  4120     033F  00A1               	movwf	PWM_duty@chn+1
  4121     0340  081E               	movf	30,w	;volatile
  4122     0341  00B1               	movwf	??_isr
  4123     0342  01B2               	clrf	??_isr+1
  4124     0343  01B3               	clrf	??_isr+2
  4125     0344  01B4               	clrf	??_isr+3
  4126     0345  0834               	movf	??_isr+3,w
  4127     0346  00F3               	movwf	___xxtofl@val+3
  4128     0347  0833               	movf	??_isr+2,w
  4129     0348  00F2               	movwf	___xxtofl@val+2
  4130     0349  0832               	movf	??_isr+1,w
  4131     034A  00F1               	movwf	___xxtofl@val+1
  4132     034B  0831               	movf	??_isr,w
  4133     034C  00F0               	movwf	___xxtofl@val
  4134     034D  3000               	movlw	0
  4135     034E  120A  118A  24F3  120A  118A  	fcall	___xxtofl
  4136     0353  0873               	movf	?___xxtofl+3,w
  4137     0354  1283               	bcf	3,5	;RP0=0, select bank0
  4138     0355  1303               	bcf	3,6	;RP1=0, select bank0
  4139     0356  00A5               	movwf	PWM_duty@duty+3
  4140     0357  0872               	movf	?___xxtofl+2,w
  4141     0358  00A4               	movwf	PWM_duty@duty+2
  4142     0359  0871               	movf	?___xxtofl+1,w
  4143     035A  00A3               	movwf	PWM_duty@duty+1
  4144     035B  0870               	movf	?___xxtofl,w
  4145     035C  00A2               	movwf	PWM_duty@duty
  4146     035D  120A  158A  2601  120A  118A  	fcall	_PWM_duty
  4147     0362                     i1l2103:
  4148                           
  4149                           ;Kart_main.c: 93:               valpot0 = ADRESH;
  4150     0362  1283               	bcf	3,5	;RP0=0, select bank0
  4151     0363  1303               	bcf	3,6	;RP1=0, select bank0
  4152     0364  081E               	movf	30,w	;volatile
  4153     0365  00B1               	movwf	??_isr
  4154     0366  01B2               	clrf	??_isr+1
  4155     0367  0831               	movf	??_isr,w
  4156     0368  00CC               	movwf	_valpot0
  4157     0369  0832               	movf	??_isr+1,w
  4158     036A  00CD               	movwf	_valpot0+1
  4159                           
  4160                           ;Kart_main.c: 95:         }
  4161     036B  2BCB               	goto	i1l2115
  4162     036C                     i1l2105:
  4163     036C  0C1F               	rrf	31,w	;volatile
  4164     036D  00B1               	movwf	??_isr
  4165     036E  0C31               	rrf	??_isr,w
  4166     036F  390F               	andlw	15
  4167     0370  3A00               	xorlw	0
  4168     0371  1D03               	skipz
  4169     0372  2B74               	goto	u197_21
  4170     0373  2B75               	goto	u197_20
  4171     0374                     u197_21:
  4172     0374  2BA5               	goto	i1l2111
  4173     0375                     u197_20:
  4174     0375                     i1l2107:
  4175                           
  4176                           ;Kart_main.c: 97:             PWM_duty(1 ,ADRESH);
  4177     0375  3001               	movlw	1
  4178     0376  00A0               	movwf	PWM_duty@chn
  4179     0377  3000               	movlw	0
  4180     0378  00A1               	movwf	PWM_duty@chn+1
  4181     0379  081E               	movf	30,w	;volatile
  4182     037A  00B1               	movwf	??_isr
  4183     037B  01B2               	clrf	??_isr+1
  4184     037C  01B3               	clrf	??_isr+2
  4185     037D  01B4               	clrf	??_isr+3
  4186     037E  0834               	movf	??_isr+3,w
  4187     037F  00F3               	movwf	___xxtofl@val+3
  4188     0380  0833               	movf	??_isr+2,w
  4189     0381  00F2               	movwf	___xxtofl@val+2
  4190     0382  0832               	movf	??_isr+1,w
  4191     0383  00F1               	movwf	___xxtofl@val+1
  4192     0384  0831               	movf	??_isr,w
  4193     0385  00F0               	movwf	___xxtofl@val
  4194     0386  3000               	movlw	0
  4195     0387  120A  118A  24F3  120A  118A  	fcall	___xxtofl
  4196     038C  0873               	movf	?___xxtofl+3,w
  4197     038D  1283               	bcf	3,5	;RP0=0, select bank0
  4198     038E  1303               	bcf	3,6	;RP1=0, select bank0
  4199     038F  00A5               	movwf	PWM_duty@duty+3
  4200     0390  0872               	movf	?___xxtofl+2,w
  4201     0391  00A4               	movwf	PWM_duty@duty+2
  4202     0392  0871               	movf	?___xxtofl+1,w
  4203     0393  00A3               	movwf	PWM_duty@duty+1
  4204     0394  0870               	movf	?___xxtofl,w
  4205     0395  00A2               	movwf	PWM_duty@duty
  4206     0396  120A  158A  2601  120A  118A  	fcall	_PWM_duty
  4207     039B                     i1l2109:
  4208                           
  4209                           ;Kart_main.c: 98:              valpot1 = ADRESH;
  4210     039B  1283               	bcf	3,5	;RP0=0, select bank0
  4211     039C  1303               	bcf	3,6	;RP1=0, select bank0
  4212     039D  081E               	movf	30,w	;volatile
  4213     039E  00B1               	movwf	??_isr
  4214     039F  01B2               	clrf	??_isr+1
  4215     03A0  0831               	movf	??_isr,w
  4216     03A1  00CA               	movwf	_valpot1
  4217     03A2  0832               	movf	??_isr+1,w
  4218     03A3  00CB               	movwf	_valpot1+1
  4219                           
  4220                           ;Kart_main.c: 99:         }
  4221     03A4  2BCB               	goto	i1l2115
  4222     03A5                     i1l2111:
  4223     03A5  0C1F               	rrf	31,w	;volatile
  4224     03A6  00B1               	movwf	??_isr
  4225     03A7  0C31               	rrf	??_isr,w
  4226     03A8  390F               	andlw	15
  4227     03A9  3A02               	xorlw	2
  4228     03AA  1D03               	skipz
  4229     03AB  2BAD               	goto	u198_21
  4230     03AC  2BAE               	goto	u198_20
  4231     03AD                     u198_21:
  4232     03AD  2BCB               	goto	i1l2115
  4233     03AE                     u198_20:
  4234     03AE                     i1l2113:
  4235                           
  4236                           ;Kart_main.c: 101:             val = ADRESH;
  4237     03AE  081E               	movf	30,w	;volatile
  4238     03AF  00B1               	movwf	??_isr
  4239     03B0  01B2               	clrf	??_isr+1
  4240     03B1  01B3               	clrf	??_isr+2
  4241     03B2  01B4               	clrf	??_isr+3
  4242     03B3  0834               	movf	??_isr+3,w
  4243     03B4  00F3               	movwf	___xxtofl@val+3
  4244     03B5  0833               	movf	??_isr+2,w
  4245     03B6  00F2               	movwf	___xxtofl@val+2
  4246     03B7  0832               	movf	??_isr+1,w
  4247     03B8  00F1               	movwf	___xxtofl@val+1
  4248     03B9  0831               	movf	??_isr,w
  4249     03BA  00F0               	movwf	___xxtofl@val
  4250     03BB  3000               	movlw	0
  4251     03BC  120A  118A  24F3  120A  118A  	fcall	___xxtofl
  4252     03C1  0873               	movf	?___xxtofl+3,w
  4253     03C2  1283               	bcf	3,5	;RP0=0, select bank0
  4254     03C3  1303               	bcf	3,6	;RP1=0, select bank0
  4255     03C4  00C3               	movwf	_val+3
  4256     03C5  0872               	movf	?___xxtofl+2,w
  4257     03C6  00C2               	movwf	_val+2
  4258     03C7  0871               	movf	?___xxtofl+1,w
  4259     03C8  00C1               	movwf	_val+1
  4260     03C9  0870               	movf	?___xxtofl,w
  4261     03CA  00C0               	movwf	_val
  4262     03CB                     i1l2115:
  4263                           
  4264                           ;Kart_main.c: 102:             PIR1bits.ADIF =0;
  4265     03CB  130C               	bcf	12,6	;volatile
  4266     03CC                     i1l2117:
  4267                           
  4268                           ;Kart_main.c: 105:    if (INTCONbits.RBIF ){
  4269     03CC  1C0B               	btfss	11,0	;volatile
  4270     03CD  2BCF               	goto	u199_21
  4271     03CE  2BD0               	goto	u199_20
  4272     03CF                     u199_21:
  4273     03CF  2C19               	goto	i1l2135
  4274     03D0                     u199_20:
  4275     03D0                     i1l2119:
  4276                           
  4277                           ;Kart_main.c: 114:         if (!PORTBbits.RB0){
  4278     03D0  1806               	btfsc	6,0	;volatile
  4279     03D1  2BD3               	goto	u200_21
  4280     03D2  2BD4               	goto	u200_20
  4281     03D3                     u200_21:
  4282     03D3  2BE0               	goto	i1l2125
  4283     03D4                     u200_20:
  4284     03D4                     i1l134:
  4285     03D4  1C06               	btfss	6,0	;volatile
  4286     03D5  2BD7               	goto	u201_21
  4287     03D6  2BD8               	goto	u201_20
  4288     03D7                     u201_21:
  4289     03D7  2BD4               	goto	i1l134
  4290     03D8                     u201_20:
  4291     03D8                     i1l2123:
  4292                           
  4293                           ;Kart_main.c: 116:                 writeEEPROM(50, valpot1);
  4294     03D8  084A               	movf	_valpot1,w
  4295     03D9  00F0               	movwf	writeEEPROM@dataEE
  4296     03DA  3032               	movlw	50
  4297     03DB  120A  158A  262E  120A  118A  	fcall	_writeEEPROM
  4298     03E0                     i1l2125:
  4299                           
  4300                           ;Kart_main.c: 121:     if (!PORTBbits.RB1){
  4301     03E0  1283               	bcf	3,5	;RP0=0, select bank0
  4302     03E1  1303               	bcf	3,6	;RP1=0, select bank0
  4303     03E2  1886               	btfsc	6,1	;volatile
  4304     03E3  2BE5               	goto	u202_21
  4305     03E4  2BE6               	goto	u202_20
  4306     03E5                     u202_21:
  4307     03E5  2C19               	goto	i1l2135
  4308     03E6                     u202_20:
  4309     03E6  2C13               	goto	i1l2133
  4310     03E7                     i1l2129:
  4311                           
  4312                           ;Kart_main.c: 125:                 valprom = readEEPROM(50);
  4313     03E7  3032               	movlw	50
  4314     03E8  120A  158A  25BF  120A  118A  	fcall	_readEEPROM
  4315     03ED  1283               	bcf	3,5	;RP0=0, select bank0
  4316     03EE  1303               	bcf	3,6	;RP1=0, select bank0
  4317     03EF  00B1               	movwf	??_isr
  4318     03F0  01B2               	clrf	??_isr+1
  4319     03F1  0831               	movf	??_isr,w
  4320     03F2  00C8               	movwf	_valprom
  4321     03F3  0832               	movf	??_isr+1,w
  4322     03F4  00C9               	movwf	_valprom+1
  4323     03F5                     i1l2131:
  4324                           
  4325                           ;Kart_main.c: 126:                 PWM_duty(0,valprom);
  4326     03F5  3000               	movlw	0
  4327     03F6  00A0               	movwf	PWM_duty@chn
  4328     03F7  00A1               	movwf	PWM_duty@chn+1
  4329     03F8  0848               	movf	_valprom,w
  4330     03F9  00F0               	movwf	___xxtofl@val
  4331     03FA  0849               	movf	_valprom+1,w
  4332     03FB  00F1               	movwf	___xxtofl@val+1
  4333     03FC  01F2               	clrf	___xxtofl@val+2
  4334     03FD  01F3               	clrf	___xxtofl@val+3
  4335     03FE  3000               	movlw	0
  4336     03FF  120A  118A  24F3  120A  118A  	fcall	___xxtofl
  4337     0404  0873               	movf	?___xxtofl+3,w
  4338     0405  1283               	bcf	3,5	;RP0=0, select bank0
  4339     0406  1303               	bcf	3,6	;RP1=0, select bank0
  4340     0407  00A5               	movwf	PWM_duty@duty+3
  4341     0408  0872               	movf	?___xxtofl+2,w
  4342     0409  00A4               	movwf	PWM_duty@duty+2
  4343     040A  0871               	movf	?___xxtofl+1,w
  4344     040B  00A3               	movwf	PWM_duty@duty+1
  4345     040C  0870               	movf	?___xxtofl,w
  4346     040D  00A2               	movwf	PWM_duty@duty
  4347     040E  120A  158A  2601  120A  118A  	fcall	_PWM_duty
  4348     0413                     i1l2133:
  4349                           
  4350                           ;Kart_main.c: 122:             while (!RB1){
  4351     0413  1283               	bcf	3,5	;RP0=0, select bank0
  4352     0414  1303               	bcf	3,6	;RP1=0, select bank0
  4353     0415  1C86               	btfss	6,1	;volatile
  4354     0416  2C18               	goto	u203_21
  4355     0417  2C19               	goto	u203_20
  4356     0418                     u203_21:
  4357     0418  2BE7               	goto	i1l2129
  4358     0419                     u203_20:
  4359     0419                     i1l2135:
  4360                           
  4361                           ;Kart_main.c: 132:  PWmanual_func (val);
  4362     0419  0843               	movf	_val+3,w
  4363     041A  00AF               	movwf	PWmanual_func@valad+3
  4364     041B  0842               	movf	_val+2,w
  4365     041C  00AE               	movwf	PWmanual_func@valad+2
  4366     041D  0841               	movf	_val+1,w
  4367     041E  00AD               	movwf	PWmanual_func@valad+1
  4368     041F  0840               	movf	_val,w
  4369     0420  00AC               	movwf	PWmanual_func@valad
  4370     0421  120A  118A  26DD  120A  118A  	fcall	_PWmanual_func
  4371     0426                     i1l141:
  4372     0426  1283               	bcf	3,5	;RP0=0, select bank0
  4373     0427  1303               	bcf	3,6	;RP1=0, select bank0
  4374     0428  0836               	movf	??_isr+5,w
  4375     0429  008A               	movwf	10
  4376     042A  0E35               	swapf	??_isr+4,w
  4377     042B  0083               	movwf	3
  4378     042C  0EFE               	swapf	btemp,f
  4379     042D  0E7E               	swapf	btemp,w
  4380     042E  0009               	retfie
  4381     042F                     __end_of_isr:
  4382                           
  4383                           	psect	intentry
  4384     0004                     __pintentry:	
  4385                           ;incstack = 0
  4386                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  4387                           
  4388     0004                     interrupt_function:
  4389     007E                     saved_w	set	btemp
  4390     0004  00FE               	movwf	btemp
  4391     0005  0E03               	swapf	3,w
  4392     0006  1283               	bcf	3,5	;RP0=0, select bank0
  4393     0007  1303               	bcf	3,6	;RP1=0, select bank0
  4394     0008  00B5               	movwf	??_isr+4
  4395     0009  080A               	movf	10,w
  4396     000A  00B6               	movwf	??_isr+5
  4397     000B  120A  118A  2B30   	ljmp	_isr
  4398                           
  4399                           	psect	text19
  4400     0E2E                     __ptext19:	
  4401 ;; *************** function _writeEEPROM *****************
  4402 ;; Defined at:
  4403 ;;		line 62 in file "Kart_main.c"
  4404 ;; Parameters:    Size  Location     Type
  4405 ;;  address         1    wreg     unsigned char 
  4406 ;;  dataEE          1    0[COMMON] unsigned char 
  4407 ;; Auto vars:     Size  Location     Type
  4408 ;;  address         1    1[COMMON] unsigned char 
  4409 ;;  INTCON_SAVE     1    2[COMMON] unsigned char 
  4410 ;; Return value:  Size  Location     Type
  4411 ;;                  1    wreg      void 
  4412 ;; Registers used:
  4413 ;;		wreg, status,2
  4414 ;; Tracked objects:
  4415 ;;		On entry : 0/0
  4416 ;;		On exit  : 0/0
  4417 ;;		Unchanged: 0/0
  4418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4419 ;;      Params:         1       0       0       0       0
  4420 ;;      Locals:         2       0       0       0       0
  4421 ;;      Temps:          0       0       0       0       0
  4422 ;;      Totals:         3       0       0       0       0
  4423 ;;Total ram usage:        3 bytes
  4424 ;; Hardware stack levels used: 1
  4425 ;; This function calls:
  4426 ;;		Nothing
  4427 ;; This function is called by:
  4428 ;;		_isr
  4429 ;; This function uses a non-reentrant model
  4430 ;;
  4431                           
  4432     0E2E                     _writeEEPROM:	
  4433                           ;psect for function _writeEEPROM
  4434                           
  4435                           
  4436                           ;incstack = 0
  4437                           ; Regs used in _writeEEPROM: [wreg+status,2]
  4438                           ;writeEEPROM@address stored from wreg
  4439     0E2E  00F1               	movwf	writeEEPROM@address
  4440     0E2F                     i1l1843:
  4441                           
  4442                           ;Kart_main.c: 62: void writeEEPROM(unsigned char address, unsigned char dataEE);Kart_mai
      +                          n.c: 63: {;Kart_main.c: 64:   unsigned char INTCON_SAVE;;Kart_main.c: 65:   EEADR = addr
      +                          ess;
  4443     0E2F  0871               	movf	writeEEPROM@address,w
  4444     0E30  1283               	bcf	3,5	;RP0=0, select bank2
  4445     0E31  1703               	bsf	3,6	;RP1=1, select bank2
  4446     0E32  008D               	movwf	13	;volatile
  4447                           
  4448                           ;Kart_main.c: 66:   EEDATA = dataEE;
  4449     0E33  0870               	movf	writeEEPROM@dataEE,w
  4450     0E34  008C               	movwf	12	;volatile
  4451     0E35                     i1l1845:
  4452                           
  4453                           ;Kart_main.c: 67:   EECON1bits.EEPGD = 0;
  4454     0E35  1683               	bsf	3,5	;RP0=1, select bank3
  4455     0E36  1703               	bsf	3,6	;RP1=1, select bank3
  4456     0E37  138C               	bcf	12,7	;volsfr
  4457     0E38                     i1l1847:
  4458                           
  4459                           ;Kart_main.c: 68:   EECON1bits.WREN = 1;
  4460     0E38  150C               	bsf	12,2	;volsfr
  4461                           
  4462                           ;Kart_main.c: 69:   INTCON_SAVE=INTCON;
  4463     0E39  080B               	movf	11,w	;volatile
  4464     0E3A  00F2               	movwf	writeEEPROM@INTCON_SAVE
  4465     0E3B                     i1l1849:
  4466                           
  4467                           ;Kart_main.c: 70:   INTCON=0;
  4468     0E3B  018B               	clrf	11	;volatile
  4469     0E3C                     i1l1851:
  4470                           
  4471                           ;Kart_main.c: 71:   EECON2=0x55;
  4472     0E3C  3055               	movlw	85
  4473     0E3D  008D               	movwf	13	;volsfr
  4474     0E3E                     i1l1853:
  4475                           
  4476                           ;Kart_main.c: 72:   EECON2=0xAA;
  4477     0E3E  30AA               	movlw	170
  4478     0E3F  008D               	movwf	13	;volsfr
  4479     0E40                     i1l1855:
  4480                           
  4481                           ;Kart_main.c: 73:   EECON1bits.WR = 1;
  4482     0E40  148C               	bsf	12,1	;volsfr
  4483     0E41                     i1l1857:
  4484                           
  4485                           ;Kart_main.c: 74:   INTCON = INTCON_SAVE;
  4486     0E41  0872               	movf	writeEEPROM@INTCON_SAVE,w
  4487     0E42  008B               	movwf	11	;volatile
  4488     0E43                     i1l1859:
  4489                           
  4490                           ;Kart_main.c: 75:   EECON1bits.WREN = 0;
  4491     0E43  110C               	bcf	12,2	;volsfr
  4492                           
  4493                           ;Kart_main.c: 76:   while(PIR2bits.EEIF == 0)
  4494     0E44  2E46               	goto	i1l118
  4495     0E45                     i1l119:
  4496                           
  4497                           ;Kart_main.c: 77:   {;Kart_main.c: 78:     __nop();
  4498     0E45  0000               	nop
  4499     0E46                     i1l118:	
  4500                           ;Kart_main.c: 79:   }
  4501                           
  4502                           
  4503                           ;Kart_main.c: 76:   while(PIR2bits.EEIF == 0)
  4504     0E46  1283               	bcf	3,5	;RP0=0, select bank0
  4505     0E47  1303               	bcf	3,6	;RP1=0, select bank0
  4506     0E48  1E0D               	btfss	13,4	;volatile
  4507     0E49  2E4B               	goto	u166_21
  4508     0E4A  2E4C               	goto	u166_20
  4509     0E4B                     u166_21:
  4510     0E4B  2E45               	goto	i1l119
  4511     0E4C                     u166_20:
  4512     0E4C                     i1l120:
  4513                           
  4514                           ;Kart_main.c: 80:   PIR2bits.EEIF = 0;
  4515     0E4C  120D               	bcf	13,4	;volatile
  4516     0E4D                     i1l121:
  4517     0E4D  0008               	return
  4518     0E4E                     __end_of_writeEEPROM:
  4519                           
  4520                           	psect	text20
  4521     0DBF                     __ptext20:	
  4522 ;; *************** function _readEEPROM *****************
  4523 ;; Defined at:
  4524 ;;		line 53 in file "Kart_main.c"
  4525 ;; Parameters:    Size  Location     Type
  4526 ;;  address         1    wreg     unsigned char 
  4527 ;; Auto vars:     Size  Location     Type
  4528 ;;  address         1    0[COMMON] unsigned char 
  4529 ;; Return value:  Size  Location     Type
  4530 ;;                  1    wreg      unsigned char 
  4531 ;; Registers used:
  4532 ;;		wreg
  4533 ;; Tracked objects:
  4534 ;;		On entry : 0/0
  4535 ;;		On exit  : 0/0
  4536 ;;		Unchanged: 0/0
  4537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4538 ;;      Params:         0       0       0       0       0
  4539 ;;      Locals:         1       0       0       0       0
  4540 ;;      Temps:          0       0       0       0       0
  4541 ;;      Totals:         1       0       0       0       0
  4542 ;;Total ram usage:        1 bytes
  4543 ;; Hardware stack levels used: 1
  4544 ;; This function calls:
  4545 ;;		Nothing
  4546 ;; This function is called by:
  4547 ;;		_isr
  4548 ;; This function uses a non-reentrant model
  4549 ;;
  4550                           
  4551     0DBF                     _readEEPROM:	
  4552                           ;psect for function _readEEPROM
  4553                           
  4554                           
  4555                           ;incstack = 0
  4556                           ; Regs used in _readEEPROM: [wreg]
  4557                           ;readEEPROM@address stored from wreg
  4558     0DBF  00F0               	movwf	readEEPROM@address
  4559     0DC0                     i1l1835:
  4560                           
  4561                           ;Kart_main.c: 53: unsigned char readEEPROM(unsigned char address);Kart_main.c: 54: {;Kar
      +                          t_main.c: 56:   EEADR = address;
  4562     0DC0  0870               	movf	readEEPROM@address,w
  4563     0DC1  1283               	bcf	3,5	;RP0=0, select bank2
  4564     0DC2  1703               	bsf	3,6	;RP1=1, select bank2
  4565     0DC3  008D               	movwf	13	;volatile
  4566     0DC4                     i1l1837:
  4567                           
  4568                           ;Kart_main.c: 57:   EECON1bits.EEPGD = 0;
  4569     0DC4  1683               	bsf	3,5	;RP0=1, select bank3
  4570     0DC5  1703               	bsf	3,6	;RP1=1, select bank3
  4571     0DC6  138C               	bcf	12,7	;volsfr
  4572     0DC7                     i1l1839:
  4573                           
  4574                           ;Kart_main.c: 58:   EECON1bits.RD = 1;
  4575     0DC7  140C               	bsf	12,0	;volsfr
  4576                           
  4577                           ;Kart_main.c: 59:   return EEDATA;
  4578     0DC8  1283               	bcf	3,5	;RP0=0, select bank2
  4579     0DC9  1703               	bsf	3,6	;RP1=1, select bank2
  4580     0DCA  080C               	movf	12,w	;volatile
  4581     0DCB                     i1l115:
  4582     0DCB  0008               	return
  4583     0DCC                     __end_of_readEEPROM:
  4584                           
  4585                           	psect	text21
  4586     06DD                     __ptext21:	
  4587 ;; *************** function _PWmanual_func *****************
  4588 ;; Defined at:
  4589 ;;		line 17 in file "PWmanual.c"
  4590 ;; Parameters:    Size  Location     Type
  4591 ;;  valad           4   12[BANK0 ] float 
  4592 ;; Auto vars:     Size  Location     Type
  4593 ;;		None
  4594 ;; Return value:  Size  Location     Type
  4595 ;;                  1    wreg      void 
  4596 ;; Registers used:
  4597 ;;		wreg, status,2, status,0, pclath, cstack
  4598 ;; Tracked objects:
  4599 ;;		On entry : 0/0
  4600 ;;		On exit  : 0/0
  4601 ;;		Unchanged: 0/0
  4602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4603 ;;      Params:         0       4       0       0       0
  4604 ;;      Locals:         0       0       0       0       0
  4605 ;;      Temps:          0       1       0       0       0
  4606 ;;      Totals:         0       5       0       0       0
  4607 ;;Total ram usage:        5 bytes
  4608 ;; Hardware stack levels used: 1
  4609 ;; Hardware stack levels required when called: 1
  4610 ;; This function calls:
  4611 ;;		___fleq
  4612 ;;		___flge
  4613 ;;		___xxtofl
  4614 ;; This function is called by:
  4615 ;;		_isr
  4616 ;; This function uses a non-reentrant model
  4617 ;;
  4618                           
  4619     06DD                     _PWmanual_func:	
  4620                           ;psect for function _PWmanual_func
  4621                           
  4622     06DD                     i1l1867:	
  4623                           ;incstack = 0
  4624                           ; Regs used in _PWmanual_func: [wreg+status,2+status,0+pclath+cstack]
  4625                           
  4626                           
  4627                           ;PWmanual.c: 18:     if (PIR1bits.TMR2IF){
  4628     06DD  1283               	bcf	3,5	;RP0=0, select bank0
  4629     06DE  1303               	bcf	3,6	;RP1=0, select bank0
  4630     06DF  1C8C               	btfss	12,1	;volatile
  4631     06E0  2EE2               	goto	u168_21
  4632     06E1  2EE3               	goto	u168_20
  4633     06E2                     u168_21:
  4634     06E2  2F67               	goto	i1l282
  4635     06E3                     u168_20:
  4636     06E3                     i1l1869:
  4637                           
  4638                           ;PWmanual.c: 20:         for (i=0;i<=valad;i++){
  4639     06E3  1683               	bsf	3,5	;RP0=1, select bank1
  4640     06E4  1303               	bcf	3,6	;RP1=0, select bank1
  4641     06E5  01C5               	clrf	_i^(0+128)
  4642     06E6  01C6               	clrf	(_i+1)^(0+128)
  4643     06E7  2F36               	goto	i1l1877
  4644     06E8                     i1l1871:
  4645                           
  4646                           ;PWmanual.c: 21:             if (i== valad){
  4647     06E8  1683               	bsf	3,5	;RP0=1, select bank1
  4648     06E9  1303               	bcf	3,6	;RP1=0, select bank1
  4649     06EA  0845               	movf	_i^(0+128),w
  4650     06EB  00F0               	movwf	___xxtofl@val
  4651     06EC  0846               	movf	(_i+1)^(0+128),w
  4652     06ED  00F1               	movwf	___xxtofl@val+1
  4653     06EE  3000               	movlw	0
  4654     06EF  1BF1               	btfsc	___xxtofl@val+1,7
  4655     06F0  30FF               	movlw	255
  4656     06F1  00F2               	movwf	___xxtofl@val+2
  4657     06F2  00F3               	movwf	___xxtofl@val+3
  4658     06F3  3001               	movlw	1
  4659     06F4  120A  118A  24F3  120A  118A  	fcall	___xxtofl
  4660     06F9  0873               	movf	?___xxtofl+3,w
  4661     06FA  1283               	bcf	3,5	;RP0=0, select bank0
  4662     06FB  1303               	bcf	3,6	;RP1=0, select bank0
  4663     06FC  00A3               	movwf	___fleq@ff1+3
  4664     06FD  0872               	movf	?___xxtofl+2,w
  4665     06FE  00A2               	movwf	___fleq@ff1+2
  4666     06FF  0871               	movf	?___xxtofl+1,w
  4667     0700  00A1               	movwf	___fleq@ff1+1
  4668     0701  0870               	movf	?___xxtofl,w
  4669     0702  00A0               	movwf	___fleq@ff1
  4670     0703  082F               	movf	PWmanual_func@valad+3,w
  4671     0704  00A7               	movwf	___fleq@ff2+3
  4672     0705  082E               	movf	PWmanual_func@valad+2,w
  4673     0706  00A6               	movwf	___fleq@ff2+2
  4674     0707  082D               	movf	PWmanual_func@valad+1,w
  4675     0708  00A5               	movwf	___fleq@ff2+1
  4676     0709  082C               	movf	PWmanual_func@valad,w
  4677     070A  00A4               	movwf	___fleq@ff2
  4678     070B  120A  158A  27B0  120A  118A  	fcall	___fleq
  4679     0710  1C03               	btfss	3,0
  4680     0711  2F13               	goto	u169_21
  4681     0712  2F14               	goto	u169_20
  4682     0713                     u169_21:
  4683     0713  2F2E               	goto	i1l1875
  4684     0714                     u169_20:
  4685     0714                     i1l1873:
  4686                           
  4687                           ;PWmanual.c: 22:             TRISCbits.TRISC3 ++;
  4688     0714  1683               	bsf	3,5	;RP0=1, select bank1
  4689     0715  1303               	bcf	3,6	;RP1=0, select bank1
  4690     0716  0C07               	rrf	7,w	;volatile
  4691     0717  1283               	bcf	3,5	;RP0=0, select bank0
  4692     0718  1303               	bcf	3,6	;RP1=0, select bank0
  4693     0719  00B0               	movwf	??_PWmanual_func
  4694     071A  0CB0               	rrf	??_PWmanual_func,f
  4695     071B  0C30               	rrf	??_PWmanual_func,w
  4696     071C  3901               	andlw	1
  4697     071D  00B0               	movwf	??_PWmanual_func
  4698     071E  3001               	movlw	1
  4699     071F  06B0               	xorwf	??_PWmanual_func,f
  4700     0720  0DB0               	rlf	??_PWmanual_func,f
  4701     0721  0DB0               	rlf	??_PWmanual_func,f
  4702     0722  0DB0               	rlf	??_PWmanual_func,f
  4703     0723  1683               	bsf	3,5	;RP0=1, select bank1
  4704     0724  1303               	bcf	3,6	;RP1=0, select bank1
  4705     0725  0807               	movf	7,w	;volatile
  4706     0726  1283               	bcf	3,5	;RP0=0, select bank0
  4707     0727  1303               	bcf	3,6	;RP1=0, select bank0
  4708     0728  0630               	xorwf	??_PWmanual_func,w
  4709     0729  39F7               	andlw	-9
  4710     072A  0630               	xorwf	??_PWmanual_func,w
  4711     072B  1683               	bsf	3,5	;RP0=1, select bank1
  4712     072C  1303               	bcf	3,6	;RP1=0, select bank1
  4713     072D  0087               	movwf	7	;volatile
  4714     072E                     i1l1875:
  4715                           
  4716                           ;PWmanual.c: 25:         }
  4717     072E  3001               	movlw	1
  4718     072F  1683               	bsf	3,5	;RP0=1, select bank1
  4719     0730  1303               	bcf	3,6	;RP1=0, select bank1
  4720     0731  07C5               	addwf	_i^(0+128),f
  4721     0732  1803               	skipnc
  4722     0733  0AC6               	incf	(_i+1)^(0+128),f
  4723     0734  3000               	movlw	0
  4724     0735  07C6               	addwf	(_i+1)^(0+128),f
  4725     0736                     i1l1877:
  4726     0736  1283               	bcf	3,5	;RP0=0, select bank0
  4727     0737  1303               	bcf	3,6	;RP1=0, select bank0
  4728     0738  082F               	movf	PWmanual_func@valad+3,w
  4729     0739  00A3               	movwf	___flge@ff1+3
  4730     073A  082E               	movf	PWmanual_func@valad+2,w
  4731     073B  00A2               	movwf	___flge@ff1+2
  4732     073C  082D               	movf	PWmanual_func@valad+1,w
  4733     073D  00A1               	movwf	___flge@ff1+1
  4734     073E  082C               	movf	PWmanual_func@valad,w
  4735     073F  00A0               	movwf	___flge@ff1
  4736     0740  1683               	bsf	3,5	;RP0=1, select bank1
  4737     0741  1303               	bcf	3,6	;RP1=0, select bank1
  4738     0742  0845               	movf	_i^(0+128),w
  4739     0743  00F0               	movwf	___xxtofl@val
  4740     0744  0846               	movf	(_i+1)^(0+128),w
  4741     0745  00F1               	movwf	___xxtofl@val+1
  4742     0746  3000               	movlw	0
  4743     0747  1BF1               	btfsc	___xxtofl@val+1,7
  4744     0748  30FF               	movlw	255
  4745     0749  00F2               	movwf	___xxtofl@val+2
  4746     074A  00F3               	movwf	___xxtofl@val+3
  4747     074B  3001               	movlw	1
  4748     074C  120A  118A  24F3  120A  118A  	fcall	___xxtofl
  4749     0751  0873               	movf	?___xxtofl+3,w
  4750     0752  1283               	bcf	3,5	;RP0=0, select bank0
  4751     0753  1303               	bcf	3,6	;RP1=0, select bank0
  4752     0754  00A7               	movwf	___flge@ff2+3
  4753     0755  0872               	movf	?___xxtofl+2,w
  4754     0756  00A6               	movwf	___flge@ff2+2
  4755     0757  0871               	movf	?___xxtofl+1,w
  4756     0758  00A5               	movwf	___flge@ff2+1
  4757     0759  0870               	movf	?___xxtofl,w
  4758     075A  00A4               	movwf	___flge@ff2
  4759     075B  120A  118A  25AB  120A  118A  	fcall	___flge
  4760     0760  1803               	btfsc	3,0
  4761     0761  2F63               	goto	u170_21
  4762     0762  2F64               	goto	u170_20
  4763     0763                     u170_21:
  4764     0763  2EE8               	goto	i1l1871
  4765     0764                     u170_20:
  4766     0764                     i1l281:
  4767                           
  4768                           ;PWmanual.c: 26:        PIR1bits.TMR2IF = 0;
  4769     0764  1283               	bcf	3,5	;RP0=0, select bank0
  4770     0765  1303               	bcf	3,6	;RP1=0, select bank0
  4771     0766  108C               	bcf	12,1	;volatile
  4772     0767                     i1l282:
  4773     0767  0008               	return
  4774     0768                     __end_of_PWmanual_func:
  4775                           
  4776                           	psect	text22
  4777     04F3                     __ptext22:	
  4778 ;; *************** function ___xxtofl *****************
  4779 ;; Defined at:
  4780 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  4781 ;; Parameters:    Size  Location     Type
  4782 ;;  sign            1    wreg     unsigned char 
  4783 ;;  val             4    0[COMMON] long 
  4784 ;; Auto vars:     Size  Location     Type
  4785 ;;  sign            1    8[COMMON] unsigned char 
  4786 ;;  arg             4   10[COMMON] unsigned long 
  4787 ;;  exp             1    9[COMMON] unsigned char 
  4788 ;; Return value:  Size  Location     Type
  4789 ;;                  4    0[COMMON] unsigned char 
  4790 ;; Registers used:
  4791 ;;		wreg, status,2, status,0
  4792 ;; Tracked objects:
  4793 ;;		On entry : 0/0
  4794 ;;		On exit  : 0/0
  4795 ;;		Unchanged: 0/0
  4796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4797 ;;      Params:         4       0       0       0       0
  4798 ;;      Locals:         6       0       0       0       0
  4799 ;;      Temps:          4       0       0       0       0
  4800 ;;      Totals:        14       0       0       0       0
  4801 ;;Total ram usage:       14 bytes
  4802 ;; Hardware stack levels used: 1
  4803 ;; This function calls:
  4804 ;;		Nothing
  4805 ;; This function is called by:
  4806 ;;		_isr
  4807 ;;		_PWmanual_func
  4808 ;; This function uses a non-reentrant model
  4809 ;;
  4810                           
  4811     04F3                     ___xxtofl:	
  4812                           ;psect for function ___xxtofl
  4813                           
  4814                           
  4815                           ;incstack = 0
  4816                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4817                           ;___xxtofl@sign stored from wreg
  4818     04F3  00F8               	movwf	___xxtofl@sign
  4819     04F4                     i1l1791:
  4820     04F4  0878               	movf	___xxtofl@sign,w
  4821     04F5  1903               	btfsc	3,2
  4822     04F6  2CF8               	goto	u152_21
  4823     04F7  2CF9               	goto	u152_20
  4824     04F8                     u152_21:
  4825     04F8  2D0D               	goto	i1l1797
  4826     04F9                     u152_20:
  4827     04F9                     i1l1793:
  4828     04F9  1FF3               	btfss	___xxtofl@val+3,7
  4829     04FA  2CFC               	goto	u153_21
  4830     04FB  2CFD               	goto	u153_20
  4831     04FC                     u153_21:
  4832     04FC  2D0D               	goto	i1l1797
  4833     04FD                     u153_20:
  4834     04FD                     i1l1795:
  4835     04FD  0970               	comf	___xxtofl@val,w
  4836     04FE  00FA               	movwf	___xxtofl@arg
  4837     04FF  0971               	comf	___xxtofl@val+1,w
  4838     0500  00FB               	movwf	___xxtofl@arg+1
  4839     0501  0972               	comf	___xxtofl@val+2,w
  4840     0502  00FC               	movwf	___xxtofl@arg+2
  4841     0503  0973               	comf	___xxtofl@val+3,w
  4842     0504  00FD               	movwf	___xxtofl@arg+3
  4843     0505  0AFA               	incf	___xxtofl@arg,f
  4844     0506  1903               	skipnz
  4845     0507  0AFB               	incf	___xxtofl@arg+1,f
  4846     0508  1903               	skipnz
  4847     0509  0AFC               	incf	___xxtofl@arg+2,f
  4848     050A  1903               	skipnz
  4849     050B  0AFD               	incf	___xxtofl@arg+3,f
  4850     050C  2D15               	goto	i1l847
  4851     050D                     i1l1797:
  4852     050D  0873               	movf	___xxtofl@val+3,w
  4853     050E  00FD               	movwf	___xxtofl@arg+3
  4854     050F  0872               	movf	___xxtofl@val+2,w
  4855     0510  00FC               	movwf	___xxtofl@arg+2
  4856     0511  0871               	movf	___xxtofl@val+1,w
  4857     0512  00FB               	movwf	___xxtofl@arg+1
  4858     0513  0870               	movf	___xxtofl@val,w
  4859     0514  00FA               	movwf	___xxtofl@arg
  4860     0515                     i1l847:
  4861     0515  0873               	movf	___xxtofl@val+3,w
  4862     0516  0472               	iorwf	___xxtofl@val+2,w
  4863     0517  0471               	iorwf	___xxtofl@val+1,w
  4864     0518  0470               	iorwf	___xxtofl@val,w
  4865     0519  1D03               	skipz
  4866     051A  2D1C               	goto	u154_21
  4867     051B  2D1D               	goto	u154_20
  4868     051C                     u154_21:
  4869     051C  2D26               	goto	i1l1803
  4870     051D                     u154_20:
  4871     051D                     i1l1799:
  4872     051D  3000               	movlw	0
  4873     051E  00F3               	movwf	?___xxtofl+3
  4874     051F  3000               	movlw	0
  4875     0520  00F2               	movwf	?___xxtofl+2
  4876     0521  3000               	movlw	0
  4877     0522  00F1               	movwf	?___xxtofl+1
  4878     0523  3000               	movlw	0
  4879     0524  00F0               	movwf	?___xxtofl
  4880     0525  2DAA               	goto	i1l849
  4881     0526                     i1l1803:
  4882     0526  3096               	movlw	150
  4883     0527  00F9               	movwf	___xxtofl@exp
  4884     0528  2D36               	goto	i1l1807
  4885     0529                     i1l1805:
  4886     0529  3001               	movlw	1
  4887     052A  00F4               	movwf	??___xxtofl
  4888     052B  0874               	movf	??___xxtofl,w
  4889     052C  07F9               	addwf	___xxtofl@exp,f
  4890     052D  3001               	movlw	1
  4891     052E                     u155_25:
  4892     052E  1003               	clrc
  4893     052F  0CFD               	rrf	___xxtofl@arg+3,f
  4894     0530  0CFC               	rrf	___xxtofl@arg+2,f
  4895     0531  0CFB               	rrf	___xxtofl@arg+1,f
  4896     0532  0CFA               	rrf	___xxtofl@arg,f
  4897     0533  3EFF               	addlw	-1
  4898     0534  1D03               	skipz
  4899     0535  2D2E               	goto	u155_25
  4900     0536                     i1l1807:
  4901     0536  30FE               	movlw	254
  4902     0537  057D               	andwf	___xxtofl@arg+3,w
  4903     0538  1D03               	btfss	3,2
  4904     0539  2D3B               	goto	u156_21
  4905     053A  2D3C               	goto	u156_20
  4906     053B                     u156_21:
  4907     053B  2D29               	goto	i1l1805
  4908     053C                     u156_20:
  4909     053C  2D58               	goto	i1l853
  4910     053D                     i1l1809:
  4911     053D  3001               	movlw	1
  4912     053E  00F4               	movwf	??___xxtofl
  4913     053F  0874               	movf	??___xxtofl,w
  4914     0540  07F9               	addwf	___xxtofl@exp,f
  4915     0541                     i1l1811:
  4916     0541  3001               	movlw	1
  4917     0542  07FA               	addwf	___xxtofl@arg,f
  4918     0543  3000               	movlw	0
  4919     0544  1803               	skipnc
  4920     0545  3001               	movlw	1
  4921     0546  07FB               	addwf	___xxtofl@arg+1,f
  4922     0547  3000               	movlw	0
  4923     0548  1803               	skipnc
  4924     0549  3001               	movlw	1
  4925     054A  07FC               	addwf	___xxtofl@arg+2,f
  4926     054B  3000               	movlw	0
  4927     054C  1803               	skipnc
  4928     054D  3001               	movlw	1
  4929     054E  07FD               	addwf	___xxtofl@arg+3,f
  4930     054F                     i1l1813:
  4931     054F  3001               	movlw	1
  4932     0550                     u157_25:
  4933     0550  1003               	clrc
  4934     0551  0CFD               	rrf	___xxtofl@arg+3,f
  4935     0552  0CFC               	rrf	___xxtofl@arg+2,f
  4936     0553  0CFB               	rrf	___xxtofl@arg+1,f
  4937     0554  0CFA               	rrf	___xxtofl@arg,f
  4938     0555  3EFF               	addlw	-1
  4939     0556  1D03               	skipz
  4940     0557  2D50               	goto	u157_25
  4941     0558                     i1l853:
  4942     0558  30FF               	movlw	255
  4943     0559  057D               	andwf	___xxtofl@arg+3,w
  4944     055A  1D03               	btfss	3,2
  4945     055B  2D5D               	goto	u158_21
  4946     055C  2D5E               	goto	u158_20
  4947     055D                     u158_21:
  4948     055D  2D3D               	goto	i1l1809
  4949     055E                     u158_20:
  4950     055E  2D6A               	goto	i1l1817
  4951     055F                     i1l1815:
  4952     055F  3001               	movlw	1
  4953     0560  02F9               	subwf	___xxtofl@exp,f
  4954     0561  3001               	movlw	1
  4955     0562  00F4               	movwf	??___xxtofl
  4956     0563                     u159_25:
  4957     0563  1003               	clrc
  4958     0564  0DFA               	rlf	___xxtofl@arg,f
  4959     0565  0DFB               	rlf	___xxtofl@arg+1,f
  4960     0566  0DFC               	rlf	___xxtofl@arg+2,f
  4961     0567  0DFD               	rlf	___xxtofl@arg+3,f
  4962     0568  0BF4               	decfsz	??___xxtofl,f
  4963     0569  2D63               	goto	u159_25
  4964     056A                     i1l1817:
  4965     056A  1BFC               	btfsc	___xxtofl@arg+2,7
  4966     056B  2D6D               	goto	u160_21
  4967     056C  2D6E               	goto	u160_20
  4968     056D                     u160_21:
  4969     056D  2D74               	goto	i1l860
  4970     056E                     u160_20:
  4971     056E                     i1l1819:
  4972     056E  3002               	movlw	2
  4973     056F  0279               	subwf	___xxtofl@exp,w
  4974     0570  1803               	skipnc
  4975     0571  2D73               	goto	u161_21
  4976     0572  2D74               	goto	u161_20
  4977     0573                     u161_21:
  4978     0573  2D5F               	goto	i1l1815
  4979     0574                     u161_20:
  4980     0574                     i1l860:
  4981     0574  1879               	btfsc	___xxtofl@exp,0
  4982     0575  2D77               	goto	u162_21
  4983     0576  2D78               	goto	u162_20
  4984     0577                     u162_21:
  4985     0577  2D80               	goto	i1l861
  4986     0578                     u162_20:
  4987     0578                     i1l1821:
  4988     0578  30FF               	movlw	255
  4989     0579  05FA               	andwf	___xxtofl@arg,f
  4990     057A  30FF               	movlw	255
  4991     057B  05FB               	andwf	___xxtofl@arg+1,f
  4992     057C  307F               	movlw	127
  4993     057D  05FC               	andwf	___xxtofl@arg+2,f
  4994     057E  30FF               	movlw	255
  4995     057F  05FD               	andwf	___xxtofl@arg+3,f
  4996     0580                     i1l861:
  4997     0580  1003               	clrc
  4998     0581  0CF9               	rrf	___xxtofl@exp,f
  4999     0582                     i1l1823:
  5000     0582  0879               	movf	___xxtofl@exp,w
  5001     0583  00F4               	movwf	??___xxtofl
  5002     0584  01F5               	clrf	??___xxtofl+1
  5003     0585  01F6               	clrf	??___xxtofl+2
  5004     0586  01F7               	clrf	??___xxtofl+3
  5005     0587  3018               	movlw	24
  5006     0588                     u163_25:
  5007     0588  1003               	clrc
  5008     0589  0DF4               	rlf	??___xxtofl,f
  5009     058A  0DF5               	rlf	??___xxtofl+1,f
  5010     058B  0DF6               	rlf	??___xxtofl+2,f
  5011     058C  0DF7               	rlf	??___xxtofl+3,f
  5012     058D                     u163_20:
  5013     058D  3EFF               	addlw	-1
  5014     058E  1D03               	skipz
  5015     058F  2D88               	goto	u163_25
  5016     0590  0874               	movf	??___xxtofl,w
  5017     0591  04FA               	iorwf	___xxtofl@arg,f
  5018     0592  0875               	movf	??___xxtofl+1,w
  5019     0593  04FB               	iorwf	___xxtofl@arg+1,f
  5020     0594  0876               	movf	??___xxtofl+2,w
  5021     0595  04FC               	iorwf	___xxtofl@arg+2,f
  5022     0596  0877               	movf	??___xxtofl+3,w
  5023     0597  04FD               	iorwf	___xxtofl@arg+3,f
  5024     0598                     i1l1825:
  5025     0598  0878               	movf	___xxtofl@sign,w
  5026     0599  1903               	btfsc	3,2
  5027     059A  2D9C               	goto	u164_21
  5028     059B  2D9D               	goto	u164_20
  5029     059C                     u164_21:
  5030     059C  2DA2               	goto	i1l1831
  5031     059D                     u164_20:
  5032     059D                     i1l1827:
  5033     059D  1FF3               	btfss	___xxtofl@val+3,7
  5034     059E  2DA0               	goto	u165_21
  5035     059F  2DA1               	goto	u165_20
  5036     05A0                     u165_21:
  5037     05A0  2DA2               	goto	i1l1831
  5038     05A1                     u165_20:
  5039     05A1                     i1l1829:
  5040     05A1  17FD               	bsf	___xxtofl@arg+3,7
  5041     05A2                     i1l1831:
  5042     05A2  087D               	movf	___xxtofl@arg+3,w
  5043     05A3  00F3               	movwf	?___xxtofl+3
  5044     05A4  087C               	movf	___xxtofl@arg+2,w
  5045     05A5  00F2               	movwf	?___xxtofl+2
  5046     05A6  087B               	movf	___xxtofl@arg+1,w
  5047     05A7  00F1               	movwf	?___xxtofl+1
  5048     05A8  087A               	movf	___xxtofl@arg,w
  5049     05A9  00F0               	movwf	?___xxtofl
  5050     05AA                     i1l849:
  5051     05AA  0008               	return
  5052     05AB                     __end_of___xxtofl:
  5053                           
  5054                           	psect	text23
  5055     05AB                     __ptext23:	
  5056 ;; *************** function ___flge *****************
  5057 ;; Defined at:
  5058 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flge.c"
  5059 ;; Parameters:    Size  Location     Type
  5060 ;;  ff1             4    0[BANK0 ] unsigned char 
  5061 ;;  ff2             4    4[BANK0 ] unsigned char 
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;		None
  5064 ;; Return value:  Size  Location     Type
  5065 ;;		None               void
  5066 ;; Registers used:
  5067 ;;		wreg, status,2, status,0
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5073 ;;      Params:         0       8       0       0       0
  5074 ;;      Locals:         0       0       0       0       0
  5075 ;;      Temps:          0       4       0       0       0
  5076 ;;      Totals:         0      12       0       0       0
  5077 ;;Total ram usage:       12 bytes
  5078 ;; Hardware stack levels used: 1
  5079 ;; This function calls:
  5080 ;;		Nothing
  5081 ;; This function is called by:
  5082 ;;		_PWmanual_func
  5083 ;; This function uses a non-reentrant model
  5084 ;;
  5085                           
  5086     05AB                     ___flge:	
  5087                           ;psect for function ___flge
  5088                           
  5089     05AB                     i1l1687:	
  5090                           ;incstack = 0
  5091                           ; Regs used in ___flge: [wreg+status,2+status,0]
  5092                           
  5093     05AB  3000               	movlw	0
  5094     05AC  1283               	bcf	3,5	;RP0=0, select bank0
  5095     05AD  1303               	bcf	3,6	;RP1=0, select bank0
  5096     05AE  0520               	andwf	___flge@ff1,w
  5097     05AF  00A8               	movwf	??___flge
  5098     05B0  3000               	movlw	0
  5099     05B1  0521               	andwf	___flge@ff1+1,w
  5100     05B2  00A9               	movwf	??___flge+1
  5101     05B3  3080               	movlw	128
  5102     05B4  0522               	andwf	___flge@ff1+2,w
  5103     05B5  00AA               	movwf	??___flge+2
  5104     05B6  307F               	movlw	127
  5105     05B7  0523               	andwf	___flge@ff1+3,w
  5106     05B8  00AB               	movwf	??___flge+3
  5107     05B9  082B               	movf	??___flge+3,w
  5108     05BA  042A               	iorwf	??___flge+2,w
  5109     05BB  0429               	iorwf	??___flge+1,w
  5110     05BC  0428               	iorwf	??___flge,w
  5111     05BD  1D03               	skipz
  5112     05BE  2DC0               	goto	u122_21
  5113     05BF  2DC1               	goto	u122_20
  5114     05C0                     u122_21:
  5115     05C0  2DC9               	goto	i1l588
  5116     05C1                     u122_20:
  5117     05C1                     i1l1689:
  5118     05C1  3000               	movlw	0
  5119     05C2  00A3               	movwf	___flge@ff1+3
  5120     05C3  3000               	movlw	0
  5121     05C4  00A2               	movwf	___flge@ff1+2
  5122     05C5  3000               	movlw	0
  5123     05C6  00A1               	movwf	___flge@ff1+1
  5124     05C7  3000               	movlw	0
  5125     05C8  00A0               	movwf	___flge@ff1
  5126     05C9                     i1l588:
  5127     05C9  3000               	movlw	0
  5128     05CA  0524               	andwf	___flge@ff2,w
  5129     05CB  00A8               	movwf	??___flge
  5130     05CC  3000               	movlw	0
  5131     05CD  0525               	andwf	___flge@ff2+1,w
  5132     05CE  00A9               	movwf	??___flge+1
  5133     05CF  3080               	movlw	128
  5134     05D0  0526               	andwf	___flge@ff2+2,w
  5135     05D1  00AA               	movwf	??___flge+2
  5136     05D2  307F               	movlw	127
  5137     05D3  0527               	andwf	___flge@ff2+3,w
  5138     05D4  00AB               	movwf	??___flge+3
  5139     05D5  082B               	movf	??___flge+3,w
  5140     05D6  042A               	iorwf	??___flge+2,w
  5141     05D7  0429               	iorwf	??___flge+1,w
  5142     05D8  0428               	iorwf	??___flge,w
  5143     05D9  1D03               	skipz
  5144     05DA  2DDC               	goto	u123_21
  5145     05DB  2DDD               	goto	u123_20
  5146     05DC                     u123_21:
  5147     05DC  2DE5               	goto	i1l1693
  5148     05DD                     u123_20:
  5149     05DD                     i1l1691:
  5150     05DD  3000               	movlw	0
  5151     05DE  00A7               	movwf	___flge@ff2+3
  5152     05DF  3000               	movlw	0
  5153     05E0  00A6               	movwf	___flge@ff2+2
  5154     05E1  3000               	movlw	0
  5155     05E2  00A5               	movwf	___flge@ff2+1
  5156     05E3  3000               	movlw	0
  5157     05E4  00A4               	movwf	___flge@ff2
  5158     05E5                     i1l1693:
  5159     05E5  1FA3               	btfss	___flge@ff1+3,7
  5160     05E6  2DE8               	goto	u124_21
  5161     05E7  2DE9               	goto	u124_20
  5162     05E8                     u124_21:
  5163     05E8  2E0D               	goto	i1l1697
  5164     05E9                     u124_20:
  5165     05E9                     i1l1695:
  5166     05E9  3000               	movlw	0
  5167     05EA  00A8               	movwf	??___flge
  5168     05EB  3000               	movlw	0
  5169     05EC  00A9               	movwf	??___flge+1
  5170     05ED  3000               	movlw	0
  5171     05EE  00AA               	movwf	??___flge+2
  5172     05EF  3080               	movlw	128
  5173     05F0  00AB               	movwf	??___flge+3
  5174     05F1  0820               	movf	___flge@ff1,w
  5175     05F2  02A8               	subwf	??___flge,f
  5176     05F3  0821               	movf	___flge@ff1+1,w
  5177     05F4  1C03               	skipc
  5178     05F5  0F21               	incfsz	___flge@ff1+1,w
  5179     05F6  2DF8               	goto	u125_21
  5180     05F7  2DF9               	goto	u125_22
  5181     05F8                     u125_21:
  5182     05F8  02A9               	subwf	??___flge+1,f
  5183     05F9                     u125_22:
  5184     05F9  0822               	movf	___flge@ff1+2,w
  5185     05FA  1C03               	skipc
  5186     05FB  0F22               	incfsz	___flge@ff1+2,w
  5187     05FC  2DFE               	goto	u125_23
  5188     05FD  2DFF               	goto	u125_24
  5189     05FE                     u125_23:
  5190     05FE  02AA               	subwf	??___flge+2,f
  5191     05FF                     u125_24:
  5192     05FF  0823               	movf	___flge@ff1+3,w
  5193     0600  1C03               	skipc
  5194     0601  0F23               	incfsz	___flge@ff1+3,w
  5195     0602  2E04               	goto	u125_25
  5196     0603  2E05               	goto	u125_26
  5197     0604                     u125_25:
  5198     0604  02AB               	subwf	??___flge+3,f
  5199     0605                     u125_26:
  5200     0605  082B               	movf	??___flge+3,w
  5201     0606  00A3               	movwf	___flge@ff1+3
  5202     0607  082A               	movf	??___flge+2,w
  5203     0608  00A2               	movwf	___flge@ff1+2
  5204     0609  0829               	movf	??___flge+1,w
  5205     060A  00A1               	movwf	___flge@ff1+1
  5206     060B  0828               	movf	??___flge,w
  5207     060C  00A0               	movwf	___flge@ff1
  5208     060D                     i1l1697:
  5209     060D  1FA7               	btfss	___flge@ff2+3,7
  5210     060E  2E10               	goto	u126_21
  5211     060F  2E11               	goto	u126_20
  5212     0610                     u126_21:
  5213     0610  2E35               	goto	i1l591
  5214     0611                     u126_20:
  5215     0611                     i1l1699:
  5216     0611  3000               	movlw	0
  5217     0612  00A8               	movwf	??___flge
  5218     0613  3000               	movlw	0
  5219     0614  00A9               	movwf	??___flge+1
  5220     0615  3000               	movlw	0
  5221     0616  00AA               	movwf	??___flge+2
  5222     0617  3080               	movlw	128
  5223     0618  00AB               	movwf	??___flge+3
  5224     0619  0824               	movf	___flge@ff2,w
  5225     061A  02A8               	subwf	??___flge,f
  5226     061B  0825               	movf	___flge@ff2+1,w
  5227     061C  1C03               	skipc
  5228     061D  0F25               	incfsz	___flge@ff2+1,w
  5229     061E  2E20               	goto	u127_21
  5230     061F  2E21               	goto	u127_22
  5231     0620                     u127_21:
  5232     0620  02A9               	subwf	??___flge+1,f
  5233     0621                     u127_22:
  5234     0621  0826               	movf	___flge@ff2+2,w
  5235     0622  1C03               	skipc
  5236     0623  0F26               	incfsz	___flge@ff2+2,w
  5237     0624  2E26               	goto	u127_23
  5238     0625  2E27               	goto	u127_24
  5239     0626                     u127_23:
  5240     0626  02AA               	subwf	??___flge+2,f
  5241     0627                     u127_24:
  5242     0627  0827               	movf	___flge@ff2+3,w
  5243     0628  1C03               	skipc
  5244     0629  0F27               	incfsz	___flge@ff2+3,w
  5245     062A  2E2C               	goto	u127_25
  5246     062B  2E2D               	goto	u127_26
  5247     062C                     u127_25:
  5248     062C  02AB               	subwf	??___flge+3,f
  5249     062D                     u127_26:
  5250     062D  082B               	movf	??___flge+3,w
  5251     062E  00A7               	movwf	___flge@ff2+3
  5252     062F  082A               	movf	??___flge+2,w
  5253     0630  00A6               	movwf	___flge@ff2+2
  5254     0631  0829               	movf	??___flge+1,w
  5255     0632  00A5               	movwf	___flge@ff2+1
  5256     0633  0828               	movf	??___flge,w
  5257     0634  00A4               	movwf	___flge@ff2
  5258     0635                     i1l591:
  5259     0635  3080               	movlw	128
  5260     0636  06A3               	xorwf	___flge@ff1+3,f
  5261     0637  3080               	movlw	128
  5262     0638  06A7               	xorwf	___flge@ff2+3,f
  5263     0639  0827               	movf	___flge@ff2+3,w
  5264     063A  0223               	subwf	___flge@ff1+3,w
  5265     063B  1D03               	skipz
  5266     063C  2E47               	goto	u128_25
  5267     063D  0826               	movf	___flge@ff2+2,w
  5268     063E  0222               	subwf	___flge@ff1+2,w
  5269     063F  1D03               	skipz
  5270     0640  2E47               	goto	u128_25
  5271     0641  0825               	movf	___flge@ff2+1,w
  5272     0642  0221               	subwf	___flge@ff1+1,w
  5273     0643  1D03               	skipz
  5274     0644  2E47               	goto	u128_25
  5275     0645  0824               	movf	___flge@ff2,w
  5276     0646  0220               	subwf	___flge@ff1,w
  5277     0647                     u128_25:
  5278     0647  1803               	skipnc
  5279     0648  2E4A               	goto	u128_21
  5280     0649  2E4B               	goto	u128_20
  5281     064A                     u128_21:
  5282     064A  2E4D               	goto	i1l1703
  5283     064B                     u128_20:
  5284     064B                     i1l1701:
  5285     064B  1003               	clrc
  5286     064C  2E4E               	goto	i1l592
  5287     064D                     i1l1703:
  5288     064D  1403               	setc
  5289     064E                     i1l592:
  5290     064E  0008               	return
  5291     064F                     __end_of___flge:
  5292                           
  5293                           	psect	text24
  5294     0FB0                     __ptext24:	
  5295 ;; *************** function ___fleq *****************
  5296 ;; Defined at:
  5297 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fleq.c"
  5298 ;; Parameters:    Size  Location     Type
  5299 ;;  ff1             4    0[BANK0 ] unsigned char 
  5300 ;;  ff2             4    4[BANK0 ] unsigned char 
  5301 ;; Auto vars:     Size  Location     Type
  5302 ;;		None
  5303 ;; Return value:  Size  Location     Type
  5304 ;;		None               void
  5305 ;; Registers used:
  5306 ;;		wreg, status,2, status,0
  5307 ;; Tracked objects:
  5308 ;;		On entry : 0/0
  5309 ;;		On exit  : 0/0
  5310 ;;		Unchanged: 0/0
  5311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5312 ;;      Params:         0       8       0       0       0
  5313 ;;      Locals:         0       0       0       0       0
  5314 ;;      Temps:          0       4       0       0       0
  5315 ;;      Totals:         0      12       0       0       0
  5316 ;;Total ram usage:       12 bytes
  5317 ;; Hardware stack levels used: 1
  5318 ;; This function calls:
  5319 ;;		Nothing
  5320 ;; This function is called by:
  5321 ;;		_PWmanual_func
  5322 ;; This function uses a non-reentrant model
  5323 ;;
  5324                           
  5325     0FB0                     ___fleq:	
  5326                           ;psect for function ___fleq
  5327                           
  5328     0FB0                     i1l1675:	
  5329                           ;incstack = 0
  5330                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  5331                           
  5332     0FB0  3000               	movlw	0
  5333     0FB1  1283               	bcf	3,5	;RP0=0, select bank0
  5334     0FB2  1303               	bcf	3,6	;RP1=0, select bank0
  5335     0FB3  0520               	andwf	___fleq@ff1,w
  5336     0FB4  00A8               	movwf	??___fleq
  5337     0FB5  3000               	movlw	0
  5338     0FB6  0521               	andwf	___fleq@ff1+1,w
  5339     0FB7  00A9               	movwf	??___fleq+1
  5340     0FB8  3080               	movlw	128
  5341     0FB9  0522               	andwf	___fleq@ff1+2,w
  5342     0FBA  00AA               	movwf	??___fleq+2
  5343     0FBB  307F               	movlw	127
  5344     0FBC  0523               	andwf	___fleq@ff1+3,w
  5345     0FBD  00AB               	movwf	??___fleq+3
  5346     0FBE  082B               	movf	??___fleq+3,w
  5347     0FBF  042A               	iorwf	??___fleq+2,w
  5348     0FC0  0429               	iorwf	??___fleq+1,w
  5349     0FC1  0428               	iorwf	??___fleq,w
  5350     0FC2  1D03               	skipz
  5351     0FC3  2FC5               	goto	u119_21
  5352     0FC4  2FC6               	goto	u119_20
  5353     0FC5                     u119_21:
  5354     0FC5  2FCE               	goto	i1l583
  5355     0FC6                     u119_20:
  5356     0FC6                     i1l1677:
  5357     0FC6  3000               	movlw	0
  5358     0FC7  00A3               	movwf	___fleq@ff1+3
  5359     0FC8  3000               	movlw	0
  5360     0FC9  00A2               	movwf	___fleq@ff1+2
  5361     0FCA  3000               	movlw	0
  5362     0FCB  00A1               	movwf	___fleq@ff1+1
  5363     0FCC  3000               	movlw	0
  5364     0FCD  00A0               	movwf	___fleq@ff1
  5365     0FCE                     i1l583:
  5366     0FCE  3000               	movlw	0
  5367     0FCF  0524               	andwf	___fleq@ff2,w
  5368     0FD0  00A8               	movwf	??___fleq
  5369     0FD1  3000               	movlw	0
  5370     0FD2  0525               	andwf	___fleq@ff2+1,w
  5371     0FD3  00A9               	movwf	??___fleq+1
  5372     0FD4  3080               	movlw	128
  5373     0FD5  0526               	andwf	___fleq@ff2+2,w
  5374     0FD6  00AA               	movwf	??___fleq+2
  5375     0FD7  307F               	movlw	127
  5376     0FD8  0527               	andwf	___fleq@ff2+3,w
  5377     0FD9  00AB               	movwf	??___fleq+3
  5378     0FDA  082B               	movf	??___fleq+3,w
  5379     0FDB  042A               	iorwf	??___fleq+2,w
  5380     0FDC  0429               	iorwf	??___fleq+1,w
  5381     0FDD  0428               	iorwf	??___fleq,w
  5382     0FDE  1D03               	skipz
  5383     0FDF  2FE1               	goto	u120_21
  5384     0FE0  2FE2               	goto	u120_20
  5385     0FE1                     u120_21:
  5386     0FE1  2FEA               	goto	i1l584
  5387     0FE2                     u120_20:
  5388     0FE2                     i1l1679:
  5389     0FE2  3000               	movlw	0
  5390     0FE3  00A7               	movwf	___fleq@ff2+3
  5391     0FE4  3000               	movlw	0
  5392     0FE5  00A6               	movwf	___fleq@ff2+2
  5393     0FE6  3000               	movlw	0
  5394     0FE7  00A5               	movwf	___fleq@ff2+1
  5395     0FE8  3000               	movlw	0
  5396     0FE9  00A4               	movwf	___fleq@ff2
  5397     0FEA                     i1l584:
  5398     0FEA  0827               	movf	___fleq@ff2+3,w
  5399     0FEB  0623               	xorwf	___fleq@ff1+3,w
  5400     0FEC  1D03               	skipz
  5401     0FED  2FF8               	goto	u121_25
  5402     0FEE  0826               	movf	___fleq@ff2+2,w
  5403     0FEF  0622               	xorwf	___fleq@ff1+2,w
  5404     0FF0  1D03               	skipz
  5405     0FF1  2FF8               	goto	u121_25
  5406     0FF2  0825               	movf	___fleq@ff2+1,w
  5407     0FF3  0621               	xorwf	___fleq@ff1+1,w
  5408     0FF4  1D03               	skipz
  5409     0FF5  2FF8               	goto	u121_25
  5410     0FF6  0824               	movf	___fleq@ff2,w
  5411     0FF7  0620               	xorwf	___fleq@ff1,w
  5412     0FF8                     u121_25:
  5413     0FF8  1903               	skipnz
  5414     0FF9  2FFB               	goto	u121_21
  5415     0FFA  2FFC               	goto	u121_20
  5416     0FFB                     u121_21:
  5417     0FFB  2FFE               	goto	i1l1683
  5418     0FFC                     u121_20:
  5419     0FFC                     i1l1681:
  5420     0FFC  1003               	clrc
  5421     0FFD  2FFF               	goto	i1l585
  5422     0FFE                     i1l1683:
  5423     0FFE  1403               	setc
  5424     0FFF                     i1l585:
  5425     0FFF  0008               	return
  5426     1000                     __end_of___fleq:
  5427                           
  5428                           	psect	text25
  5429     0E01                     __ptext25:	
  5430 ;; *************** function _PWM_duty *****************
  5431 ;; Defined at:
  5432 ;;		line 46 in file "PWM.c"
  5433 ;; Parameters:    Size  Location     Type
  5434 ;;  chn             2    0[BANK0 ] int 
  5435 ;;  duty            4    2[BANK0 ] float 
  5436 ;; Auto vars:     Size  Location     Type
  5437 ;;		None
  5438 ;; Return value:  Size  Location     Type
  5439 ;;                  1    wreg      void 
  5440 ;; Registers used:
  5441 ;;		wreg, status,2, status,0
  5442 ;; Tracked objects:
  5443 ;;		On entry : 0/0
  5444 ;;		On exit  : 0/0
  5445 ;;		Unchanged: 0/0
  5446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5447 ;;      Params:         0       6       0       0       0
  5448 ;;      Locals:         0       0       0       0       0
  5449 ;;      Temps:          0       1       0       0       0
  5450 ;;      Totals:         0       7       0       0       0
  5451 ;;Total ram usage:        7 bytes
  5452 ;; Hardware stack levels used: 1
  5453 ;; This function calls:
  5454 ;;		Nothing
  5455 ;; This function is called by:
  5456 ;;		_isr
  5457 ;; This function uses a non-reentrant model
  5458 ;;
  5459                           
  5460     0E01                     _PWM_duty:	
  5461                           ;psect for function _PWM_duty
  5462                           
  5463     0E01                     i1l1861:	
  5464                           ;incstack = 0
  5465                           ; Regs used in _PWM_duty: [wreg+status,2+status,0]
  5466                           
  5467                           
  5468                           ;PWM.c: 47:       if (chn==0)
  5469     0E01  1283               	bcf	3,5	;RP0=0, select bank0
  5470     0E02  1303               	bcf	3,6	;RP1=0, select bank0
  5471     0E03  0820               	movf	PWM_duty@chn,w
  5472     0E04  0421               	iorwf	PWM_duty@chn+1,w
  5473     0E05  1D03               	btfss	3,2
  5474     0E06  2E08               	goto	u167_21
  5475     0E07  2E09               	goto	u167_20
  5476     0E08                     u167_21:
  5477     0E08  2E10               	goto	i1l1865
  5478     0E09                     u167_20:
  5479     0E09                     i1l1863:
  5480                           
  5481                           ;PWM.c: 48:           CCPR1L = (ADRESH>>1)+128;
  5482     0E09  081E               	movf	30,w	;volatile
  5483     0E0A  00A6               	movwf	??_PWM_duty
  5484     0E0B  1003               	clrc
  5485     0E0C  0C26               	rrf	??_PWM_duty,w
  5486     0E0D  3E80               	addlw	128
  5487     0E0E  0095               	movwf	21	;volatile
  5488     0E0F  2E16               	goto	i1l206
  5489     0E10                     i1l1865:
  5490                           
  5491                           ;PWM.c: 51:           CCPR2L = (ADRESH>>1)+128;
  5492     0E10  081E               	movf	30,w	;volatile
  5493     0E11  00A6               	movwf	??_PWM_duty
  5494     0E12  1003               	clrc
  5495     0E13  0C26               	rrf	??_PWM_duty,w
  5496     0E14  3E80               	addlw	128
  5497     0E15  009B               	movwf	27	;volatile
  5498     0E16                     i1l206:
  5499     0E16  0008               	return
  5500     0E17                     __end_of_PWM_duty:
  5501     007E                     btemp	set	126	;btemp
  5502     007E                     wtemp0	set	126
  5503                           
  5504                           	psect	idloc
  5505                           
  5506                           ;Config register IDLOC0 @ 0x2000
  5507                           ;	unspecified, using default values
  5508     2000                     	org	8192
  5509     2000  3FFF               	dw	16383
  5510                           
  5511                           ;Config register IDLOC1 @ 0x2001
  5512                           ;	unspecified, using default values
  5513     2001                     	org	8193
  5514     2001  3FFF               	dw	16383
  5515                           
  5516                           ;Config register IDLOC2 @ 0x2002
  5517                           ;	unspecified, using default values
  5518     2002                     	org	8194
  5519     2002  3FFF               	dw	16383
  5520                           
  5521                           ;Config register IDLOC3 @ 0x2003
  5522                           ;	unspecified, using default values
  5523     2003                     	org	8195
  5524     2003  3FFF               	dw	16383
  5525                           
  5526                           	psect	config
  5527                           
  5528                           ;Config register CONFIG1 @ 0x2007
  5529                           ;	Oscillator Selection bits
  5530                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  5531                           ;	Watchdog Timer Enable bit
  5532                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5533                           ;	Power-up Timer Enable bit
  5534                           ;	PWRTE = OFF, PWRT disabled
  5535                           ;	RE3/MCLR pin function select bit
  5536                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5537                           ;	Code Protection bit
  5538                           ;	CP = OFF, Program memory code protection is disabled
  5539                           ;	Data Code Protection bit
  5540                           ;	CPD = OFF, Data memory code protection is disabled
  5541                           ;	Brown Out Reset Selection bits
  5542                           ;	BOREN = OFF, BOR disabled
  5543                           ;	Internal External Switchover bit
  5544                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5545                           ;	Fail-Safe Clock Monitor Enabled bit
  5546                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5547                           ;	Low Voltage Programming Enable bit
  5548                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5549                           ;	In-Circuit Debugger Mode bit
  5550                           ;	DEBUG = 0x1, unprogrammed default
  5551     2007                     	org	8199
  5552     2007  20D5               	dw	8405
  5553                           
  5554                           ;Config register CONFIG2 @ 0x2008
  5555                           ;	Brown-out Reset Selection bit
  5556                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5557                           ;	Flash Program Memory Self Write Enable bits
  5558                           ;	WRT = OFF, Write protection off
  5559     2008                     	org	8200
  5560     2008  3FFF               	dw	16383

Data Sizes:
    Strings     30
    Constant    25
    Data        0
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     32      57
    BANK1            80     33      39
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_4(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 9
		 -> main@text(BANK1[9]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    UART_Print@data	PTR const unsigned char  size(2) Largest target is 8192
		 -> STR_7(CODE[23]), STR_6(CODE[3]), ROM(CODE[8192]), STR_5(CODE[3]), 
		 -> main@text(BANK1[9]), STR_3(CODE[3]), STR_2(CODE[3]), message(CODE[15]), 
		 -> STR_1(CODE[23]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___xxtofl
    _PWmanual_func->___xxtofl
    ___flge->___xxtofl
    ___fleq->___xxtofl
    _PWM_duty->___xxtofl

Critical Paths under _main in BANK0

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _preguntas->_UART_Print
    _UART_Print->_UART_PutC
    _UART_Init->___lldiv
    _PWM_init->___fltol

Critical Paths under _isr in BANK0

    _isr->_PWmanual_func
    _PWmanual_func->___fleq
    _PWmanual_func->___flge

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___lwmod
    _UART_Init->___lldiv
    _PWM_init->___fltol

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0    6144
                                             20 BANK1     13    13      0
                           _PWM_init
                      _PWmanual_init
                    _UART_Data_Ready
                          _UART_GetC
                          _UART_Init
                         _UART_Print
                          _UART_PutC
                          _preguntas
                              _setup
                            _sprintf
                          _uart_read
 ---------------------------------------------------------------------------------
 (1) _uart_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    20      3    2438
                                              5 BANK1     15    12      3
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                             23 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                             23 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                             31 BANK0      1     1      0
                                              0 BANK1      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                             23 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _preguntas                                            0     0      0     872
                         _UART_Print
 ---------------------------------------------------------------------------------
 (2) _UART_Print                                           5     3      2     872
                                             24 BANK0      5     3      2
                          _UART_PutC
                          _uart_read (ARG)
 ---------------------------------------------------------------------------------
 (3) _UART_PutC                                            1     1      0      22
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           10     6      4     920
                                              5 BANK1     10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     601
                                             23 BANK0      9     1      8
                                              0 BANK1      5     5      0
 ---------------------------------------------------------------------------------
 (1) _UART_GetC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Data_Ready                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWmanual_init                                        3     1      2      98
                                             23 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _PWM_init                                             8     0      8     790
                                              2 BANK1      8     0      8
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     427
                                             23 BANK0      8     4      4
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  6     6      0    2895
                                             17 BANK0      6     6      0
                           _PWM_duty
                      _PWmanual_func
                           ___xxtofl
                         _readEEPROM
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (5) _writeEEPROM                                          3     2      1     143
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (5) _readEEPROM                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _PWmanual_func                                        5     1      4    1474
                                             12 BANK0      5     1      4
                             ___fleq
                             ___flge
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4     778
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     334
                                              0 BANK0     12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     242
                                              0 BANK0     12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _PWM_duty                                             7     1      6     478
                                              0 BANK0      7     1      6
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM_init
     ___fltol
   _PWmanual_init
   _UART_Data_Ready
   _UART_GetC
   _UART_Init
     ___lldiv
   _UART_Print
     _UART_PutC
     _uart_read (ARG)
   _UART_PutC
   _preguntas
     _UART_Print
   _setup
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
   _uart_read

 _isr (ROOT)
   _PWM_duty
     ___xxtofl (ARG)
   _PWmanual_func
     ___fleq
       ___xxtofl (ARG)
     ___flge
       ___xxtofl (ARG)
     ___xxtofl
   ___xxtofl
   _readEEPROM
   _writeEEPROM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      6E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     20      39       5       71.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     21      27       7       48.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      6E      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Jun 01 00:53:05 2023

                      _i 00C5                        pc 0002          ??_PWmanual_func 0030  
        ??_PWmanual_init 0039                       fsr 0004      ___wmul@multiplicand 0039  
                    l200 0FAE                      l201 0FAF                      l231 04E1  
                    l240 0DBE                      l232 04EE                      l233 04F2  
                    l250 07F5                      l410 01C9                      l146 0DEC  
                    l243 0DCC                      l245 0DD2                      l253 07FF  
                    l166 0EDE                      l414 0E5C                      l247 0DD9  
                    l600 06DC                      l416 0E74                      l169 0E2D  
                    l610 06DC                      l274 0DB4                      l450 07F1  
                    l259 0EA9                      l380 0040                      l198 0FAA  
                    l607 06C5                      l686 0F64                      l696 0F1E  
                    l867 0E00                      _RB0 0030                      _RB1 0031  
                    _PR2 0092                      _chn 0052                      _isr 0330  
                    _val 0040                      fsr0 0004                      indf 0000  
           ___fltol@exp1 00A1                     l2301 0790                     l2311 07C7  
                   l2303 0796                     l2321 065C                     l2081 0DB5  
                   l2313 07D1                     l2305 07A4                     l2331 0689  
                   l2411 0F9A                     l2403 0F65                     l2083 0DBB  
                   l2091 0DD6                     l2307 07B6                     l2315 07D9  
                   l2341 0699                     l2333 068D                     l2325 0667  
                   l2421 0FA2                     l2413 0F9C                     l2405 0F71  
                   l2085 0DBD                     l2093 0DD8                     l2309 07C4  
                   l1613 07F5                     l1621 0E8E                     l2501 0127  
                   l2351 06CA                     l2335 0691                     l2343 06AF  
                   l2327 067E                     l2319 064F                     l2423 0FA6  
                   l2415 0F9E                     l2407 0F92                     l2431 0475  
                   l1615 07FB                     l1623 0E94                     l2079 0E17  
                   l2271 0DF1                     l2503 012B                     l2511 0147  
                   l2353 06CF                     l2329 0681                     l2425 0FA8  
                   l2417 0F9F                     l2409 0F96                     l2089 0DCC  
                   l2441 04DB                     l2433 0479                     l1617 0E75  
                   l2361 0F2C                     l2281 0E4E                     l2273 0DF7  
                   l2521 0165                     l2513 014D                     l2505 0131  
      writeEEPROM@dataEE 0070                     l2427 0FA9                     l2419 0FA1  
                   l2443 04E8                     l2435 047B                     l1619 0E79  
                   l2371 0F52                     l2363 0F33                     l2355 0F1F  
                   l2291 0E70                     l2283 0E52                     l2275 0DFD  
                   l2523 01A3                     l2515 0152                     l2507 0136  
                   l2531 01C5                     l2451 0037                     l2603 02FF  
                   l2349 06B6                     l2437 0488                     l2429 042F  
                   l1901 0EB3                     l2373 0F53                     l2365 0F37  
                   l2357 0F23                     l2381 0EDF                     l2285 0E56  
                   l2277 0DFF                     l2269 0DF0                     l2525 01A8  
                   l2517 0156                     l2509 013A                     l2461 0058  
                   l2453 003C                     l2445 0029                     l2605 0315  
                   l2295 0768                     l2439 04CE                     l1911 0EC1  
                   l1903 0EB5                     l2375 0F5A                     l2367 0F3B  
                   l2359 0F29                     l2391 0EFD                     l2383 0EE7  
                   l2287 0E63                     l2527 01AC                     l2519 0162  
                   l2471 00A6                     l2463 0068                     l2455 0041  
                   l2447 002C                     l2607 031E                     l2551 01E9  
                   l2543 01CA                     l2297 077C                     l1921 0ECC  
                   l1913 0EC2                     l1905 0EB6                     l2369 0F4C  
                   l2377 0F60                     l2393 0F07                     l2385 0EEA  
                   l2289 0E6A                     l2481 00E0                     l2473 00B7  
                   l2465 006C                     l2449 0032                     l2529 01B5  
                   l2609 0326                     l2561 022D                     l2553 01F8  
                   l2545 01CF                     l2299 0781                     l1931 0EDB  
                   l1923 0ECD                     l1915 0EC3                     l1907 0EBC  
                   l2395 0F0D                     l2387 0EF1                     l2483 00E4  
                   l2467 008F                     l2459 0045                     l2571 0258  
                   l2563 0238                     l2555 0206                     l2547 01D3  
                   l1933 0EDC                     l1925 0ED4                     l1917 0EC4  
                   l1909 0EC0                     l2397 0F14                     l2389 0EF9  
                   l2493 0102                     l2469 00A2                     l2477 00BC  
                   l2581 0281                     l2573 025E                     l2565 0246  
                   l2557 0214                     l2549 01E6                     l1935 0EDD  
                   l1927 0ED7                     l1919 0ECA                     l2399 0F1A  
                   l2495 010C                     l2479 00D8                     l2591 02C1  
                   l2583 0282                     l2575 0262                     l2567 0251  
                   l2559 021F                     l1929 0EDA                     l2497 0117  
                   l2489 00E6                     l1881 0DE0                     l2593 02D0  
                   l2569 0254                     l2499 0123                     l2691 00D0  
                   l1883 0DE4                     l1891 0DEB                     l2595 02DB  
                   l2587 028B                     l2579 0270                     l1885 0DE9  
                   l2597 02EA                     l2589 02BC                     l1895 0EAA  
                   l1879 0DDA                     l2687 030D                     l2599 02F5  
                   l1897 0EAE                     l2689 0053                     l1979 0DAB  
                   l1899 0EAF                     ?_isr 0070                     STR_1 0829  
                   STR_2 083D                     STR_3 083D                     STR_4 0840  
                   STR_5 083D                     STR_6 083D                     STR_7 0829  
                   _CREN 00C4                     u1040 07FB                     u1041 07FA  
                   u1050 0EA9                     u1051 0EA8                     u2200 065C  
                   u2120 0E70                     u2201 065B                     u2121 0E6F  
                   u2105 0E5D                     u2210 0677                     u2130 077C  
                   u2131 077B                     u2115 0E64                     u2220 0691  
                   u2300 0F29                     u2221 0690                     u2301 0F28  
                   u2230 0698                     u2150 0796                     u2070 0DF7  
                   u2231 0697                     u2215 0672                     u2151 0795  
                   u2071 0DF6                     u2320 0F3B                     u2400 0F07  
                   u2080 0DFD                     u2145 0783                     u2321 0F3A  
                   u2401 0F06                     u2081 0DFC                     u2250 06AE  
                   u2170 07B6                     u2090 0E56                     u2251 06AD  
                   u2171 07B5                     u2315 0F2D                     u2091 0E55  
                   u2260 06B5                     u2340 0F4C                     u2420 0F1A  
                   u2500 0068                     u2261 06B4                     u2245 069A  
                   u2165 0799                     u2341 0F4B                     u2421 0F19  
                   u2405 0F03                     u2501 0067                     u2430 0FAE  
                   u2190 07D9                     u2510 00B6                     u1710 0DE0  
                   u2431 0FAD                     u2191 07D8                     u2175 07B2  
                   u2335 0F3C                     u2415 0F0E                     u2511 00B5  
                   u1711 0DDF                     u2280 06CA                     u2440 043F  
                   u2360 0F60                     u2600 01B5                     u2520 0101  
                   u1720 0DE4                     u2281 06C9                     u2185 07C8  
                   u2361 0F5F                     u2345 0F48                     u2601 01B4  
                   u2521 0100                     u1721 0DE3                     u2290 06CF  
                   u2450 0479                     u2370 0EE7                     u2610 01C5  
                   u2530 010C                     u2291 06CE                     u2275 06BA  
                   u2451 0478                     u2355 0F54                     u2371 0EE6  
                   u2611 01C4                     u2531 010B                     u2460 0488  
                   u2540 0117                     u2620 025E                     u2461 0487  
                   u2445 043A                     u2541 0116                     u2525 00FD  
                   u2621 025D                     u2470 0498                     u2390 0EFD  
                   u2550 012B                     u2630 026F                     u2391 0EFC  
                   u2551 012A                     u2631 026E                     u1920 0DBB  
                   u2480 04DB                     u2560 0131                     u2640 031E  
                   u1921 0DBA                     u2481 04DA                     u2465 0484  
                   u2385 0EEB                     u2561 0130                     u2545 0113  
                   u2641 031D                     u1930 0DD2                     u2570 0146  
                   u2490 0032                     u1931 0DD1                     u2475 0493  
                   u2571 0145                     u2491 0031                     u2635 026B  
                   u1940 0DD6                     u2580 014D                     u1941 0DD5  
                   u2485 04D7                     u2581 014C                     u2590 0162  
                   u2591 0161                     u2657 020E                     u2667 0227  
                   u2677 0240                     u2687 02C9                     u2697 0ED1  
                   _RCIF 0065                     _OERR 00C1                     _TRMT 04C1  
                   _WPUB 0095                     _chn1 0056                     _chn2 0054  
                   _main 01CA                     btemp 007E                     start 000E  
            _writeEEPROM 0E2E       PWmanual_func@valad 002C                    ??_isr 0031  
          ___fltol@sign1 00A0       writeEEPROM@address 0071                    ?_main 0070  
                  _EEADR 010D          __end_of___fltol 06DD                    _ANSEL 0188  
        __end_of___lldiv 07F2          __end_of___lwdiv 0F65                    i1l120 0E4C  
                  i1l121 0E4D                    i1l115 0DCB                    i1l141 0426  
                  i1l206 0E16                    i1l118 0E46                    i1l134 03D4  
                  i1l119 0E45                    i1l281 0764          __end_of___lwmod 0F1F  
                  i1l282 0767                    i1l583 0FCE                    i1l591 0635  
                  i1l584 0FEA                    i1l592 064E                    i1l585 0FFF  
                  i1l588 05C9                    i1l860 0574                    i1l861 0580  
                  i1l853 0558                    i1l847 0515                    i1l849 05AA  
                  _RCREG 001A                    _RCSTA 0018                    _SPBRG 0099  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TXREG 0019                    _TXSTA 0098  
            ?_UART_Print 0038          __end_of_dpowers 081A          __end_of_isdigit 0E01  
                  _valad 00C1          __end_of_message 0829                    _setup 0EAA  
                  main@c 00C0                    pclath 000A         __end_of_PWM_init 0FB0  
       __end_of_PWM_duty 0E17                    status 0003                    wtemp0 007E  
        __end_of_sprintf 01CA          __initialization 0011             __end_of_main 0330  
    PWmanual_init@portsl 0070                   ??_main 00B4                   _ADRESH 001E  
                 _EEDATA 010C                   _CCPR1L 0015                   _CCPR2L 001B  
                 _EECON2 018D                   ?_setup 0070                   _ANSELH 0189  
                 i1l2101 033D                   i1l2111 03A5                   i1l2103 0362  
                 i1l2113 03AE                   i1l2105 036C                   i1l2131 03F5  
                 i1l2123 03D8                   i1l2107 0375                   i1l2115 03CB  
                 i1l2133 0413                   i1l2125 03E0                   i1l2109 039B  
                 i1l2117 03CC                   i1l2119 03D0                   i1l2135 0419  
                 u120_20 0FE2                   u200_20 03D4                   u120_21 0FE1  
                 i1l2129 03E7                   u200_21 03D3                   i1l1701 064B  
                 i1l1703 064D                   u121_20 0FFC                   u201_20 03D8  
                 u121_21 0FFB                   u201_21 03D7                   i1l2097 0330  
                 i1l1811 0541                   i1l1803 0526                   i1l2099 0334  
                 u121_25 0FF8                   i1l1821 0578                   i1l1813 054F  
                 i1l1805 0529                   i1l1831 05A2                   i1l1823 0582  
                 i1l1815 055F                   i1l1807 0536                   u122_20 05C1  
                 u202_20 03E6                   i1l1681 0FFC                   u122_21 05C0  
                 i1l1825 0598                   i1l1817 056A                   i1l1809 053D  
                 u202_21 03E5                   i1l1683 0FFE                   i1l1675 0FB0  
                 i1l1691 05DD                   i1l1827 059D                   i1l1819 056E  
                 i1l1835 0DC0                   i1l1851 0E3C                   i1l1843 0E2F  
                 i1l1861 0E01                   i1l1677 0FC6                   i1l1693 05E5  
                 i1l1829 05A1                   i1l1837 0DC4                   i1l1853 0E3E  
                 i1l1845 0E35                   i1l1863 0E09                   i1l1679 0FE2  
                 i1l1695 05E9                   i1l1687 05AB                   i1l1791 04F4  
                 i1l1871 06E8                   i1l1839 0DC7                   i1l1855 0E40  
                 i1l1847 0E38                   u123_20 05DD                   u203_20 0419  
                 i1l1865 0E10                   i1l1697 060D                   u123_21 05DC  
                 i1l1689 05C1                   i1l1793 04F9                   i1l1873 0714  
                 i1l1857 0E41                   i1l1849 0E3B                   u203_21 0418  
                 i1l1699 0611                   i1l1795 04FD                   i1l1875 072E  
                 i1l1867 06DD                   i1l1859 0E43                   i1l1797 050D  
                 i1l1877 0736                   i1l1869 06E3                   i1l1799 051D  
                 u124_20 05E9                   u124_21 05E8                   u125_21 05F8  
                 u125_22 05F9                   u125_23 05FE                   u125_24 05FF  
                 u125_25 0604                   u125_26 0605                   u126_20 0611  
                 u126_21 0610                   u119_20 0FC6                   u119_21 0FC5  
                 u127_21 0620                   u127_22 0621                   u127_23 0626  
                 u127_24 0627                   u127_25 062C                   u127_26 062D  
                 u128_20 064B                   u160_20 056E                   u152_20 04F9  
                 u128_21 064A                   u160_21 056D                   u152_21 04F8  
                 u128_25 0647                   u161_20 0574                   u153_20 04FD  
                 _INTCON 000B                   u161_21 0573                   u153_21 04FC  
                 u162_20 0578                   u154_20 051D                   u170_20 0764  
                 u162_21 0577                   u154_21 051C                   u170_21 0763  
                 u163_20 058D                   u163_25 0588                   u155_25 052E  
                 u164_20 059D                   u156_20 053C                   u164_21 059C  
                 u156_21 053B                   u165_20 05A1                   u165_21 05A0  
                 u157_25 0550                   u158_20 055E                   u166_20 0E4C  
                 u158_21 055D                   u166_21 0E4B                   u167_20 0E09  
                 u167_21 0E08                   u159_25 0563                   u168_20 06E3  
                 u168_21 06E2                   u169_20 0714                   u169_21 0713  
                 u195_20 0334                   u195_21 0333                   u196_20 033D  
                 u196_21 033C                   u197_20 0375                   u197_21 0374  
                 u198_20 03AE                   u198_21 03AD                   u199_20 03D0  
                 u199_21 03CF                   _OSCCON 008F         __end_of___xxtofl 05AB  
      __end_of_UART_GetC 0DDA        __end_of_UART_Init 04F3        __end_of_UART_PutC 0800  
                 ___flge 05AB                   ___fleq 0FB0                   ___wmul 0E4E  
              ??___fltol 003B                ??___lldiv 003F                ??___lwdiv 003B  
              ??___lwmod 003F                   _valadr 004E                   _portsl 0058  
              ??_isdigit 0037                   saved_w 007E                ??_sprintf 00A8  
             ___flge@ff1 0020               ___flge@ff2 0024             ___xxtofl@arg 007A  
           ___xxtofl@exp 0079             ___xxtofl@val 0070               ___fleq@ff1 0020  
             ___fleq@ff2 0024  __end_of__initialization 0022               ___fltol@f1 0037  
         __pcstackCOMMON 0070            __end_of_setup 0EDF                ?_PWM_init 00A2  
              ?_PWM_duty 0020           _OPTION_REGbits 0081     PWmanual_init@numport 0037  
           sprintf@width 00B1                  ??_setup 0037               __pbssBANK0 0040  
             __pbssBANK1 00C1               __pmaintext 01CA             ?_writeEEPROM 0070  
                ?___flge 0020                  ?___fleq 0020                  ?___wmul 0037  
             __pintentry 0004    __end_of_PWmanual_func 0768    __end_of_PWmanual_init 0DB5  
     PWM_init@periodo_ms 00A6               ??_PWM_init 003F               ??_PWM_duty 0026  
              ?___xxtofl 0070             PWM_init@chn1 00A2             PWM_init@chn2 00A4  
           ??_UART_Print 003A             PWM_duty@duty 0022               __stringtab 0800  
             _readEEPROM 0DBF       __end_of_UART_Print 0EAA                  ___fltol 064F  
                ___lldiv 0768                  ___lwdiv 0F1F                  ___lwmod 0EDF  
                __ptext1 0DDA                  __ptext2 0026                  __ptext3 0DED  
                __ptext4 0E4E                  __ptext5 0EDF                  __ptext6 0F1F  
                __ptext7 0EAA                  __ptext8 0E17                  __ptext9 0E75  
                _dpowers 0810                _T2CONbits 0012                  _isdigit 0DED  
             ??___xxtofl 0074                  _message 081A              UART_Print@i 003C  
         UART_Print@data 0038                  _valpot0 004C                  _valpot1 004A  
                _valprom 0048                  _numport 0050                  _sprintf 0026  
                clrloop0 0DA4     end_of_initialization 0022               _periodo_ms 0044  
      __end_of_uart_read 0DED        __end_of_preguntas 0E2E          ___lldiv@divisor 0037  
        ___lldiv@counter 00A4                _RCSTAbits 0018        ??_UART_Data_Ready 0037  
              _UART_GetC 0DCC                _UART_Init 042F                _UART_PutC 07F2  
              _PORTBbits 0006       UART_Init@baud_rate 00A5            ___xxtofl@sign 0078  
              _TRISCbits 0087        readEEPROM@address 0070              _CCP1CONbits 0017  
            ?_readEEPROM 0070              _CCP2CONbits 001D           __end_of___flge 064F  
         __end_of___fleq 1000           __end_of___wmul 0E75               ?_UART_GetC 0070  
             ?_UART_Init 00A5               ?_UART_PutC 0070   writeEEPROM@INTCON_SAVE 0072  
    start_initialization 0011              __end_of_isr 042F                 ??___flge 0028  
               ??___fleq 0028                 ??___wmul 003B                ___latbits 0002  
          __pcstackBANK0 0020            __pcstackBANK1 00A0             _isdigit$1182 0037  
            sprintf@flag 00AC              sprintf@prec 00AF         ___lwdiv@dividend 0039  
               ?___fltol 0037                 ?___lldiv 0037                 ?___lwdiv 0037  
               ?___lwmod 00A0              ??_UART_GetC 0037              ??_UART_Init 00A9  
            ??_UART_PutC 0037                __pstrings 0800              PWM_duty@chn 0020  
               ?_isdigit 0070            UART_PutC@data 0037         ___lwdiv@quotient 003D  
               ?_sprintf 00A5               UART_Init@n 00AD        interrupt_function 0004  
         ___wmul@product 003B          _UART_Data_Ready 0DB5                clear_ram0 0DA3  
               _PIE1bits 008C                 _PIR1bits 000C                 _PIR2bits 000D  
              _uart_read 0DDA                _preguntas 0E17               _ADCON0bits 001F  
            __stringbase 080F               _ADCON1bits 009F        ___wmul@multiplier 0037  
               _PWM_init 0F65                 _PWM_duty 0E01             ??_readEEPROM 0070  
             _EECON1bits 018C               ?_uart_read 0070               ?_preguntas 0070  
     __end_of__stringtab 0810            _PWmanual_func 06DD            _PWmanual_init 0DAB  
             sprintf@val 00AD                 ___xxtofl 04F3       __end_of_readEEPROM 0DCC  
        ___lwdiv@divisor 0037          ___lwdiv@counter 003C                 __ptext10 07F2  
               __ptext11 042F                 __ptext20 0DBF                 __ptext12 0768  
               __ptext21 06DD                 __ptext13 0DCC                 __ptext22 04F3  
               __ptext14 0DB5                 __ptext23 05AB                 __ptext15 0DAB  
               __ptext24 0FB0                 __ptext16 0F65                 __ptext25 0E01  
               __ptext17 064F                 __ptext18 0330                 __ptext19 0E2E  
__end_of_UART_Data_Ready 0DBF            ??_writeEEPROM 0071                 main@text 00B7  
         ?_PWmanual_func 002C           ?_PWmanual_init 0037               _INTCONbits 000B  
               isdigit@c 0038                 intlevel1 0000                sprintf@ap 00AB  
              sprintf@sp 00B0         ___lwmod@dividend 00A2         ___lldiv@dividend 003B  
              stringcode 080A               _OSCCONbits 008F              ??_uart_read 0037  
            ??_preguntas 003D      __end_of_writeEEPROM 0E4E                 sprintf@c 00B3  
               sprintf@f 00A5         ___lldiv@quotient 00A0          ___lwmod@divisor 00A0  
        ___lwmod@counter 00A4                 stringdir 080A                 stringtab 0800  
             _UART_Print 0E75         ?_UART_Data_Ready 0070  
