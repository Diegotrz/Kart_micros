

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon May 22 16:22:16 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    41                           	dabs	1,0x7E,2
    42     0000                     
    43                           ; Version 2.40
    44                           ; Generated 17/11/2021 GMT
    45                           ; 
    46                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution. Publication is not required when
    60                           ;        this file is used in an embedded application.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F887 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78     0000                     	;# 
    79     0001                     	;# 
    80     0002                     	;# 
    81     0003                     	;# 
    82     0004                     	;# 
    83     0005                     	;# 
    84     0006                     	;# 
    85     0007                     	;# 
    86     0008                     	;# 
    87     0009                     	;# 
    88     000A                     	;# 
    89     000B                     	;# 
    90     000C                     	;# 
    91     000D                     	;# 
    92     000E                     	;# 
    93     000E                     	;# 
    94     000F                     	;# 
    95     0010                     	;# 
    96     0011                     	;# 
    97     0012                     	;# 
    98     0013                     	;# 
    99     0014                     	;# 
   100     0015                     	;# 
   101     0015                     	;# 
   102     0016                     	;# 
   103     0017                     	;# 
   104     0018                     	;# 
   105     0019                     	;# 
   106     001A                     	;# 
   107     001B                     	;# 
   108     001B                     	;# 
   109     001C                     	;# 
   110     001D                     	;# 
   111     001E                     	;# 
   112     001F                     	;# 
   113     0081                     	;# 
   114     0085                     	;# 
   115     0086                     	;# 
   116     0087                     	;# 
   117     0088                     	;# 
   118     0089                     	;# 
   119     008C                     	;# 
   120     008D                     	;# 
   121     008E                     	;# 
   122     008F                     	;# 
   123     0090                     	;# 
   124     0091                     	;# 
   125     0092                     	;# 
   126     0093                     	;# 
   127     0093                     	;# 
   128     0093                     	;# 
   129     0094                     	;# 
   130     0095                     	;# 
   131     0096                     	;# 
   132     0097                     	;# 
   133     0098                     	;# 
   134     0099                     	;# 
   135     009A                     	;# 
   136     009B                     	;# 
   137     009C                     	;# 
   138     009D                     	;# 
   139     009E                     	;# 
   140     009F                     	;# 
   141     0105                     	;# 
   142     0107                     	;# 
   143     0108                     	;# 
   144     0109                     	;# 
   145     010C                     	;# 
   146     010C                     	;# 
   147     010D                     	;# 
   148     010E                     	;# 
   149     010F                     	;# 
   150     0185                     	;# 
   151     0187                     	;# 
   152     0188                     	;# 
   153     0189                     	;# 
   154     018C                     	;# 
   155     018D                     	;# 
   156     0000                     	;# 
   157     0001                     	;# 
   158     0002                     	;# 
   159     0003                     	;# 
   160     0004                     	;# 
   161     0005                     	;# 
   162     0006                     	;# 
   163     0007                     	;# 
   164     0008                     	;# 
   165     0009                     	;# 
   166     000A                     	;# 
   167     000B                     	;# 
   168     000C                     	;# 
   169     000D                     	;# 
   170     000E                     	;# 
   171     000E                     	;# 
   172     000F                     	;# 
   173     0010                     	;# 
   174     0011                     	;# 
   175     0012                     	;# 
   176     0013                     	;# 
   177     0014                     	;# 
   178     0015                     	;# 
   179     0015                     	;# 
   180     0016                     	;# 
   181     0017                     	;# 
   182     0018                     	;# 
   183     0019                     	;# 
   184     001A                     	;# 
   185     001B                     	;# 
   186     001B                     	;# 
   187     001C                     	;# 
   188     001D                     	;# 
   189     001E                     	;# 
   190     001F                     	;# 
   191     0081                     	;# 
   192     0085                     	;# 
   193     0086                     	;# 
   194     0087                     	;# 
   195     0088                     	;# 
   196     0089                     	;# 
   197     008C                     	;# 
   198     008D                     	;# 
   199     008E                     	;# 
   200     008F                     	;# 
   201     0090                     	;# 
   202     0091                     	;# 
   203     0092                     	;# 
   204     0093                     	;# 
   205     0093                     	;# 
   206     0093                     	;# 
   207     0094                     	;# 
   208     0095                     	;# 
   209     0096                     	;# 
   210     0097                     	;# 
   211     0098                     	;# 
   212     0099                     	;# 
   213     009A                     	;# 
   214     009B                     	;# 
   215     009C                     	;# 
   216     009D                     	;# 
   217     009E                     	;# 
   218     009F                     	;# 
   219     0105                     	;# 
   220     0107                     	;# 
   221     0108                     	;# 
   222     0109                     	;# 
   223     010C                     	;# 
   224     010C                     	;# 
   225     010D                     	;# 
   226     010E                     	;# 
   227     010F                     	;# 
   228     0185                     	;# 
   229     0187                     	;# 
   230     0188                     	;# 
   231     0189                     	;# 
   232     018C                     	;# 
   233     018D                     	;# 
   234     0000                     	;# 
   235     0001                     	;# 
   236     0002                     	;# 
   237     0003                     	;# 
   238     0004                     	;# 
   239     0005                     	;# 
   240     0006                     	;# 
   241     0007                     	;# 
   242     0008                     	;# 
   243     0009                     	;# 
   244     000A                     	;# 
   245     000B                     	;# 
   246     000C                     	;# 
   247     000D                     	;# 
   248     000E                     	;# 
   249     000E                     	;# 
   250     000F                     	;# 
   251     0010                     	;# 
   252     0011                     	;# 
   253     0012                     	;# 
   254     0013                     	;# 
   255     0014                     	;# 
   256     0015                     	;# 
   257     0015                     	;# 
   258     0016                     	;# 
   259     0017                     	;# 
   260     0018                     	;# 
   261     0019                     	;# 
   262     001A                     	;# 
   263     001B                     	;# 
   264     001B                     	;# 
   265     001C                     	;# 
   266     001D                     	;# 
   267     001E                     	;# 
   268     001F                     	;# 
   269     0081                     	;# 
   270     0085                     	;# 
   271     0086                     	;# 
   272     0087                     	;# 
   273     0088                     	;# 
   274     0089                     	;# 
   275     008C                     	;# 
   276     008D                     	;# 
   277     008E                     	;# 
   278     008F                     	;# 
   279     0090                     	;# 
   280     0091                     	;# 
   281     0092                     	;# 
   282     0093                     	;# 
   283     0093                     	;# 
   284     0093                     	;# 
   285     0094                     	;# 
   286     0095                     	;# 
   287     0096                     	;# 
   288     0097                     	;# 
   289     0098                     	;# 
   290     0099                     	;# 
   291     009A                     	;# 
   292     009B                     	;# 
   293     009C                     	;# 
   294     009D                     	;# 
   295     009E                     	;# 
   296     009F                     	;# 
   297     0105                     	;# 
   298     0107                     	;# 
   299     0108                     	;# 
   300     0109                     	;# 
   301     010C                     	;# 
   302     010C                     	;# 
   303     010D                     	;# 
   304     010E                     	;# 
   305     010F                     	;# 
   306     0185                     	;# 
   307     0187                     	;# 
   308     0188                     	;# 
   309     0189                     	;# 
   310     018C                     	;# 
   311     018D                     	;# 
   312     0000                     	;# 
   313     0001                     	;# 
   314     0002                     	;# 
   315     0003                     	;# 
   316     0004                     	;# 
   317     0005                     	;# 
   318     0006                     	;# 
   319     0007                     	;# 
   320     0008                     	;# 
   321     0009                     	;# 
   322     000A                     	;# 
   323     000B                     	;# 
   324     000C                     	;# 
   325     000D                     	;# 
   326     000E                     	;# 
   327     000E                     	;# 
   328     000F                     	;# 
   329     0010                     	;# 
   330     0011                     	;# 
   331     0012                     	;# 
   332     0013                     	;# 
   333     0014                     	;# 
   334     0015                     	;# 
   335     0015                     	;# 
   336     0016                     	;# 
   337     0017                     	;# 
   338     0018                     	;# 
   339     0019                     	;# 
   340     001A                     	;# 
   341     001B                     	;# 
   342     001B                     	;# 
   343     001C                     	;# 
   344     001D                     	;# 
   345     001E                     	;# 
   346     001F                     	;# 
   347     0081                     	;# 
   348     0085                     	;# 
   349     0086                     	;# 
   350     0087                     	;# 
   351     0088                     	;# 
   352     0089                     	;# 
   353     008C                     	;# 
   354     008D                     	;# 
   355     008E                     	;# 
   356     008F                     	;# 
   357     0090                     	;# 
   358     0091                     	;# 
   359     0092                     	;# 
   360     0093                     	;# 
   361     0093                     	;# 
   362     0093                     	;# 
   363     0094                     	;# 
   364     0095                     	;# 
   365     0096                     	;# 
   366     0097                     	;# 
   367     0098                     	;# 
   368     0099                     	;# 
   369     009A                     	;# 
   370     009B                     	;# 
   371     009C                     	;# 
   372     009D                     	;# 
   373     009E                     	;# 
   374     009F                     	;# 
   375     0105                     	;# 
   376     0107                     	;# 
   377     0108                     	;# 
   378     0109                     	;# 
   379     010C                     	;# 
   380     010C                     	;# 
   381     010D                     	;# 
   382     010E                     	;# 
   383     010F                     	;# 
   384     0185                     	;# 
   385     0187                     	;# 
   386     0188                     	;# 
   387     0189                     	;# 
   388     018C                     	;# 
   389     018D                     	;# 
   390     0000                     	;# 
   391     0001                     	;# 
   392     0002                     	;# 
   393     0003                     	;# 
   394     0004                     	;# 
   395     0005                     	;# 
   396     0006                     	;# 
   397     0007                     	;# 
   398     0008                     	;# 
   399     0009                     	;# 
   400     000A                     	;# 
   401     000B                     	;# 
   402     000C                     	;# 
   403     000D                     	;# 
   404     000E                     	;# 
   405     000E                     	;# 
   406     000F                     	;# 
   407     0010                     	;# 
   408     0011                     	;# 
   409     0012                     	;# 
   410     0013                     	;# 
   411     0014                     	;# 
   412     0015                     	;# 
   413     0015                     	;# 
   414     0016                     	;# 
   415     0017                     	;# 
   416     0018                     	;# 
   417     0019                     	;# 
   418     001A                     	;# 
   419     001B                     	;# 
   420     001B                     	;# 
   421     001C                     	;# 
   422     001D                     	;# 
   423     001E                     	;# 
   424     001F                     	;# 
   425     0081                     	;# 
   426     0085                     	;# 
   427     0086                     	;# 
   428     0087                     	;# 
   429     0088                     	;# 
   430     0089                     	;# 
   431     008C                     	;# 
   432     008D                     	;# 
   433     008E                     	;# 
   434     008F                     	;# 
   435     0090                     	;# 
   436     0091                     	;# 
   437     0092                     	;# 
   438     0093                     	;# 
   439     0093                     	;# 
   440     0093                     	;# 
   441     0094                     	;# 
   442     0095                     	;# 
   443     0096                     	;# 
   444     0097                     	;# 
   445     0098                     	;# 
   446     0099                     	;# 
   447     009A                     	;# 
   448     009B                     	;# 
   449     009C                     	;# 
   450     009D                     	;# 
   451     009E                     	;# 
   452     009F                     	;# 
   453     0105                     	;# 
   454     0107                     	;# 
   455     0108                     	;# 
   456     0109                     	;# 
   457     010C                     	;# 
   458     010C                     	;# 
   459     010D                     	;# 
   460     010E                     	;# 
   461     010F                     	;# 
   462     0185                     	;# 
   463     0187                     	;# 
   464     0188                     	;# 
   465     0189                     	;# 
   466     018C                     	;# 
   467     018D                     	;# 
   468                           
   469                           	psect	strings
   470     0800                     __pstrings:
   471     0800                     stringtab:
   472     0800                     __stringtab:
   473                           
   474                           ;	String table - string pointers are 1 byte each
   475     0800  1BFF               	btfsc	btemp+1,7
   476     0801  280A               	ljmp	stringcode
   477     0802  1383               	bcf	3,7
   478     0803  187F               	btfsc	btemp+1,0
   479     0804  1783               	bsf	3,7
   480     0805  0800               	movf	0,w
   481     0806  0A84               	incf	4,f
   482     0807  1903               	skipnz
   483     0808  0AFF               	incf	btemp+1,f
   484     0809  0008               	return
   485     080A                     stringcode:
   486     080A                     stringdir:
   487     080A  3008               	movlw	high stringdir
   488     080B  008A               	movwf	10
   489     080C  0804               	movf	4,w
   490     080D  0A84               	incf	4,f
   491     080E  0782               	addwf	2,f
   492     080F                     __stringbase:
   493     080F  3400               	retlw	0
   494     0810                     __end_of__stringtab:
   495     0810                     _dpowers:
   496     0810  3401               	retlw	1
   497     0811  3400               	retlw	0
   498     0812  340A               	retlw	10
   499     0813  3400               	retlw	0
   500     0814  3464               	retlw	100
   501     0815  3400               	retlw	0
   502     0816  34E8               	retlw	232
   503     0817  3403               	retlw	3
   504     0818  3410               	retlw	16
   505     0819  3427               	retlw	39
   506     081A                     __end_of_dpowers:
   507     081A                     _message:
   508     081A  3432               	retlw	50
   509     081B  342E               	retlw	46
   510     081C  3445               	retlw	69
   511     081D  346E               	retlw	110
   512     081E  3476               	retlw	118
   513     081F  3469               	retlw	105
   514     0820  3461               	retlw	97
   515     0821  3472               	retlw	114
   516     0822  3420               	retlw	32
   517     0823  3441               	retlw	65
   518     0824  3473               	retlw	115
   519     0825  3463               	retlw	99
   520     0826  3469               	retlw	105
   521     0827  3469               	retlw	105
   522     0828  3400               	retlw	0
   523     0829                     __end_of_message:
   524     0019                     _TXREG	set	25
   525     0018                     _RCSTA	set	24
   526     001B                     _CCPR2L	set	27
   527     001D                     _CCP2CONbits	set	29
   528     0012                     _T2CONbits	set	18
   529     0015                     _CCPR1L	set	21
   530     0017                     _CCP1CONbits	set	23
   531     0007                     _PORTC	set	7
   532     0006                     _PORTB	set	6
   533     001A                     _RCREG	set	26
   534     0018                     _RCSTAbits	set	24
   535     0008                     _PORTD	set	8
   536     0009                     _PORTE	set	9
   537     0006                     _PORTBbits	set	6
   538     000B                     _INTCONbits	set	11
   539     001E                     _ADRESH	set	30
   540     001F                     _ADCON0bits	set	31
   541     000C                     _PIR1bits	set	12
   542     000D                     _PIR2bits	set	13
   543     000B                     _INTCON	set	11
   544     00C4                     _CREN	set	196
   545     00C1                     _OERR	set	193
   546     0065                     _RCIF	set	101
   547     0031                     _RB1	set	49
   548     0030                     _RB0	set	48
   549     0098                     _TXSTA	set	152
   550     0099                     _SPBRG	set	153
   551     0092                     _PR2	set	146
   552     008C                     _PIE1bits	set	140
   553     009F                     _ADCON1bits	set	159
   554     008F                     _OSCCONbits	set	143
   555     0095                     _WPUB	set	149
   556     0081                     _OPTION_REGbits	set	129
   557     0088                     _TRISD	set	136
   558     0086                     _TRISB	set	134
   559     0085                     _TRISA	set	133
   560     0087                     _TRISCbits	set	135
   561     008F                     _OSCCON	set	143
   562     04C1                     _TRMT	set	1217
   563     010C                     _EEDATA	set	268
   564     010D                     _EEADR	set	269
   565     0189                     _ANSELH	set	393
   566     0188                     _ANSEL	set	392
   567     018D                     _EECON2	set	397
   568     018C                     _EECON1bits	set	396
   569     0829                     STR_1:
   570     0829  3431               	retlw	49	;'1'
   571     082A  342E               	retlw	46	;'.'
   572     082B  344C               	retlw	76	;'L'
   573     082C  3465               	retlw	101	;'e'
   574     082D  3465               	retlw	101	;'e'
   575     082E  3472               	retlw	114	;'r'
   576     082F  3420               	retlw	32	;' '
   577     0830  3470               	retlw	112	;'p'
   578     0831  346F               	retlw	111	;'o'
   579     0832  3474               	retlw	116	;'t'
   580     0833  3465               	retlw	101	;'e'
   581     0834  346E               	retlw	110	;'n'
   582     0835  3463               	retlw	99	;'c'
   583     0836  3469               	retlw	105	;'i'
   584     0837  346F               	retlw	111	;'o'
   585     0838  346D               	retlw	109	;'m'
   586     0839  3465               	retlw	101	;'e'
   587     083A  3474               	retlw	116	;'t'
   588     083B  3472               	retlw	114	;'r'
   589     083C  346F               	retlw	111	;'o'
   590     083D  340D               	retlw	13
   591     083E  340A               	retlw	10
   592     083F  3400               	retlw	0
   593     0840                     STR_4:
   594     0840  3425               	retlw	37	;'%'
   595     0841  3430               	retlw	48	;'0'
   596     0842  3433               	retlw	51	;'3'
   597     0843  3475               	retlw	117	;'u'
   598     0844  340D               	retlw	13
   599     0845  340A               	retlw	10
   600     0846  3400               	retlw	0
   601     083D                     
   602                           	psect	cinit
   603     0011                     start_initialization:	
   604                           ; #config settings
   605                           
   606     0011                     __initialization:
   607                           
   608                           ; Clear objects allocated to BANK0
   609     0011  1383               	bcf	3,7	;select IRP bank0
   610     0012  3040               	movlw	low __pbssBANK0
   611     0013  0084               	movwf	4
   612     0014  3059               	movlw	low (__pbssBANK0+25)
   613     0015  120A  158A  25D2  120A  118A  	fcall	clear_ram0
   614                           
   615                           ; Clear objects allocated to BANK1
   616     001A  1683               	bsf	3,5	;RP0=1, select bank1
   617     001B  1303               	bcf	3,6	;RP1=0, select bank1
   618     001C  01C1               	clrf	__pbssBANK1& (0+127)
   619     001D  01C2               	clrf	(__pbssBANK1+1)& (0+127)
   620     001E                     end_of_initialization:	
   621                           ;End of C runtime variable initialization code
   622                           
   623     001E                     __end_of__initialization:
   624     001E  0183               	clrf	3
   625     001F  120A  118A  29C6   	ljmp	_main	;jump to C main() function
   626                           
   627                           	psect	bssBANK0
   628     0040                     __pbssBANK0:
   629     0040                     _val:
   630     0040                     	ds	4
   631     0044                     _valad:
   632     0044                     	ds	4
   633     0048                     _periodo_ms:
   634     0048                     	ds	4
   635     004C                     _valpot:
   636     004C                     	ds	2
   637     004E                     _valadr:
   638     004E                     	ds	2
   639     0050                     _numport:
   640     0050                     	ds	2
   641     0052                     _chn:
   642     0052                     	ds	2
   643     0054                     _chn2:
   644     0054                     	ds	2
   645     0056                     _chn1:
   646     0056                     	ds	2
   647     0058                     _portsl:
   648     0058                     	ds	1
   649                           
   650                           	psect	bssBANK1
   651     00C1                     __pbssBANK1:
   652     00C1                     _i:
   653     00C1                     	ds	2
   654                           
   655                           	psect	clrtext
   656     0DD2                     clear_ram0:	
   657                           ;	Called with FSR containing the base address, and
   658                           ;	W with the last address+1
   659                           
   660     0DD2  0064               	clrwdt	;clear the watchdog before getting into this loop
   661     0DD3                     clrloop0:
   662     0DD3  0180               	clrf	0	;clear RAM location pointed to by FSR
   663     0DD4  0A84               	incf	4,f	;increment pointer
   664     0DD5  0604               	xorwf	4,w	;XOR with final address
   665     0DD6  1903               	btfsc	3,2	;have we reached the end yet?
   666     0DD7  3400               	retlw	0	;all done for this memory range, return
   667     0DD8  0604               	xorwf	4,w	;XOR again to restore value
   668     0DD9  2DD3               	goto	clrloop0	;do the next byte
   669                           
   670                           	psect	cstackBANK1
   671     00A0                     __pcstackBANK1:
   672     00A0                     ?___lwmod:
   673     00A0                     ___fltol@sign1:	
   674                           ; 2 bytes @ 0x0
   675                           
   676     00A0                     ___lwmod@divisor:	
   677                           ; 1 bytes @ 0x0
   678                           
   679     00A0                     ___lldiv@quotient:	
   680                           ; 2 bytes @ 0x0
   681                           
   682                           
   683                           ; 4 bytes @ 0x0
   684     00A0                     	ds	1
   685     00A1                     ___fltol@exp1:
   686                           
   687                           ; 1 bytes @ 0x1
   688     00A1                     	ds	1
   689     00A2                     ?_PWM_init:
   690     00A2                     PWM_init@chn1:	
   691                           ; 1 bytes @ 0x2
   692                           
   693     00A2                     ___lwmod@dividend:	
   694                           ; 2 bytes @ 0x2
   695                           
   696                           
   697                           ; 2 bytes @ 0x2
   698     00A2                     	ds	2
   699     00A4                     ___lldiv@counter:
   700     00A4                     ___lwmod@counter:	
   701                           ; 1 bytes @ 0x4
   702                           
   703     00A4                     PWM_init@chn2:	
   704                           ; 1 bytes @ 0x4
   705                           
   706                           
   707                           ; 2 bytes @ 0x4
   708     00A4                     	ds	1
   709     00A5                     ?_UART_Init:
   710     00A5                     ?_sprintf:	
   711                           ; 1 bytes @ 0x5
   712                           
   713     00A5                     sprintf@f:	
   714                           ; 2 bytes @ 0x5
   715                           
   716     00A5                     UART_Init@baud_rate:	
   717                           ; 1 bytes @ 0x5
   718                           
   719                           
   720                           ; 4 bytes @ 0x5
   721     00A5                     	ds	1
   722     00A6                     PWM_init@periodo_ms:
   723                           
   724                           ; 4 bytes @ 0x6
   725     00A6                     	ds	2
   726     00A8                     ??_sprintf:
   727                           
   728                           ; 1 bytes @ 0x8
   729     00A8                     	ds	1
   730     00A9                     ??_UART_Init:
   731                           
   732                           ; 1 bytes @ 0x9
   733     00A9                     	ds	2
   734     00AB                     sprintf@ap:
   735                           
   736                           ; 1 bytes @ 0xB
   737     00AB                     	ds	1
   738     00AC                     sprintf@flag:
   739                           
   740                           ; 1 bytes @ 0xC
   741     00AC                     	ds	1
   742     00AD                     UART_Init@n:
   743     00AD                     sprintf@val:	
   744                           ; 2 bytes @ 0xD
   745                           
   746                           
   747                           ; 2 bytes @ 0xD
   748     00AD                     	ds	2
   749     00AF                     sprintf@prec:
   750                           
   751                           ; 1 bytes @ 0xF
   752     00AF                     	ds	1
   753     00B0                     sprintf@sp:
   754                           
   755                           ; 1 bytes @ 0x10
   756     00B0                     	ds	1
   757     00B1                     sprintf@width:
   758                           
   759                           ; 2 bytes @ 0x11
   760     00B1                     	ds	2
   761     00B3                     sprintf@c:
   762                           
   763                           ; 1 bytes @ 0x13
   764     00B3                     	ds	1
   765     00B4                     ??_main:
   766                           
   767                           ; 1 bytes @ 0x14
   768     00B4                     	ds	3
   769     00B7                     main@text:
   770                           
   771                           ; 9 bytes @ 0x17
   772     00B7                     	ds	9
   773     00C0                     main@c:
   774                           
   775                           ; 1 bytes @ 0x20
   776     00C0                     	ds	1
   777                           
   778                           	psect	cstackCOMMON
   779     0070                     __pcstackCOMMON:
   780     0070                     ?_UART_Data_Ready:
   781     0070                     ?_isdigit:	
   782                           ; 1 bit 
   783                           
   784     0070                     ?_setup:	
   785                           ; 1 bit 
   786                           
   787     0070                     ?_preguntas:	
   788                           ; 1 bytes @ 0x0
   789                           
   790     0070                     ?_UART_GetC:	
   791                           ; 1 bytes @ 0x0
   792                           
   793     0070                     ?_UART_PutC:	
   794                           ; 1 bytes @ 0x0
   795                           
   796     0070                     ?_readEEPROM:	
   797                           ; 1 bytes @ 0x0
   798                           
   799     0070                     ??_readEEPROM:	
   800                           ; 1 bytes @ 0x0
   801                           
   802     0070                     ?_writeEEPROM:	
   803                           ; 1 bytes @ 0x0
   804                           
   805     0070                     ?_isr:	
   806                           ; 1 bytes @ 0x0
   807                           
   808     0070                     ?_uart_read:	
   809                           ; 1 bytes @ 0x0
   810                           
   811     0070                     ?_main:	
   812                           ; 1 bytes @ 0x0
   813                           
   814     0070                     ?___xxtofl:	
   815                           ; 1 bytes @ 0x0
   816                           
   817     0070                     readEEPROM@address:	
   818                           ; 4 bytes @ 0x0
   819                           
   820     0070                     writeEEPROM@dataEE:	
   821                           ; 1 bytes @ 0x0
   822                           
   823     0070                     PWmanual_init@portsl:	
   824                           ; 1 bytes @ 0x0
   825                           
   826     0070                     ___xxtofl@val:	
   827                           ; 1 bytes @ 0x0
   828                           
   829                           
   830                           ; 4 bytes @ 0x0
   831     0070                     	ds	1
   832     0071                     ??_writeEEPROM:
   833     0071                     writeEEPROM@address:	
   834                           ; 1 bytes @ 0x1
   835                           
   836                           
   837                           ; 1 bytes @ 0x1
   838     0071                     	ds	1
   839     0072                     writeEEPROM@INTCON_SAVE:
   840                           
   841                           ; 1 bytes @ 0x2
   842     0072                     	ds	2
   843     0074                     ??___xxtofl:
   844                           
   845                           ; 1 bytes @ 0x4
   846     0074                     	ds	4
   847     0078                     ___xxtofl@sign:
   848                           
   849                           ; 1 bytes @ 0x8
   850     0078                     	ds	1
   851     0079                     ___xxtofl@exp:
   852                           
   853                           ; 1 bytes @ 0x9
   854     0079                     	ds	1
   855     007A                     ___xxtofl@arg:
   856                           
   857                           ; 4 bytes @ 0xA
   858     007A                     	ds	4
   859                           
   860                           	psect	cstackBANK0
   861     0020                     __pcstackBANK0:
   862     0020                     ?___fleq:
   863     0020                     ?___flge:	
   864                           ; 1 bit 
   865                           
   866     0020                     ?_PWM_duty:	
   867                           ; 1 bit 
   868                           
   869     0020                     PWM_duty@chn:	
   870                           ; 1 bytes @ 0x0
   871                           
   872     0020                     ___fleq@ff1:	
   873                           ; 2 bytes @ 0x0
   874                           
   875     0020                     ___flge@ff1:	
   876                           ; 4 bytes @ 0x0
   877                           
   878                           
   879                           ; 4 bytes @ 0x0
   880     0020                     	ds	2
   881     0022                     PWM_duty@duty:
   882                           
   883                           ; 4 bytes @ 0x2
   884     0022                     	ds	2
   885     0024                     ___fleq@ff2:
   886     0024                     ___flge@ff2:	
   887                           ; 4 bytes @ 0x4
   888                           
   889                           
   890                           ; 4 bytes @ 0x4
   891     0024                     	ds	2
   892     0026                     ??_PWM_duty:
   893                           
   894                           ; 1 bytes @ 0x6
   895     0026                     	ds	2
   896     0028                     ??___fleq:
   897     0028                     ??___flge:	
   898                           ; 1 bytes @ 0x8
   899                           
   900                           
   901                           ; 1 bytes @ 0x8
   902     0028                     	ds	4
   903     002C                     ?_PWmanual_func:
   904     002C                     PWmanual_func@valad:	
   905                           ; 1 bytes @ 0xC
   906                           
   907                           
   908                           ; 4 bytes @ 0xC
   909     002C                     	ds	4
   910     0030                     ??_PWmanual_func:
   911                           
   912                           ; 1 bytes @ 0x10
   913     0030                     	ds	1
   914     0031                     ??_isr:
   915                           
   916                           ; 1 bytes @ 0x11
   917     0031                     	ds	6
   918     0037                     ??_setup:
   919     0037                     ?_PWmanual_init:	
   920                           ; 1 bytes @ 0x17
   921                           
   922     0037                     ??_UART_Data_Ready:	
   923                           ; 1 bytes @ 0x17
   924                           
   925     0037                     ??_UART_GetC:	
   926                           ; 1 bytes @ 0x17
   927                           
   928     0037                     ??_UART_PutC:	
   929                           ; 1 bytes @ 0x17
   930                           
   931     0037                     ??_isdigit:	
   932                           ; 1 bytes @ 0x17
   933                           
   934     0037                     ??_uart_read:	
   935                           ; 1 bytes @ 0x17
   936                           
   937     0037                     ?___wmul:	
   938                           ; 1 bytes @ 0x17
   939                           
   940     0037                     ?___lwdiv:	
   941                           ; 2 bytes @ 0x17
   942                           
   943     0037                     ?___lldiv:	
   944                           ; 2 bytes @ 0x17
   945                           
   946     0037                     ?___fltol:	
   947                           ; 4 bytes @ 0x17
   948                           
   949     0037                     UART_PutC@data:	
   950                           ; 4 bytes @ 0x17
   951                           
   952     0037                     _isdigit$1183:	
   953                           ; 1 bytes @ 0x17
   954                           
   955     0037                     PWmanual_init@numport:	
   956                           ; 1 bytes @ 0x17
   957                           
   958     0037                     ___wmul@multiplier:	
   959                           ; 2 bytes @ 0x17
   960                           
   961     0037                     ___lwdiv@divisor:	
   962                           ; 2 bytes @ 0x17
   963                           
   964     0037                     ___lldiv@divisor:	
   965                           ; 2 bytes @ 0x17
   966                           
   967     0037                     ___fltol@f1:	
   968                           ; 4 bytes @ 0x17
   969                           
   970                           
   971                           ; 4 bytes @ 0x17
   972     0037                     	ds	1
   973     0038                     ?_UART_Print:
   974     0038                     isdigit@c:	
   975                           ; 1 bytes @ 0x18
   976                           
   977     0038                     UART_Print@data:	
   978                           ; 1 bytes @ 0x18
   979                           
   980                           
   981                           ; 2 bytes @ 0x18
   982     0038                     	ds	1
   983     0039                     ??_PWmanual_init:
   984     0039                     ___wmul@multiplicand:	
   985                           ; 1 bytes @ 0x19
   986                           
   987     0039                     ___lwdiv@dividend:	
   988                           ; 2 bytes @ 0x19
   989                           
   990                           
   991                           ; 2 bytes @ 0x19
   992     0039                     	ds	1
   993     003A                     ??_UART_Print:
   994                           
   995                           ; 1 bytes @ 0x1A
   996     003A                     	ds	1
   997     003B                     ??___wmul:
   998     003B                     ??___fltol:	
   999                           ; 1 bytes @ 0x1B
  1000                           
  1001     003B                     ??___lwdiv:	
  1002                           ; 1 bytes @ 0x1B
  1003                           
  1004     003B                     ___wmul@product:	
  1005                           ; 1 bytes @ 0x1B
  1006                           
  1007     003B                     ___lldiv@dividend:	
  1008                           ; 2 bytes @ 0x1B
  1009                           
  1010                           
  1011                           ; 4 bytes @ 0x1B
  1012     003B                     	ds	1
  1013     003C                     UART_Print@i:
  1014     003C                     ___lwdiv@counter:	
  1015                           ; 1 bytes @ 0x1C
  1016                           
  1017                           
  1018                           ; 1 bytes @ 0x1C
  1019     003C                     	ds	1
  1020     003D                     ??_preguntas:
  1021     003D                     ___lwdiv@quotient:	
  1022                           ; 1 bytes @ 0x1D
  1023                           
  1024                           
  1025                           ; 2 bytes @ 0x1D
  1026     003D                     	ds	2
  1027     003F                     ??_PWM_init:
  1028     003F                     ??___lldiv:	
  1029                           ; 1 bytes @ 0x1F
  1030                           
  1031     003F                     ??___lwmod:	
  1032                           ; 1 bytes @ 0x1F
  1033                           
  1034                           
  1035                           ; 1 bytes @ 0x1F
  1036     003F                     	ds	1
  1037                           
  1038                           	psect	maintext
  1039     01C6                     __pmaintext:	
  1040 ;;
  1041 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1042 ;;
  1043 ;; *************** function _main *****************
  1044 ;; Defined at:
  1045 ;;		line 151 in file "Kart_main.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;		None
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;  c               1   32[BANK1 ] unsigned char 
  1050 ;;  text            9   23[BANK1 ] unsigned char [9]
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  1    wreg      void 
  1053 ;; Registers used:
  1054 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1055 ;; Tracked objects:
  1056 ;;		On entry : B00/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1060 ;;      Params:         0       0       0       0       0
  1061 ;;      Locals:         0       0      10       0       0
  1062 ;;      Temps:          0       0       3       0       0
  1063 ;;      Totals:         0       0      13       0       0
  1064 ;;Total ram usage:       13 bytes
  1065 ;; Hardware stack levels required when called: 6
  1066 ;; This function calls:
  1067 ;;		_PWM_init
  1068 ;;		_PWmanual_init
  1069 ;;		_UART_Data_Ready
  1070 ;;		_UART_GetC
  1071 ;;		_UART_Init
  1072 ;;		_UART_Print
  1073 ;;		_UART_PutC
  1074 ;;		_preguntas
  1075 ;;		_setup
  1076 ;;		_sprintf
  1077 ;;		_uart_read
  1078 ;; This function is called by:
  1079 ;;		Startup code after reset
  1080 ;; This function uses a non-reentrant model
  1081 ;;
  1082                           
  1083     01C6                     _main:	
  1084                           ;psect for function _main
  1085                           
  1086     01C6                     l2557:	
  1087                           ;incstack = 0
  1088                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1089                           
  1090                           
  1091                           ;Kart_main.c: 153:     setup();
  1092     01C6  120A  158A  26E7  120A  118A  	fcall	_setup
  1093     01CB                     l2559:
  1094                           
  1095                           ;Kart_main.c: 154:     OSCCON = 0x70;
  1096     01CB  3070               	movlw	112
  1097     01CC  1683               	bsf	3,5	;RP0=1, select bank1
  1098     01CD  1303               	bcf	3,6	;RP1=0, select bank1
  1099     01CE  008F               	movwf	15	;volatile
  1100     01CF                     l2561:
  1101                           
  1102                           ;Kart_main.c: 155:      PWM_init (0,0,255);
  1103     01CF  3000               	movlw	0
  1104     01D0  00A2               	movwf	PWM_init@chn1^(0+128)
  1105     01D1  00A3               	movwf	(PWM_init@chn1+1)^(0+128)
  1106     01D2  3000               	movlw	0
  1107     01D3  00A4               	movwf	PWM_init@chn2^(0+128)
  1108     01D4  00A5               	movwf	(PWM_init@chn2+1)^(0+128)
  1109     01D5  3043               	movlw	67
  1110     01D6  00A9               	movwf	(PWM_init@periodo_ms+3)^(0+128)
  1111     01D7  307F               	movlw	127
  1112     01D8  00A8               	movwf	(PWM_init@periodo_ms+2)^(0+128)
  1113     01D9  3000               	movlw	0
  1114     01DA  00A7               	movwf	(PWM_init@periodo_ms+1)^(0+128)
  1115     01DB  3000               	movlw	0
  1116     01DC  00A6               	movwf	PWM_init@periodo_ms^(0+128)
  1117     01DD  120A  158A  2765  120A  118A  	fcall	_PWM_init
  1118     01E2                     l2563:
  1119                           
  1120                           ;Kart_main.c: 156:     ADCON0bits.GO =1;
  1121     01E2  1283               	bcf	3,5	;RP0=0, select bank0
  1122     01E3  1303               	bcf	3,6	;RP1=0, select bank0
  1123     01E4  149F               	bsf	31,1	;volatile
  1124     01E5                     l2565:
  1125                           
  1126                           ;Kart_main.c: 157:     UART_Init(9600);
  1127     01E5  3000               	movlw	0
  1128     01E6  1683               	bsf	3,5	;RP0=1, select bank1
  1129     01E7  1303               	bcf	3,6	;RP1=0, select bank1
  1130     01E8  00A8               	movwf	(UART_Init@baud_rate+3)^(0+128)
  1131     01E9  3000               	movlw	0
  1132     01EA  00A7               	movwf	(UART_Init@baud_rate+2)^(0+128)
  1133     01EB  3025               	movlw	37
  1134     01EC  00A6               	movwf	(UART_Init@baud_rate+1)^(0+128)
  1135     01ED  3080               	movlw	128
  1136     01EE  00A5               	movwf	UART_Init@baud_rate^(0+128)
  1137     01EF  120A  118A  23FB  120A  118A  	fcall	_UART_Init
  1138     01F4                     l2567:
  1139                           
  1140                           ;Kart_main.c: 158:     PWmanual_init (TRISCbits.TRISC4,0);
  1141     01F4  3000               	movlw	0
  1142     01F5  1283               	bcf	3,5	;RP0=0, select bank0
  1143     01F6  1303               	bcf	3,6	;RP1=0, select bank0
  1144     01F7  00B7               	movwf	PWmanual_init@numport
  1145     01F8  00B8               	movwf	PWmanual_init@numport+1
  1146     01F9  1683               	bsf	3,5	;RP0=1, select bank1
  1147     01FA  1303               	bcf	3,6	;RP1=0, select bank1
  1148     01FB  0E07               	swapf	7,w	;volatile
  1149     01FC  3901               	andlw	1
  1150     01FD  120A  158A  25DA  120A  118A  	fcall	_PWmanual_init
  1151     0202                     l2569:
  1152                           
  1153                           ;Kart_main.c: 159:   _delay((unsigned long)((2000)*(4000000/4000.0)));
  1154     0202  300B               	movlw	11
  1155     0203  1683               	bsf	3,5	;RP0=1, select bank1
  1156     0204  1303               	bcf	3,6	;RP1=0, select bank1
  1157     0205  00B6               	movwf	(??_main^(0+128)+2)
  1158     0206  3026               	movlw	38
  1159     0207  00B5               	movwf	(??_main^(0+128)+1)
  1160     0208  305D               	movlw	93
  1161     0209  00B4               	movwf	??_main^(0+128)
  1162     020A                     u2657:
  1163     020A  0BB4               	decfsz	??_main^(0+128),f
  1164     020B  2A0A               	goto	u2657
  1165     020C  0BB5               	decfsz	(??_main^(0+128)+1),f
  1166     020D  2A0A               	goto	u2657
  1167     020E  0BB6               	decfsz	(??_main^(0+128)+2),f
  1168     020F  2A0A               	goto	u2657
  1169     0210                     l2571:
  1170                           
  1171                           ;Kart_main.c: 161:   UART_Print("1.Leer potenciometro\r\n");
  1172     0210  301A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1173     0211  1283               	bcf	3,5	;RP0=0, select bank0
  1174     0212  1303               	bcf	3,6	;RP1=0, select bank0
  1175     0213  00B8               	movwf	UART_Print@data
  1176     0214  3080               	movlw	128
  1177     0215  00B9               	movwf	UART_Print@data+1
  1178     0216  120A  158A  26B2  120A  118A  	fcall	_UART_Print
  1179     021B                     l2573:
  1180                           
  1181                           ;Kart_main.c: 163:   _delay((unsigned long)((1000)*(4000000/4000.0)));
  1182     021B  3006               	movlw	6
  1183     021C  1683               	bsf	3,5	;RP0=1, select bank1
  1184     021D  1303               	bcf	3,6	;RP1=0, select bank1
  1185     021E  00B6               	movwf	(??_main^(0+128)+2)
  1186     021F  3013               	movlw	19
  1187     0220  00B5               	movwf	(??_main^(0+128)+1)
  1188     0221  30AD               	movlw	173
  1189     0222  00B4               	movwf	??_main^(0+128)
  1190     0223                     u2667:
  1191     0223  0BB4               	decfsz	??_main^(0+128),f
  1192     0224  2A23               	goto	u2667
  1193     0225  0BB5               	decfsz	(??_main^(0+128)+1),f
  1194     0226  2A23               	goto	u2667
  1195     0227  0BB6               	decfsz	(??_main^(0+128)+2),f
  1196     0228  2A23               	goto	u2667
  1197     0229                     l2575:
  1198                           
  1199                           ;Kart_main.c: 165:   UART_Print(message);
  1200     0229  300B               	movlw	(low ((_message-__stringbase)| (0+32768)))& (0+255)
  1201     022A  1283               	bcf	3,5	;RP0=0, select bank0
  1202     022B  1303               	bcf	3,6	;RP1=0, select bank0
  1203     022C  00B8               	movwf	UART_Print@data
  1204     022D  3080               	movlw	128
  1205     022E  00B9               	movwf	UART_Print@data+1
  1206     022F  120A  158A  26B2  120A  118A  	fcall	_UART_Print
  1207     0234                     l2577:
  1208                           
  1209                           ;Kart_main.c: 167:   _delay((unsigned long)((1000)*(4000000/4000.0)));
  1210     0234  3006               	movlw	6
  1211     0235  1683               	bsf	3,5	;RP0=1, select bank1
  1212     0236  1303               	bcf	3,6	;RP1=0, select bank1
  1213     0237  00B6               	movwf	(??_main^(0+128)+2)
  1214     0238  3013               	movlw	19
  1215     0239  00B5               	movwf	(??_main^(0+128)+1)
  1216     023A  30AD               	movlw	173
  1217     023B  00B4               	movwf	??_main^(0+128)
  1218     023C                     u2677:
  1219     023C  0BB4               	decfsz	??_main^(0+128),f
  1220     023D  2A3C               	goto	u2677
  1221     023E  0BB5               	decfsz	(??_main^(0+128)+1),f
  1222     023F  2A3C               	goto	u2677
  1223     0240  0BB6               	decfsz	(??_main^(0+128)+2),f
  1224     0241  2A3C               	goto	u2677
  1225     0242                     l2579:
  1226                           
  1227                           ;Kart_main.c: 169:   UART_Print("\r\n");
  1228     0242  302E               	movlw	(low (((STR_1+20)-__stringbase)| (0+32768)))& (0+255)
  1229     0243  1283               	bcf	3,5	;RP0=0, select bank0
  1230     0244  1303               	bcf	3,6	;RP1=0, select bank0
  1231     0245  00B8               	movwf	UART_Print@data
  1232     0246  3080               	movlw	128
  1233     0247  00B9               	movwf	UART_Print@data+1
  1234     0248  120A  158A  26B2  120A  118A  	fcall	_UART_Print
  1235     024D                     l2581:
  1236                           
  1237                           ;Kart_main.c: 170:  ADCON0bits.GO =1;
  1238     024D  1283               	bcf	3,5	;RP0=0, select bank0
  1239     024E  1303               	bcf	3,6	;RP1=0, select bank0
  1240     024F  149F               	bsf	31,1	;volatile
  1241     0250                     l2583:
  1242                           
  1243                           ;Kart_main.c: 171:  char text[9];;Kart_main.c: 172:     i=0;
  1244     0250  1683               	bsf	3,5	;RP0=1, select bank1
  1245     0251  1303               	bcf	3,6	;RP1=0, select bank1
  1246     0252  01C1               	clrf	_i^(0+128)
  1247     0253  01C2               	clrf	(_i+1)^(0+128)
  1248     0254                     l2585:
  1249                           
  1250                           ;Kart_main.c: 175:     {;Kart_main.c: 177:        if (ADCON0bits.GO ==0){
  1251     0254  1283               	bcf	3,5	;RP0=0, select bank0
  1252     0255  1303               	bcf	3,6	;RP1=0, select bank0
  1253     0256  189F               	btfsc	31,1	;volatile
  1254     0257  2A59               	goto	u2621
  1255     0258  2A5A               	goto	u2620
  1256     0259                     u2621:
  1257     0259  2AF3               	goto	l2617
  1258     025A                     u2620:
  1259     025A                     l2587:
  1260                           
  1261                           ;Kart_main.c: 178:            for (i=0;i<=2;i++){
  1262     025A  1683               	bsf	3,5	;RP0=1, select bank1
  1263     025B  1303               	bcf	3,6	;RP1=0, select bank1
  1264     025C  01C1               	clrf	_i^(0+128)
  1265     025D  01C2               	clrf	(_i+1)^(0+128)
  1266     025E                     l2589:
  1267     025E  0842               	movf	(_i+1)^(0+128),w
  1268     025F  3A80               	xorlw	128
  1269     0260  00FF               	movwf	btemp+1
  1270     0261  3080               	movlw	128
  1271     0262  027F               	subwf	btemp+1,w
  1272     0263  1D03               	skipz
  1273     0264  2A67               	goto	u2635
  1274     0265  3003               	movlw	3
  1275     0266  0241               	subwf	_i^(0+128),w
  1276     0267                     u2635:
  1277     0267  1C03               	skipc
  1278     0268  2A6A               	goto	u2631
  1279     0269  2A6B               	goto	u2630
  1280     026A                     u2631:
  1281     026A  2A6C               	goto	l2593
  1282     026B                     u2630:
  1283     026B  2AF3               	goto	l2617
  1284     026C                     l2593:
  1285                           
  1286                           ;Kart_main.c: 179:            ADCON0bits.CHS = i;
  1287     026C  1683               	bsf	3,5	;RP0=1, select bank1
  1288     026D  1303               	bcf	3,6	;RP1=0, select bank1
  1289     026E  0841               	movf	_i^(0+128),w
  1290     026F  00B4               	movwf	??_main^(0+128)
  1291     0270  0DB4               	rlf	??_main^(0+128),f
  1292     0271  0DB4               	rlf	??_main^(0+128),f
  1293     0272  1283               	bcf	3,5	;RP0=0, select bank0
  1294     0273  1303               	bcf	3,6	;RP1=0, select bank0
  1295     0274  081F               	movf	31,w	;volatile
  1296     0275  1683               	bsf	3,5	;RP0=1, select bank1
  1297     0276  1303               	bcf	3,6	;RP1=0, select bank1
  1298     0277  0634               	xorwf	??_main^(0+128),w
  1299     0278  39C3               	andlw	-61
  1300     0279  0634               	xorwf	??_main^(0+128),w
  1301     027A  1283               	bcf	3,5	;RP0=0, select bank0
  1302     027B  1303               	bcf	3,6	;RP1=0, select bank0
  1303     027C  009F               	movwf	31	;volatile
  1304     027D                     l2595:
  1305                           
  1306                           ;Kart_main.c: 180:            ADCON0bits.GO =1;
  1307     027D  149F               	bsf	31,1	;volatile
  1308     027E                     l2597:
  1309                           
  1310                           ;Kart_main.c: 182:            }
  1311     027E  3001               	movlw	1
  1312     027F  1683               	bsf	3,5	;RP0=1, select bank1
  1313     0280  1303               	bcf	3,6	;RP1=0, select bank1
  1314     0281  07C1               	addwf	_i^(0+128),f
  1315     0282  1803               	skipnc
  1316     0283  0AC2               	incf	(_i+1)^(0+128),f
  1317     0284  3000               	movlw	0
  1318     0285  07C2               	addwf	(_i+1)^(0+128),f
  1319     0286  2A5E               	goto	l2589
  1320     0287                     l2601:
  1321                           
  1322                           ;Kart_main.c: 192:                UART_Print ("\r\n");
  1323     0287  302E               	movlw	(low (((STR_1+20)-__stringbase)| (0+32768)))& (0+255)
  1324     0288  1283               	bcf	3,5	;RP0=0, select bank0
  1325     0289  1303               	bcf	3,6	;RP1=0, select bank0
  1326     028A  00B8               	movwf	UART_Print@data
  1327     028B  3080               	movlw	128
  1328     028C  00B9               	movwf	UART_Print@data+1
  1329     028D  120A  158A  26B2  120A  118A  	fcall	_UART_Print
  1330                           
  1331                           ;Kart_main.c: 193:             sprintf(text, "%03u\r\n", 10);
  1332     0292  3031               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1333     0293  1683               	bsf	3,5	;RP0=1, select bank1
  1334     0294  1303               	bcf	3,6	;RP1=0, select bank1
  1335     0295  00A5               	movwf	sprintf@f^(0+128)
  1336     0296  300A               	movlw	10
  1337     0297  00A6               	movwf	(?_sprintf^(0+128)+1)
  1338     0298  3000               	movlw	0
  1339     0299  00A7               	movwf	(?_sprintf^(0+128)+2)
  1340     029A  30B7               	movlw	(low (main@text| 0))& (0+255)
  1341     029B  120A  118A  2022  120A  118A  	fcall	_sprintf
  1342                           
  1343                           ;Kart_main.c: 194:             UART_Print(text);
  1344     02A0  30B7               	movlw	(low (main@text| 0))& (0+255)
  1345     02A1  1283               	bcf	3,5	;RP0=0, select bank0
  1346     02A2  1303               	bcf	3,6	;RP1=0, select bank0
  1347     02A3  00B8               	movwf	UART_Print@data
  1348     02A4  3000               	movlw	0
  1349     02A5  00B9               	movwf	UART_Print@data+1
  1350     02A6  120A  158A  26B2  120A  118A  	fcall	_UART_Print
  1351                           
  1352                           ;Kart_main.c: 197:               preguntas();
  1353     02AB  120A  158A  2654  120A  118A  	fcall	_preguntas
  1354     02B0                     l2603:
  1355                           
  1356                           ;Kart_main.c: 198:              RCREG ='0';
  1357     02B0  3030               	movlw	48
  1358     02B1  1283               	bcf	3,5	;RP0=0, select bank0
  1359     02B2  1303               	bcf	3,6	;RP1=0, select bank0
  1360     02B3  009A               	movwf	26	;volatile
  1361                           
  1362                           ;Kart_main.c: 200:              break;
  1363     02B4  2B09               	goto	l2619
  1364     02B5                     l2605:
  1365                           
  1366                           ;Kart_main.c: 202:                _delay((unsigned long)((9200000)*(4000000/4000000.0)))
      +                          ;
  1367     02B5  302F               	movlw	47
  1368     02B6  1683               	bsf	3,5	;RP0=1, select bank1
  1369     02B7  1303               	bcf	3,6	;RP1=0, select bank1
  1370     02B8  00B6               	movwf	(??_main^(0+128)+2)
  1371     02B9  30AC               	movlw	172
  1372     02BA  00B5               	movwf	(??_main^(0+128)+1)
  1373     02BB  30EB               	movlw	235
  1374     02BC  00B4               	movwf	??_main^(0+128)
  1375     02BD                     u2687:
  1376     02BD  0BB4               	decfsz	??_main^(0+128),f
  1377     02BE  2ABD               	goto	u2687
  1378     02BF  0BB5               	decfsz	(??_main^(0+128)+1),f
  1379     02C0  2ABD               	goto	u2687
  1380     02C1  0BB6               	decfsz	(??_main^(0+128)+2),f
  1381     02C2  2ABD               	goto	u2687
  1382     02C3  2AC4               	nop2
  1383     02C4                     l2607:
  1384                           
  1385                           ;Kart_main.c: 203:                UART_Print ("\r\n");
  1386     02C4  302E               	movlw	(low (((STR_1+20)-__stringbase)| (0+32768)))& (0+255)
  1387     02C5  1283               	bcf	3,5	;RP0=0, select bank0
  1388     02C6  1303               	bcf	3,6	;RP1=0, select bank0
  1389     02C7  00B8               	movwf	UART_Print@data
  1390     02C8  3080               	movlw	128
  1391     02C9  00B9               	movwf	UART_Print@data+1
  1392     02CA  120A  158A  26B2  120A  118A  	fcall	_UART_Print
  1393     02CF                     l2609:
  1394                           
  1395                           ;Kart_main.c: 204:                UART_Print(uart_read());
  1396     02CF  120A  158A  2617  120A  118A  	fcall	_uart_read
  1397     02D4  1283               	bcf	3,5	;RP0=0, select bank0
  1398     02D5  1303               	bcf	3,6	;RP1=0, select bank0
  1399     02D6  00B8               	movwf	UART_Print@data
  1400     02D7  3080               	movlw	128
  1401     02D8  00B9               	movwf	UART_Print@data+1
  1402     02D9  120A  158A  26B2  120A  118A  	fcall	_UART_Print
  1403     02DE                     l2611:
  1404                           
  1405                           ;Kart_main.c: 205:                UART_Print ("\r\n");
  1406     02DE  302E               	movlw	(low (((STR_1+20)-__stringbase)| (0+32768)))& (0+255)
  1407     02DF  1283               	bcf	3,5	;RP0=0, select bank0
  1408     02E0  1303               	bcf	3,6	;RP1=0, select bank0
  1409     02E1  00B8               	movwf	UART_Print@data
  1410     02E2  3080               	movlw	128
  1411     02E3  00B9               	movwf	UART_Print@data+1
  1412     02E4  120A  158A  26B2  120A  118A  	fcall	_UART_Print
  1413     02E9                     l2613:
  1414                           
  1415                           ;Kart_main.c: 206:                preguntas();
  1416     02E9  120A  158A  2654  120A  118A  	fcall	_preguntas
  1417                           
  1418                           ;Kart_main.c: 207:                RCREG ='0';
  1419     02EE  3030               	movlw	48
  1420     02EF  1283               	bcf	3,5	;RP0=0, select bank0
  1421     02F0  1303               	bcf	3,6	;RP1=0, select bank0
  1422     02F1  009A               	movwf	26	;volatile
  1423                           
  1424                           ;Kart_main.c: 209:                break;
  1425     02F2  2B09               	goto	l2619
  1426     02F3                     l2617:
  1427     02F3  120A  158A  2617  120A  118A  	fcall	_uart_read
  1428     02F8  1683               	bsf	3,5	;RP0=1, select bank1
  1429     02F9  1303               	bcf	3,6	;RP1=0, select bank1
  1430     02FA  00B4               	movwf	??_main^(0+128)
  1431     02FB  01B5               	clrf	(??_main^(0+128)+1)
  1432                           
  1433                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1434                           ; Switch size 1, requested type "simple"
  1435                           ; Number of cases is 1, Range of values is 0 to 0
  1436                           ; switch strategies available:
  1437                           ; Name         Instructions Cycles
  1438                           ; simple_byte            4     3 (average)
  1439                           ; direct_byte           11     8 (fixed)
  1440                           ; jumptable            260     6 (fixed)
  1441                           ;	Chosen strategy is simple_byte
  1442     02FC  0835               	movf	(??_main+1)^(0+128),w
  1443     02FD  3A00               	xorlw	0	; case 0
  1444     02FE  1903               	skipnz
  1445     02FF  2B01               	goto	l2701
  1446     0300  2B09               	goto	l2619
  1447     0301                     l2701:
  1448                           
  1449                           ; Switch size 1, requested type "simple"
  1450                           ; Number of cases is 2, Range of values is 49 to 50
  1451                           ; switch strategies available:
  1452                           ; Name         Instructions Cycles
  1453                           ; simple_byte            7     4 (average)
  1454                           ; direct_byte           17    11 (fixed)
  1455                           ; jumptable            263     9 (fixed)
  1456                           ;	Chosen strategy is simple_byte
  1457     0301  0834               	movf	??_main^(0+128),w
  1458     0302  3A31               	xorlw	49	; case 49
  1459     0303  1903               	skipnz
  1460     0304  2A87               	goto	l2601
  1461     0305  3A03               	xorlw	3	; case 50
  1462     0306  1903               	skipnz
  1463     0307  2AB5               	goto	l2605
  1464     0308  2B09               	goto	l2619
  1465     0309                     l2619:
  1466                           
  1467                           ;Kart_main.c: 213:     if ( UART_Data_Ready() )
  1468     0309  120A  158A  25E4  120A  118A  	fcall	_UART_Data_Ready
  1469     030E  1C03               	btfss	3,0
  1470     030F  2B11               	goto	u2641
  1471     0310  2B12               	goto	u2640
  1472     0311                     u2641:
  1473     0311  2A54               	goto	l2585
  1474     0312                     u2640:
  1475     0312                     l2621:
  1476                           
  1477                           ;Kart_main.c: 214:     {;Kart_main.c: 215:       uint8_t c = UART_GetC();
  1478     0312  120A  158A  25FB  120A  118A  	fcall	_UART_GetC
  1479     0317  1683               	bsf	3,5	;RP0=1, select bank1
  1480     0318  1303               	bcf	3,6	;RP1=0, select bank1
  1481     0319  00C0               	movwf	main@c^(0+128)
  1482     031A                     l2623:
  1483                           
  1484                           ;Kart_main.c: 216:       UART_PutC(c);
  1485     031A  0840               	movf	main@c^(0+128),w
  1486     031B  120A  158A  2609  120A  118A  	fcall	_UART_PutC
  1487     0320  2A54               	goto	l2585
  1488     0321  120A  118A  280E   	ljmp	start
  1489     0324                     __end_of_main:
  1490                           
  1491                           	psect	text1
  1492     0E17                     __ptext1:	
  1493 ;; *************** function _uart_read *****************
  1494 ;; Defined at:
  1495 ;;		line 133 in file "Kart_main.c"
  1496 ;; Parameters:    Size  Location     Type
  1497 ;;		None
  1498 ;; Auto vars:     Size  Location     Type
  1499 ;;		None
  1500 ;; Return value:  Size  Location     Type
  1501 ;;                  1    wreg      unsigned char 
  1502 ;; Registers used:
  1503 ;;		wreg
  1504 ;; Tracked objects:
  1505 ;;		On entry : 0/0
  1506 ;;		On exit  : 0/0
  1507 ;;		Unchanged: 0/0
  1508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1509 ;;      Params:         0       0       0       0       0
  1510 ;;      Locals:         0       0       0       0       0
  1511 ;;      Temps:          0       0       0       0       0
  1512 ;;      Totals:         0       0       0       0       0
  1513 ;;Total ram usage:        0 bytes
  1514 ;; Hardware stack levels used: 1
  1515 ;; Hardware stack levels required when called: 3
  1516 ;; This function calls:
  1517 ;;		Nothing
  1518 ;; This function is called by:
  1519 ;;		_main
  1520 ;; This function uses a non-reentrant model
  1521 ;;
  1522                           
  1523     0E17                     _uart_read:	
  1524                           ;psect for function _uart_read
  1525                           
  1526     0E17                     l1887:	
  1527                           ;incstack = 0
  1528                           ; Regs used in _uart_read: [wreg]
  1529                           
  1530                           
  1531                           ;Kart_main.c: 134:  if(PIR1bits.RCIF== 0){
  1532     0E17  1283               	bcf	3,5	;RP0=0, select bank0
  1533     0E18  1303               	bcf	3,6	;RP1=0, select bank0
  1534     0E19  1A8C               	btfsc	12,5	;volatile
  1535     0E1A  2E1C               	goto	u1711
  1536     0E1B  2E1D               	goto	u1710
  1537     0E1C                     u1711:
  1538     0E1C  2E28               	goto	l1899
  1539     0E1D                     u1710:
  1540     0E1D                     l1889:
  1541                           
  1542                           ;Kart_main.c: 135:      if (RCSTAbits.OERR){
  1543     0E1D  1C98               	btfss	24,1	;volatile
  1544     0E1E  2E20               	goto	u1721
  1545     0E1F  2E21               	goto	u1720
  1546     0E20                     u1721:
  1547     0E20  2E26               	goto	l1893
  1548     0E21                     u1720:
  1549     0E21                     l1891:
  1550                           
  1551                           ;Kart_main.c: 136:          RCSTAbits.CREN =0;
  1552     0E21  1218               	bcf	24,4	;volatile
  1553                           
  1554                           ;Kart_main.c: 137:          __nop();
  1555     0E22  0000               	nop
  1556                           
  1557                           ;Kart_main.c: 138:          RCSTAbits.CREN =1;
  1558     0E23  1283               	bcf	3,5	;RP0=0, select bank0
  1559     0E24  1303               	bcf	3,6	;RP1=0, select bank0
  1560     0E25  1618               	bsf	24,4	;volatile
  1561     0E26                     l1893:
  1562                           
  1563                           ;Kart_main.c: 140:      return RCREG;
  1564     0E26  081A               	movf	26,w	;volatile
  1565     0E27  2E29               	goto	l148
  1566     0E28                     l1899:
  1567                           
  1568                           ;Kart_main.c: 143:      return 0;
  1569     0E28  3000               	movlw	0
  1570     0E29                     l148:
  1571     0E29  0008               	return
  1572     0E2A                     __end_of_uart_read:
  1573                           
  1574                           	psect	text2
  1575     0022                     __ptext2:	
  1576 ;; *************** function _sprintf *****************
  1577 ;; Defined at:
  1578 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;  sp              1    wreg     PTR unsigned char 
  1581 ;;		 -> main@text(9), 
  1582 ;;  f               1    5[BANK1 ] PTR const unsigned char 
  1583 ;;		 -> STR_4(7), 
  1584 ;; Auto vars:     Size  Location     Type
  1585 ;;  sp              1   16[BANK1 ] PTR unsigned char 
  1586 ;;		 -> main@text(9), 
  1587 ;;  tmpval          4    0        struct .
  1588 ;;  width           2   17[BANK1 ] int 
  1589 ;;  val             2   13[BANK1 ] unsigned int 
  1590 ;;  cp              2    0        PTR const unsigned char 
  1591 ;;  len             2    0        unsigned int 
  1592 ;;  c               1   19[BANK1 ] unsigned char 
  1593 ;;  prec            1   15[BANK1 ] char 
  1594 ;;  flag            1   12[BANK1 ] unsigned char 
  1595 ;;  ap              1   11[BANK1 ] PTR void [1]
  1596 ;;		 -> ?_sprintf(2), 
  1597 ;; Return value:  Size  Location     Type
  1598 ;;                  2    5[BANK1 ] int 
  1599 ;; Registers used:
  1600 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1606 ;;      Params:         0       0       3       0       0
  1607 ;;      Locals:         0       0       9       0       0
  1608 ;;      Temps:          0       0       3       0       0
  1609 ;;      Totals:         0       0      15       0       0
  1610 ;;Total ram usage:       15 bytes
  1611 ;; Hardware stack levels used: 1
  1612 ;; Hardware stack levels required when called: 4
  1613 ;; This function calls:
  1614 ;;		___lwdiv
  1615 ;;		___lwmod
  1616 ;;		___wmul
  1617 ;;		_isdigit
  1618 ;; This function is called by:
  1619 ;;		_main
  1620 ;; This function uses a non-reentrant model
  1621 ;;
  1622                           
  1623     0022                     _sprintf:	
  1624                           ;psect for function _sprintf
  1625                           
  1626                           
  1627                           ;incstack = 0
  1628                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1629                           ;sprintf@sp stored from wreg
  1630     0022  1683               	bsf	3,5	;RP0=1, select bank1
  1631     0023  1303               	bcf	3,6	;RP1=0, select bank1
  1632     0024  00B0               	movwf	sprintf@sp^(0+128)
  1633     0025                     l2459:
  1634                           
  1635                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  1636     0025  30A6               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1637     0026  00AB               	movwf	sprintf@ap^(0+128)
  1638                           
  1639                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1640     0027  29B1               	goto	l2543
  1641     0028                     l2461:
  1642                           
  1643                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1644     0028  3025               	movlw	37
  1645     0029  0633               	xorwf	sprintf@c^(0+128),w
  1646     002A  1903               	btfsc	3,2
  1647     002B  282D               	goto	u2491
  1648     002C  282E               	goto	u2490
  1649     002D                     u2491:
  1650     002D  2838               	goto	l2467
  1651     002E                     u2490:
  1652     002E                     l2463:
  1653                           
  1654                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1655     002E  0830               	movf	sprintf@sp^(0+128),w
  1656     002F  0084               	movwf	4
  1657     0030  0833               	movf	sprintf@c^(0+128),w
  1658     0031  1383               	bcf	3,7	;select IRP bank0
  1659     0032  0080               	movwf	0
  1660     0033                     l2465:
  1661     0033  3001               	movlw	1
  1662     0034  00A8               	movwf	??_sprintf^(0+128)
  1663     0035  0828               	movf	??_sprintf^(0+128),w
  1664     0036  07B0               	addwf	sprintf@sp^(0+128),f
  1665                           
  1666                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1667     0037  29B1               	goto	l2543
  1668     0038                     l2467:
  1669                           
  1670                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1671     0038  01B1               	clrf	sprintf@width^(0+128)
  1672     0039  01B2               	clrf	(sprintf@width+1)^(0+128)
  1673                           
  1674                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1675     003A  01AC               	clrf	sprintf@flag^(0+128)
  1676     003B  2841               	goto	l2473
  1677     003C                     l382:	
  1678                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 596:    case '0':
  1679                           
  1680                           
  1681                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  1682     003C  152C               	bsf	sprintf@flag^(0+128),2
  1683     003D                     l2469:
  1684                           
  1685                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 598:     f++;
  1686     003D  3001               	movlw	1
  1687     003E  00A8               	movwf	??_sprintf^(0+128)
  1688     003F  0828               	movf	??_sprintf^(0+128),w
  1689     0040  07A5               	addwf	sprintf@f^(0+128),f
  1690     0041                     l2473:	
  1691                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  1692                           
  1693     0041  0825               	movf	sprintf@f^(0+128),w
  1694     0042  0084               	movwf	4
  1695     0043  120A  158A  200A  120A  118A  	fcall	stringdir
  1696     0048  00A8               	movwf	??_sprintf^(0+128)
  1697     0049  01A9               	clrf	(??_sprintf^(0+128)+1)
  1698                           
  1699                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1700                           ; Switch size 1, requested type "simple"
  1701                           ; Number of cases is 1, Range of values is 0 to 0
  1702                           ; switch strategies available:
  1703                           ; Name         Instructions Cycles
  1704                           ; simple_byte            4     3 (average)
  1705                           ; direct_byte           11     8 (fixed)
  1706                           ; jumptable            260     6 (fixed)
  1707                           ;	Chosen strategy is simple_byte
  1708     004A  0829               	movf	(??_sprintf+1)^(0+128),w
  1709     004B  3A00               	xorlw	0	; case 0
  1710     004C  1903               	skipnz
  1711     004D  284F               	goto	l2703
  1712     004E  2854               	goto	l2475
  1713     004F                     l2703:
  1714                           
  1715                           ; Switch size 1, requested type "simple"
  1716                           ; Number of cases is 1, Range of values is 48 to 48
  1717                           ; switch strategies available:
  1718                           ; Name         Instructions Cycles
  1719                           ; simple_byte            4     3 (average)
  1720                           ; direct_byte           14    11 (fixed)
  1721                           ; jumptable            263     9 (fixed)
  1722                           ;	Chosen strategy is simple_byte
  1723     004F  0828               	movf	??_sprintf^(0+128),w
  1724     0050  3A30               	xorlw	48	; case 48
  1725     0051  1903               	skipnz
  1726     0052  283C               	goto	l382
  1727     0053  2854               	goto	l2475
  1728     0054                     l2475:
  1729                           
  1730                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1731     0054  0825               	movf	sprintf@f^(0+128),w
  1732     0055  0084               	movwf	4
  1733     0056  120A  158A  200A  120A  118A  	fcall	stringdir
  1734     005B  120A  158A  262A  120A  118A  	fcall	_isdigit
  1735     0060  1C03               	btfss	3,0
  1736     0061  2863               	goto	u2501
  1737     0062  2864               	goto	u2500
  1738     0063                     u2501:
  1739     0063  28B8               	goto	l2491
  1740     0064                     u2500:
  1741     0064                     l2477:
  1742                           
  1743                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1744     0064  1683               	bsf	3,5	;RP0=1, select bank1
  1745     0065  1303               	bcf	3,6	;RP1=0, select bank1
  1746     0066  01B1               	clrf	sprintf@width^(0+128)
  1747     0067  01B2               	clrf	(sprintf@width+1)^(0+128)
  1748     0068                     l2479:
  1749                           
  1750                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1751     0068  300A               	movlw	10
  1752     0069  1283               	bcf	3,5	;RP0=0, select bank0
  1753     006A  1303               	bcf	3,6	;RP1=0, select bank0
  1754     006B  00B7               	movwf	___wmul@multiplier
  1755     006C  3000               	movlw	0
  1756     006D  00B8               	movwf	___wmul@multiplier+1
  1757     006E  1683               	bsf	3,5	;RP0=1, select bank1
  1758     006F  1303               	bcf	3,6	;RP1=0, select bank1
  1759     0070  0832               	movf	(sprintf@width+1)^(0+128),w
  1760     0071  1283               	bcf	3,5	;RP0=0, select bank0
  1761     0072  1303               	bcf	3,6	;RP1=0, select bank0
  1762     0073  00BA               	movwf	___wmul@multiplicand+1
  1763     0074  1683               	bsf	3,5	;RP0=1, select bank1
  1764     0075  1303               	bcf	3,6	;RP1=0, select bank1
  1765     0076  0831               	movf	sprintf@width^(0+128),w
  1766     0077  1283               	bcf	3,5	;RP0=0, select bank0
  1767     0078  1303               	bcf	3,6	;RP1=0, select bank0
  1768     0079  00B9               	movwf	___wmul@multiplicand
  1769     007A  120A  158A  268B  120A  118A  	fcall	___wmul
  1770     007F  1283               	bcf	3,5	;RP0=0, select bank0
  1771     0080  1303               	bcf	3,6	;RP1=0, select bank0
  1772     0081  0838               	movf	?___wmul+1,w
  1773     0082  1683               	bsf	3,5	;RP0=1, select bank1
  1774     0083  1303               	bcf	3,6	;RP1=0, select bank1
  1775     0084  00B2               	movwf	(sprintf@width+1)^(0+128)
  1776     0085  1283               	bcf	3,5	;RP0=0, select bank0
  1777     0086  1303               	bcf	3,6	;RP1=0, select bank0
  1778     0087  0837               	movf	?___wmul,w
  1779     0088  1683               	bsf	3,5	;RP0=1, select bank1
  1780     0089  1303               	bcf	3,6	;RP1=0, select bank1
  1781     008A  00B1               	movwf	sprintf@width^(0+128)
  1782     008B                     l2481:
  1783                           
  1784                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1785     008B  0825               	movf	sprintf@f^(0+128),w
  1786     008C  0084               	movwf	4
  1787     008D  120A  158A  200A  120A  118A  	fcall	stringdir
  1788     0092  3ED0               	addlw	208
  1789     0093  00A8               	movwf	??_sprintf^(0+128)
  1790     0094  30FF               	movlw	255
  1791     0095  1803               	skipnc
  1792     0096  3000               	movlw	0
  1793     0097  00A9               	movwf	(??_sprintf^(0+128)+1)
  1794     0098  0828               	movf	??_sprintf^(0+128),w
  1795     0099  07B1               	addwf	sprintf@width^(0+128),f
  1796     009A  1803               	skipnc
  1797     009B  0AB2               	incf	(sprintf@width+1)^(0+128),f
  1798     009C  0829               	movf	(??_sprintf+1)^(0+128),w
  1799     009D  07B2               	addwf	(sprintf@width+1)^(0+128),f
  1800     009E                     l2483:
  1801     009E  3001               	movlw	1
  1802     009F  00A8               	movwf	??_sprintf^(0+128)
  1803     00A0  0828               	movf	??_sprintf^(0+128),w
  1804     00A1  07A5               	addwf	sprintf@f^(0+128),f
  1805     00A2                     l2485:
  1806                           
  1807                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1808     00A2  0825               	movf	sprintf@f^(0+128),w
  1809     00A3  0084               	movwf	4
  1810     00A4  120A  158A  200A  120A  118A  	fcall	stringdir
  1811     00A9  120A  158A  262A  120A  118A  	fcall	_isdigit
  1812     00AE  1803               	btfsc	3,0
  1813     00AF  28B1               	goto	u2511
  1814     00B0  28B2               	goto	u2510
  1815     00B1                     u2511:
  1816     00B1  2868               	goto	l2479
  1817     00B2                     u2510:
  1818     00B2  28B8               	goto	l2491
  1819     00B3                     l2487:
  1820                           
  1821                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1822     00B3  30C0               	movlw	192
  1823     00B4  00A8               	movwf	??_sprintf^(0+128)
  1824     00B5  0828               	movf	??_sprintf^(0+128),w
  1825     00B6  04AC               	iorwf	sprintf@flag^(0+128),f
  1826                           
  1827                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  1828     00B7  28D4               	goto	l2493
  1829     00B8                     l2491:
  1830     00B8  3001               	movlw	1
  1831     00B9  1683               	bsf	3,5	;RP0=1, select bank1
  1832     00BA  1303               	bcf	3,6	;RP1=0, select bank1
  1833     00BB  07A5               	addwf	sprintf@f^(0+128),f
  1834     00BC  30FF               	movlw	-1
  1835     00BD  0725               	addwf	sprintf@f^(0+128),w
  1836     00BE  0084               	movwf	4
  1837     00BF  120A  158A  200A  120A  118A  	fcall	stringdir
  1838     00C4  00B3               	movwf	sprintf@c^(0+128)
  1839     00C5  00A8               	movwf	??_sprintf^(0+128)
  1840     00C6  01A9               	clrf	(??_sprintf^(0+128)+1)
  1841                           
  1842                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1843                           ; Switch size 1, requested type "simple"
  1844                           ; Number of cases is 1, Range of values is 0 to 0
  1845                           ; switch strategies available:
  1846                           ; Name         Instructions Cycles
  1847                           ; simple_byte            4     3 (average)
  1848                           ; direct_byte           11     8 (fixed)
  1849                           ; jumptable            260     6 (fixed)
  1850                           ;	Chosen strategy is simple_byte
  1851     00C7  0829               	movf	(??_sprintf+1)^(0+128),w
  1852     00C8  3A00               	xorlw	0	; case 0
  1853     00C9  1903               	skipnz
  1854     00CA  28CC               	goto	l2705
  1855     00CB  29B1               	goto	l2543
  1856     00CC                     l2705:
  1857                           
  1858                           ; Switch size 1, requested type "simple"
  1859                           ; Number of cases is 2, Range of values is 0 to 117
  1860                           ; switch strategies available:
  1861                           ; Name         Instructions Cycles
  1862                           ; simple_byte            7     4 (average)
  1863                           ; jumptable            260     6 (fixed)
  1864                           ;	Chosen strategy is simple_byte
  1865     00CC  0828               	movf	??_sprintf^(0+128),w
  1866     00CD  3A00               	xorlw	0	; case 0
  1867     00CE  1903               	skipnz
  1868     00CF  29C1               	goto	l2545
  1869     00D0  3A75               	xorlw	117	; case 117
  1870     00D1  1903               	skipnz
  1871     00D2  28B3               	goto	l2487
  1872     00D3  29B1               	goto	l2543
  1873     00D4                     l2493:
  1874                           
  1875                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1876     00D4  082B               	movf	sprintf@ap^(0+128),w
  1877     00D5  0084               	movwf	4
  1878     00D6  1383               	bcf	3,7	;select IRP bank0
  1879     00D7  0800               	movf	0,w
  1880     00D8  00AD               	movwf	sprintf@val^(0+128)
  1881     00D9  0A84               	incf	4,f
  1882     00DA  0800               	movf	0,w
  1883     00DB  00AE               	movwf	(sprintf@val+1)^(0+128)
  1884     00DC                     l2495:
  1885     00DC  3002               	movlw	2
  1886     00DD  00A8               	movwf	??_sprintf^(0+128)
  1887     00DE  0828               	movf	??_sprintf^(0+128),w
  1888     00DF  07AB               	addwf	sprintf@ap^(0+128),f
  1889     00E0                     l2497:
  1890                           
  1891                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1892     00E0  01B3               	clrf	sprintf@c^(0+128)
  1893     00E1  0AB3               	incf	sprintf@c^(0+128),f
  1894     00E2                     l2503:
  1895                           
  1896                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1897     00E2  0833               	movf	sprintf@c^(0+128),w
  1898     00E3  00A8               	movwf	??_sprintf^(0+128)
  1899     00E4  0728               	addwf	??_sprintf^(0+128),w
  1900     00E5  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1901     00E6  0084               	movwf	4
  1902     00E7  120A  158A  200A  120A  118A  	fcall	stringdir
  1903     00EC  00A9               	movwf	(??_sprintf+1)^(0+128)
  1904     00ED  120A  158A  200A  120A  118A  	fcall	stringdir
  1905     00F2  00AA               	movwf	((??_sprintf+1)^(0+128)+1)
  1906     00F3  082A               	movf	(??_sprintf+2)^(0+128),w
  1907     00F4  022E               	subwf	(sprintf@val+1)^(0+128),w
  1908     00F5  1D03               	skipz
  1909     00F6  28F9               	goto	u2525
  1910     00F7  0829               	movf	(??_sprintf+1)^(0+128),w
  1911     00F8  022D               	subwf	sprintf@val^(0+128),w
  1912     00F9                     u2525:
  1913     00F9  1803               	skipnc
  1914     00FA  28FC               	goto	u2521
  1915     00FB  28FD               	goto	u2520
  1916     00FC                     u2521:
  1917     00FC  28FE               	goto	l2507
  1918     00FD                     u2520:
  1919     00FD  2908               	goto	l2509
  1920     00FE                     l2507:
  1921     00FE  3001               	movlw	1
  1922     00FF  00A8               	movwf	??_sprintf^(0+128)
  1923     0100  0828               	movf	??_sprintf^(0+128),w
  1924     0101  07B3               	addwf	sprintf@c^(0+128),f
  1925     0102  3005               	movlw	5
  1926     0103  0633               	xorwf	sprintf@c^(0+128),w
  1927     0104  1D03               	btfss	3,2
  1928     0105  2907               	goto	u2531
  1929     0106  2908               	goto	u2530
  1930     0107                     u2531:
  1931     0107  28E2               	goto	l2503
  1932     0108                     u2530:
  1933     0108                     l2509:
  1934                           
  1935                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  1936     0108  0832               	movf	(sprintf@width+1)^(0+128),w
  1937     0109  3A80               	xorlw	128
  1938     010A  3C80               	sublw	128
  1939     010B  1D03               	skipz
  1940     010C  290F               	goto	u2545
  1941     010D  0831               	movf	sprintf@width^(0+128),w
  1942     010E  0233               	subwf	sprintf@c^(0+128),w
  1943     010F                     u2545:
  1944     010F  1803               	skipnc
  1945     0110  2912               	goto	u2541
  1946     0111  2913               	goto	u2540
  1947     0112                     u2541:
  1948     0112  291F               	goto	l2513
  1949     0113                     u2540:
  1950     0113                     l2511:
  1951                           
  1952                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  1953     0113  1683               	bsf	3,5	;RP0=1, select bank1
  1954     0114  1303               	bcf	3,6	;RP1=0, select bank1
  1955     0115  0833               	movf	sprintf@c^(0+128),w
  1956     0116  00A8               	movwf	??_sprintf^(0+128)
  1957     0117  01A9               	clrf	(??_sprintf^(0+128)+1)
  1958     0118  0828               	movf	??_sprintf^(0+128),w
  1959     0119  02B1               	subwf	sprintf@width^(0+128),f
  1960     011A  0829               	movf	(??_sprintf+1)^(0+128),w
  1961     011B  1C03               	skipc
  1962     011C  03B2               	decf	(sprintf@width+1)^(0+128),f
  1963     011D  02B2               	subwf	(sprintf@width+1)^(0+128),f
  1964     011E  2923               	goto	l2515
  1965     011F                     l2513:
  1966                           
  1967                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  1968     011F  1683               	bsf	3,5	;RP0=1, select bank1
  1969     0120  1303               	bcf	3,6	;RP1=0, select bank1
  1970     0121  01B1               	clrf	sprintf@width^(0+128)
  1971     0122  01B2               	clrf	(sprintf@width+1)^(0+128)
  1972     0123                     l2515:
  1973                           
  1974                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  1975     0123  1D2C               	btfss	sprintf@flag^(0+128),2
  1976     0124  2926               	goto	u2551
  1977     0125  2927               	goto	u2550
  1978     0126                     u2551:
  1979     0126  2943               	goto	l2525
  1980     0127                     u2550:
  1981     0127                     l2517:
  1982                           
  1983                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  1984     0127  0831               	movf	sprintf@width^(0+128),w
  1985     0128  0432               	iorwf	(sprintf@width+1)^(0+128),w
  1986     0129  1903               	btfsc	3,2
  1987     012A  292C               	goto	u2561
  1988     012B  292D               	goto	u2560
  1989     012C                     u2561:
  1990     012C  295E               	goto	l2533
  1991     012D                     u2560:
  1992     012D                     l2519:
  1993                           
  1994                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  1995     012D  0830               	movf	sprintf@sp^(0+128),w
  1996     012E  0084               	movwf	4
  1997     012F  3030               	movlw	48
  1998     0130  1383               	bcf	3,7	;select IRP bank0
  1999     0131  0080               	movwf	0
  2000     0132                     l2521:
  2001     0132  3001               	movlw	1
  2002     0133  00A8               	movwf	??_sprintf^(0+128)
  2003     0134  0828               	movf	??_sprintf^(0+128),w
  2004     0135  07B0               	addwf	sprintf@sp^(0+128),f
  2005     0136                     l2523:
  2006     0136  30FF               	movlw	255
  2007     0137  07B1               	addwf	sprintf@width^(0+128),f
  2008     0138  1803               	skipnc
  2009     0139  0AB2               	incf	(sprintf@width+1)^(0+128),f
  2010     013A  30FF               	movlw	255
  2011     013B  07B2               	addwf	(sprintf@width+1)^(0+128),f
  2012     013C  0831               	movf	sprintf@width^(0+128),w
  2013     013D  0432               	iorwf	(sprintf@width+1)^(0+128),w
  2014     013E  1D03               	btfss	3,2
  2015     013F  2941               	goto	u2571
  2016     0140  2942               	goto	u2570
  2017     0141                     u2571:
  2018     0141  292D               	goto	l2519
  2019     0142                     u2570:
  2020     0142  295E               	goto	l2533
  2021     0143                     l2525:
  2022                           
  2023                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1450:    if(width
  2024     0143  0831               	movf	sprintf@width^(0+128),w
  2025     0144  0432               	iorwf	(sprintf@width+1)^(0+128),w
  2026     0145  1903               	btfsc	3,2
  2027     0146  2948               	goto	u2581
  2028     0147  2949               	goto	u2580
  2029     0148                     u2581:
  2030     0148  295E               	goto	l2533
  2031     0149                     u2580:
  2032     0149                     l2527:
  2033                           
  2034                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  2035     0149  0830               	movf	sprintf@sp^(0+128),w
  2036     014A  0084               	movwf	4
  2037     014B  3020               	movlw	32
  2038     014C  1383               	bcf	3,7	;select IRP bank0
  2039     014D  0080               	movwf	0
  2040     014E                     l2529:
  2041     014E  3001               	movlw	1
  2042     014F  00A8               	movwf	??_sprintf^(0+128)
  2043     0150  0828               	movf	??_sprintf^(0+128),w
  2044     0151  07B0               	addwf	sprintf@sp^(0+128),f
  2045     0152                     l2531:
  2046     0152  30FF               	movlw	255
  2047     0153  07B1               	addwf	sprintf@width^(0+128),f
  2048     0154  1803               	skipnc
  2049     0155  0AB2               	incf	(sprintf@width+1)^(0+128),f
  2050     0156  30FF               	movlw	255
  2051     0157  07B2               	addwf	(sprintf@width+1)^(0+128),f
  2052     0158  0831               	movf	sprintf@width^(0+128),w
  2053     0159  0432               	iorwf	(sprintf@width+1)^(0+128),w
  2054     015A  1D03               	btfss	3,2
  2055     015B  295D               	goto	u2591
  2056     015C  295E               	goto	u2590
  2057     015D                     u2591:
  2058     015D  2949               	goto	l2527
  2059     015E                     u2590:
  2060     015E                     l2533:
  2061                           
  2062                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2063     015E  0833               	movf	sprintf@c^(0+128),w
  2064     015F  00AF               	movwf	sprintf@prec^(0+128)
  2065                           
  2066                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2067     0160  29A8               	goto	l2541
  2068     0161                     l2535:
  2069                           
  2070                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2071     0161  300A               	movlw	10
  2072     0162  00A0               	movwf	___lwmod@divisor^(0+128)
  2073     0163  3000               	movlw	0
  2074     0164  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  2075     0165  082F               	movf	sprintf@prec^(0+128),w
  2076     0166  00A8               	movwf	??_sprintf^(0+128)
  2077     0167  0728               	addwf	??_sprintf^(0+128),w
  2078     0168  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2079     0169  0084               	movwf	4
  2080     016A  120A  158A  200A  120A  118A  	fcall	stringdir
  2081     016F  1283               	bcf	3,5	;RP0=0, select bank0
  2082     0170  1303               	bcf	3,6	;RP1=0, select bank0
  2083     0171  00B7               	movwf	___lwdiv@divisor
  2084     0172  120A  158A  200A  120A  118A  	fcall	stringdir
  2085     0177  00B8               	movwf	___lwdiv@divisor+1
  2086     0178  1683               	bsf	3,5	;RP0=1, select bank1
  2087     0179  1303               	bcf	3,6	;RP1=0, select bank1
  2088     017A  082E               	movf	(sprintf@val+1)^(0+128),w
  2089     017B  1283               	bcf	3,5	;RP0=0, select bank0
  2090     017C  1303               	bcf	3,6	;RP1=0, select bank0
  2091     017D  00BA               	movwf	___lwdiv@dividend+1
  2092     017E  1683               	bsf	3,5	;RP0=1, select bank1
  2093     017F  1303               	bcf	3,6	;RP1=0, select bank1
  2094     0180  082D               	movf	sprintf@val^(0+128),w
  2095     0181  1283               	bcf	3,5	;RP0=0, select bank0
  2096     0182  1303               	bcf	3,6	;RP1=0, select bank0
  2097     0183  00B9               	movwf	___lwdiv@dividend
  2098     0184  120A  158A  271F  120A  118A  	fcall	___lwdiv
  2099     0189  1283               	bcf	3,5	;RP0=0, select bank0
  2100     018A  1303               	bcf	3,6	;RP1=0, select bank0
  2101     018B  0838               	movf	?___lwdiv+1,w
  2102     018C  1683               	bsf	3,5	;RP0=1, select bank1
  2103     018D  1303               	bcf	3,6	;RP1=0, select bank1
  2104     018E  00A3               	movwf	(___lwmod@dividend+1)^(0+128)
  2105     018F  1283               	bcf	3,5	;RP0=0, select bank0
  2106     0190  1303               	bcf	3,6	;RP1=0, select bank0
  2107     0191  0837               	movf	?___lwdiv,w
  2108     0192  1683               	bsf	3,5	;RP0=1, select bank1
  2109     0193  1303               	bcf	3,6	;RP1=0, select bank1
  2110     0194  00A2               	movwf	___lwmod@dividend^(0+128)
  2111     0195  120A  118A  27BE  120A  118A  	fcall	___lwmod
  2112     019A  1683               	bsf	3,5	;RP0=1, select bank1
  2113     019B  1303               	bcf	3,6	;RP1=0, select bank1
  2114     019C  0820               	movf	?___lwmod^(0+128),w
  2115     019D  3E30               	addlw	48
  2116     019E  00B3               	movwf	sprintf@c^(0+128)
  2117     019F                     l2537:
  2118                           
  2119                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2120     019F  0830               	movf	sprintf@sp^(0+128),w
  2121     01A0  0084               	movwf	4
  2122     01A1  0833               	movf	sprintf@c^(0+128),w
  2123     01A2  1383               	bcf	3,7	;select IRP bank0
  2124     01A3  0080               	movwf	0
  2125     01A4                     l2539:
  2126     01A4  3001               	movlw	1
  2127     01A5  00A8               	movwf	??_sprintf^(0+128)
  2128     01A6  0828               	movf	??_sprintf^(0+128),w
  2129     01A7  07B0               	addwf	sprintf@sp^(0+128),f
  2130     01A8                     l2541:
  2131                           
  2132                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2133     01A8  30FF               	movlw	255
  2134     01A9  00A8               	movwf	??_sprintf^(0+128)
  2135     01AA  0828               	movf	??_sprintf^(0+128),w
  2136     01AB  07AF               	addwf	sprintf@prec^(0+128),f
  2137     01AC  0A2F               	incf	sprintf@prec^(0+128),w
  2138     01AD  1D03               	btfss	3,2
  2139     01AE  29B0               	goto	u2601
  2140     01AF  29B1               	goto	u2600
  2141     01B0                     u2601:
  2142     01B0  2961               	goto	l2535
  2143     01B1                     u2600:
  2144     01B1                     l2543:
  2145                           
  2146                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2147     01B1  3001               	movlw	1
  2148     01B2  07A5               	addwf	sprintf@f^(0+128),f
  2149     01B3  30FF               	movlw	-1
  2150     01B4  0725               	addwf	sprintf@f^(0+128),w
  2151     01B5  0084               	movwf	4
  2152     01B6  120A  158A  200A  120A  118A  	fcall	stringdir
  2153     01BB  00B3               	movwf	sprintf@c^(0+128)
  2154     01BC  0833               	movf	sprintf@c^(0+128),w
  2155     01BD  1D03               	btfss	3,2
  2156     01BE  29C0               	goto	u2611
  2157     01BF  29C1               	goto	u2610
  2158     01C0                     u2611:
  2159     01C0  2828               	goto	l2461
  2160     01C1                     u2610:
  2161     01C1                     l2545:
  2162                           
  2163                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2164     01C1  0830               	movf	sprintf@sp^(0+128),w
  2165     01C2  0084               	movwf	4
  2166     01C3  1383               	bcf	3,7	;select IRP bank0
  2167     01C4  0180               	clrf	0
  2168     01C5                     l412:
  2169     01C5  0008               	return
  2170     01C6                     __end_of_sprintf:
  2171                           
  2172                           	psect	text3
  2173     0E2A                     __ptext3:	
  2174 ;; *************** function _isdigit *****************
  2175 ;; Defined at:
  2176 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\isdigit.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;  c               1    wreg     unsigned char 
  2179 ;; Auto vars:     Size  Location     Type
  2180 ;;  c               1   24[BANK0 ] unsigned char 
  2181 ;; Return value:  Size  Location     Type
  2182 ;;		None               void
  2183 ;; Registers used:
  2184 ;;		wreg, status,2, status,0
  2185 ;; Tracked objects:
  2186 ;;		On entry : 0/0
  2187 ;;		On exit  : 0/0
  2188 ;;		Unchanged: 0/0
  2189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2190 ;;      Params:         0       0       0       0       0
  2191 ;;      Locals:         0       2       0       0       0
  2192 ;;      Temps:          0       0       0       0       0
  2193 ;;      Totals:         0       2       0       0       0
  2194 ;;Total ram usage:        2 bytes
  2195 ;; Hardware stack levels used: 1
  2196 ;; Hardware stack levels required when called: 3
  2197 ;; This function calls:
  2198 ;;		Nothing
  2199 ;; This function is called by:
  2200 ;;		_sprintf
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204     0E2A                     _isdigit:	
  2205                           ;psect for function _isdigit
  2206                           
  2207                           
  2208                           ;incstack = 0
  2209                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2210                           ;isdigit@c stored from wreg
  2211     0E2A  1283               	bcf	3,5	;RP0=0, select bank0
  2212     0E2B  1303               	bcf	3,6	;RP1=0, select bank0
  2213     0E2C  00B8               	movwf	isdigit@c
  2214     0E2D                     l2283:
  2215     0E2D  01B7               	clrf	_isdigit$1183
  2216     0E2E                     l2285:
  2217     0E2E  303A               	movlw	58
  2218     0E2F  0238               	subwf	isdigit@c,w
  2219     0E30  1803               	skipnc
  2220     0E31  2E33               	goto	u2071
  2221     0E32  2E34               	goto	u2070
  2222     0E33                     u2071:
  2223     0E33  2E3C               	goto	l2291
  2224     0E34                     u2070:
  2225     0E34                     l2287:
  2226     0E34  3030               	movlw	48
  2227     0E35  0238               	subwf	isdigit@c,w
  2228     0E36  1C03               	skipc
  2229     0E37  2E39               	goto	u2081
  2230     0E38  2E3A               	goto	u2080
  2231     0E39                     u2081:
  2232     0E39  2E3C               	goto	l2291
  2233     0E3A                     u2080:
  2234     0E3A                     l2289:
  2235     0E3A  01B7               	clrf	_isdigit$1183
  2236     0E3B  0AB7               	incf	_isdigit$1183,f
  2237     0E3C                     l2291:
  2238     0E3C  0C37               	rrf	_isdigit$1183,w
  2239     0E3D                     l869:
  2240     0E3D  0008               	return
  2241     0E3E                     __end_of_isdigit:
  2242                           
  2243                           	psect	text4
  2244     0E8B                     __ptext4:	
  2245 ;; *************** function ___wmul *****************
  2246 ;; Defined at:
  2247 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  2248 ;; Parameters:    Size  Location     Type
  2249 ;;  multiplier      2   23[BANK0 ] unsigned int 
  2250 ;;  multiplicand    2   25[BANK0 ] unsigned int 
  2251 ;; Auto vars:     Size  Location     Type
  2252 ;;  product         2   27[BANK0 ] unsigned int 
  2253 ;; Return value:  Size  Location     Type
  2254 ;;                  2   23[BANK0 ] unsigned int 
  2255 ;; Registers used:
  2256 ;;		wreg, status,2, status,0
  2257 ;; Tracked objects:
  2258 ;;		On entry : 0/0
  2259 ;;		On exit  : 0/0
  2260 ;;		Unchanged: 0/0
  2261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2262 ;;      Params:         0       4       0       0       0
  2263 ;;      Locals:         0       2       0       0       0
  2264 ;;      Temps:          0       0       0       0       0
  2265 ;;      Totals:         0       6       0       0       0
  2266 ;;Total ram usage:        6 bytes
  2267 ;; Hardware stack levels used: 1
  2268 ;; Hardware stack levels required when called: 3
  2269 ;; This function calls:
  2270 ;;		Nothing
  2271 ;; This function is called by:
  2272 ;;		_sprintf
  2273 ;; This function uses a non-reentrant model
  2274 ;;
  2275                           
  2276     0E8B                     ___wmul:	
  2277                           ;psect for function ___wmul
  2278                           
  2279     0E8B                     l2295:	
  2280                           ;incstack = 0
  2281                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2282                           
  2283     0E8B  1283               	bcf	3,5	;RP0=0, select bank0
  2284     0E8C  1303               	bcf	3,6	;RP1=0, select bank0
  2285     0E8D  01BB               	clrf	___wmul@product
  2286     0E8E  01BC               	clrf	___wmul@product+1
  2287     0E8F                     l2297:
  2288     0E8F  1C37               	btfss	___wmul@multiplier,0
  2289     0E90  2E92               	goto	u2091
  2290     0E91  2E93               	goto	u2090
  2291     0E92                     u2091:
  2292     0E92  2E99               	goto	l416
  2293     0E93                     u2090:
  2294     0E93                     l2299:
  2295     0E93  0839               	movf	___wmul@multiplicand,w
  2296     0E94  07BB               	addwf	___wmul@product,f
  2297     0E95  1803               	skipnc
  2298     0E96  0ABC               	incf	___wmul@product+1,f
  2299     0E97  083A               	movf	___wmul@multiplicand+1,w
  2300     0E98  07BC               	addwf	___wmul@product+1,f
  2301     0E99                     l416:
  2302     0E99  3001               	movlw	1
  2303     0E9A                     u2105:
  2304     0E9A  1003               	clrc
  2305     0E9B  0DB9               	rlf	___wmul@multiplicand,f
  2306     0E9C  0DBA               	rlf	___wmul@multiplicand+1,f
  2307     0E9D  3EFF               	addlw	-1
  2308     0E9E  1D03               	skipz
  2309     0E9F  2E9A               	goto	u2105
  2310     0EA0                     l2301:
  2311     0EA0  3001               	movlw	1
  2312     0EA1                     u2115:
  2313     0EA1  1003               	clrc
  2314     0EA2  0CB8               	rrf	___wmul@multiplier+1,f
  2315     0EA3  0CB7               	rrf	___wmul@multiplier,f
  2316     0EA4  3EFF               	addlw	-1
  2317     0EA5  1D03               	skipz
  2318     0EA6  2EA1               	goto	u2115
  2319     0EA7                     l2303:
  2320     0EA7  0837               	movf	___wmul@multiplier,w
  2321     0EA8  0438               	iorwf	___wmul@multiplier+1,w
  2322     0EA9  1D03               	btfss	3,2
  2323     0EAA  2EAC               	goto	u2121
  2324     0EAB  2EAD               	goto	u2120
  2325     0EAC                     u2121:
  2326     0EAC  2E8F               	goto	l2297
  2327     0EAD                     u2120:
  2328     0EAD                     l2305:
  2329     0EAD  083C               	movf	___wmul@product+1,w
  2330     0EAE  00B8               	movwf	?___wmul+1
  2331     0EAF  083B               	movf	___wmul@product,w
  2332     0EB0  00B7               	movwf	?___wmul
  2333     0EB1                     l418:
  2334     0EB1  0008               	return
  2335     0EB2                     __end_of___wmul:
  2336                           
  2337                           	psect	text5
  2338     07BE                     __ptext5:	
  2339 ;; *************** function ___lwmod *****************
  2340 ;; Defined at:
  2341 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;  divisor         2    0[BANK1 ] unsigned int 
  2344 ;;  dividend        2    2[BANK1 ] unsigned int 
  2345 ;; Auto vars:     Size  Location     Type
  2346 ;;  counter         1    4[BANK1 ] unsigned char 
  2347 ;; Return value:  Size  Location     Type
  2348 ;;                  2    0[BANK1 ] unsigned int 
  2349 ;; Registers used:
  2350 ;;		wreg, status,2, status,0
  2351 ;; Tracked objects:
  2352 ;;		On entry : 0/0
  2353 ;;		On exit  : 0/0
  2354 ;;		Unchanged: 0/0
  2355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2356 ;;      Params:         0       0       4       0       0
  2357 ;;      Locals:         0       0       1       0       0
  2358 ;;      Temps:          0       1       0       0       0
  2359 ;;      Totals:         0       1       5       0       0
  2360 ;;Total ram usage:        6 bytes
  2361 ;; Hardware stack levels used: 1
  2362 ;; Hardware stack levels required when called: 3
  2363 ;; This function calls:
  2364 ;;		Nothing
  2365 ;; This function is called by:
  2366 ;;		_sprintf
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370     07BE                     ___lwmod:	
  2371                           ;psect for function ___lwmod
  2372                           
  2373     07BE                     l2395:	
  2374                           ;incstack = 0
  2375                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2376                           
  2377     07BE  1683               	bsf	3,5	;RP0=1, select bank1
  2378     07BF  1303               	bcf	3,6	;RP1=0, select bank1
  2379     07C0  0820               	movf	___lwmod@divisor^(0+128),w
  2380     07C1  0421               	iorwf	(___lwmod@divisor+1)^(0+128),w
  2381     07C2  1903               	btfsc	3,2
  2382     07C3  2FC5               	goto	u2371
  2383     07C4  2FC6               	goto	u2370
  2384     07C5                     u2371:
  2385     07C5  2FF9               	goto	l2413
  2386     07C6                     u2370:
  2387     07C6                     l2397:
  2388     07C6  01A4               	clrf	___lwmod@counter^(0+128)
  2389     07C7  0AA4               	incf	___lwmod@counter^(0+128),f
  2390     07C8  2FD8               	goto	l2403
  2391     07C9                     l2399:
  2392     07C9  3001               	movlw	1
  2393     07CA                     u2385:
  2394     07CA  1003               	clrc
  2395     07CB  0DA0               	rlf	___lwmod@divisor^(0+128),f
  2396     07CC  0DA1               	rlf	(___lwmod@divisor+1)^(0+128),f
  2397     07CD  3EFF               	addlw	-1
  2398     07CE  1D03               	skipz
  2399     07CF  2FCA               	goto	u2385
  2400     07D0                     l2401:
  2401     07D0  3001               	movlw	1
  2402     07D1  1283               	bcf	3,5	;RP0=0, select bank0
  2403     07D2  1303               	bcf	3,6	;RP1=0, select bank0
  2404     07D3  00BF               	movwf	??___lwmod
  2405     07D4  083F               	movf	??___lwmod,w
  2406     07D5  1683               	bsf	3,5	;RP0=1, select bank1
  2407     07D6  1303               	bcf	3,6	;RP1=0, select bank1
  2408     07D7  07A4               	addwf	___lwmod@counter^(0+128),f
  2409     07D8                     l2403:
  2410     07D8  1FA1               	btfss	(___lwmod@divisor+1)^(0+128),7
  2411     07D9  2FDB               	goto	u2391
  2412     07DA  2FDC               	goto	u2390
  2413     07DB                     u2391:
  2414     07DB  2FC9               	goto	l2399
  2415     07DC                     u2390:
  2416     07DC                     l2405:
  2417     07DC  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  2418     07DD  0223               	subwf	(___lwmod@dividend+1)^(0+128),w
  2419     07DE  1D03               	skipz
  2420     07DF  2FE2               	goto	u2405
  2421     07E0  0820               	movf	___lwmod@divisor^(0+128),w
  2422     07E1  0222               	subwf	___lwmod@dividend^(0+128),w
  2423     07E2                     u2405:
  2424     07E2  1C03               	skipc
  2425     07E3  2FE5               	goto	u2401
  2426     07E4  2FE6               	goto	u2400
  2427     07E5                     u2401:
  2428     07E5  2FEC               	goto	l2409
  2429     07E6                     u2400:
  2430     07E6                     l2407:
  2431     07E6  0820               	movf	___lwmod@divisor^(0+128),w
  2432     07E7  02A2               	subwf	___lwmod@dividend^(0+128),f
  2433     07E8  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  2434     07E9  1C03               	skipc
  2435     07EA  03A3               	decf	(___lwmod@dividend+1)^(0+128),f
  2436     07EB  02A3               	subwf	(___lwmod@dividend+1)^(0+128),f
  2437     07EC                     l2409:
  2438     07EC  3001               	movlw	1
  2439     07ED                     u2415:
  2440     07ED  1003               	clrc
  2441     07EE  0CA1               	rrf	(___lwmod@divisor+1)^(0+128),f
  2442     07EF  0CA0               	rrf	___lwmod@divisor^(0+128),f
  2443     07F0  3EFF               	addlw	-1
  2444     07F1  1D03               	skipz
  2445     07F2  2FED               	goto	u2415
  2446     07F3                     l2411:
  2447     07F3  3001               	movlw	1
  2448     07F4  02A4               	subwf	___lwmod@counter^(0+128),f
  2449     07F5  1D03               	btfss	3,2
  2450     07F6  2FF8               	goto	u2421
  2451     07F7  2FF9               	goto	u2420
  2452     07F8                     u2421:
  2453     07F8  2FDC               	goto	l2405
  2454     07F9                     u2420:
  2455     07F9                     l2413:
  2456     07F9  0823               	movf	(___lwmod@dividend+1)^(0+128),w
  2457     07FA  00A1               	movwf	(?___lwmod+1)^(0+128)
  2458     07FB  0822               	movf	___lwmod@dividend^(0+128),w
  2459     07FC  00A0               	movwf	?___lwmod^(0+128)
  2460     07FD                     l698:
  2461     07FD  0008               	return
  2462     07FE                     __end_of___lwmod:
  2463                           
  2464                           	psect	text6
  2465     0F1F                     __ptext6:	
  2466 ;; *************** function ___lwdiv *****************
  2467 ;; Defined at:
  2468 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2469 ;; Parameters:    Size  Location     Type
  2470 ;;  divisor         2   23[BANK0 ] unsigned int 
  2471 ;;  dividend        2   25[BANK0 ] unsigned int 
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;  quotient        2   29[BANK0 ] unsigned int 
  2474 ;;  counter         1   28[BANK0 ] unsigned char 
  2475 ;; Return value:  Size  Location     Type
  2476 ;;                  2   23[BANK0 ] unsigned int 
  2477 ;; Registers used:
  2478 ;;		wreg, status,2, status,0
  2479 ;; Tracked objects:
  2480 ;;		On entry : 0/0
  2481 ;;		On exit  : 0/0
  2482 ;;		Unchanged: 0/0
  2483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2484 ;;      Params:         0       4       0       0       0
  2485 ;;      Locals:         0       3       0       0       0
  2486 ;;      Temps:          0       1       0       0       0
  2487 ;;      Totals:         0       8       0       0       0
  2488 ;;Total ram usage:        8 bytes
  2489 ;; Hardware stack levels used: 1
  2490 ;; Hardware stack levels required when called: 3
  2491 ;; This function calls:
  2492 ;;		Nothing
  2493 ;; This function is called by:
  2494 ;;		_sprintf
  2495 ;; This function uses a non-reentrant model
  2496 ;;
  2497                           
  2498     0F1F                     ___lwdiv:	
  2499                           ;psect for function ___lwdiv
  2500                           
  2501     0F1F                     l2369:	
  2502                           ;incstack = 0
  2503                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2504                           
  2505     0F1F  1283               	bcf	3,5	;RP0=0, select bank0
  2506     0F20  1303               	bcf	3,6	;RP1=0, select bank0
  2507     0F21  01BD               	clrf	___lwdiv@quotient
  2508     0F22  01BE               	clrf	___lwdiv@quotient+1
  2509     0F23                     l2371:
  2510     0F23  0837               	movf	___lwdiv@divisor,w
  2511     0F24  0438               	iorwf	___lwdiv@divisor+1,w
  2512     0F25  1903               	btfsc	3,2
  2513     0F26  2F28               	goto	u2301
  2514     0F27  2F29               	goto	u2300
  2515     0F28                     u2301:
  2516     0F28  2F60               	goto	l2391
  2517     0F29                     u2300:
  2518     0F29                     l2373:
  2519     0F29  01BC               	clrf	___lwdiv@counter
  2520     0F2A  0ABC               	incf	___lwdiv@counter,f
  2521     0F2B  2F37               	goto	l2379
  2522     0F2C                     l2375:
  2523     0F2C  3001               	movlw	1
  2524     0F2D                     u2315:
  2525     0F2D  1003               	clrc
  2526     0F2E  0DB7               	rlf	___lwdiv@divisor,f
  2527     0F2F  0DB8               	rlf	___lwdiv@divisor+1,f
  2528     0F30  3EFF               	addlw	-1
  2529     0F31  1D03               	skipz
  2530     0F32  2F2D               	goto	u2315
  2531     0F33                     l2377:
  2532     0F33  3001               	movlw	1
  2533     0F34  00BB               	movwf	??___lwdiv
  2534     0F35  083B               	movf	??___lwdiv,w
  2535     0F36  07BC               	addwf	___lwdiv@counter,f
  2536     0F37                     l2379:
  2537     0F37  1FB8               	btfss	___lwdiv@divisor+1,7
  2538     0F38  2F3A               	goto	u2321
  2539     0F39  2F3B               	goto	u2320
  2540     0F3A                     u2321:
  2541     0F3A  2F2C               	goto	l2375
  2542     0F3B                     u2320:
  2543     0F3B                     l2381:
  2544     0F3B  3001               	movlw	1
  2545     0F3C                     u2335:
  2546     0F3C  1003               	clrc
  2547     0F3D  0DBD               	rlf	___lwdiv@quotient,f
  2548     0F3E  0DBE               	rlf	___lwdiv@quotient+1,f
  2549     0F3F  3EFF               	addlw	-1
  2550     0F40  1D03               	skipz
  2551     0F41  2F3C               	goto	u2335
  2552     0F42  0838               	movf	___lwdiv@divisor+1,w
  2553     0F43  023A               	subwf	___lwdiv@dividend+1,w
  2554     0F44  1D03               	skipz
  2555     0F45  2F48               	goto	u2345
  2556     0F46  0837               	movf	___lwdiv@divisor,w
  2557     0F47  0239               	subwf	___lwdiv@dividend,w
  2558     0F48                     u2345:
  2559     0F48  1C03               	skipc
  2560     0F49  2F4B               	goto	u2341
  2561     0F4A  2F4C               	goto	u2340
  2562     0F4B                     u2341:
  2563     0F4B  2F53               	goto	l2387
  2564     0F4C                     u2340:
  2565     0F4C                     l2383:
  2566     0F4C  0837               	movf	___lwdiv@divisor,w
  2567     0F4D  02B9               	subwf	___lwdiv@dividend,f
  2568     0F4E  0838               	movf	___lwdiv@divisor+1,w
  2569     0F4F  1C03               	skipc
  2570     0F50  03BA               	decf	___lwdiv@dividend+1,f
  2571     0F51  02BA               	subwf	___lwdiv@dividend+1,f
  2572     0F52                     l2385:
  2573     0F52  143D               	bsf	___lwdiv@quotient,0
  2574     0F53                     l2387:
  2575     0F53  3001               	movlw	1
  2576     0F54                     u2355:
  2577     0F54  1003               	clrc
  2578     0F55  0CB8               	rrf	___lwdiv@divisor+1,f
  2579     0F56  0CB7               	rrf	___lwdiv@divisor,f
  2580     0F57  3EFF               	addlw	-1
  2581     0F58  1D03               	skipz
  2582     0F59  2F54               	goto	u2355
  2583     0F5A                     l2389:
  2584     0F5A  3001               	movlw	1
  2585     0F5B  02BC               	subwf	___lwdiv@counter,f
  2586     0F5C  1D03               	btfss	3,2
  2587     0F5D  2F5F               	goto	u2361
  2588     0F5E  2F60               	goto	u2360
  2589     0F5F                     u2361:
  2590     0F5F  2F3B               	goto	l2381
  2591     0F60                     u2360:
  2592     0F60                     l2391:
  2593     0F60  083E               	movf	___lwdiv@quotient+1,w
  2594     0F61  00B8               	movwf	?___lwdiv+1
  2595     0F62  083D               	movf	___lwdiv@quotient,w
  2596     0F63  00B7               	movwf	?___lwdiv
  2597     0F64                     l688:
  2598     0F64  0008               	return
  2599     0F65                     __end_of___lwdiv:
  2600                           
  2601                           	psect	text7
  2602     0EE7                     __ptext7:	
  2603 ;; *************** function _setup *****************
  2604 ;; Defined at:
  2605 ;;		line 231 in file "Kart_main.c"
  2606 ;; Parameters:    Size  Location     Type
  2607 ;;		None
  2608 ;; Auto vars:     Size  Location     Type
  2609 ;;		None
  2610 ;; Return value:  Size  Location     Type
  2611 ;;                  1    wreg      void 
  2612 ;; Registers used:
  2613 ;;		wreg, status,2, status,0
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2619 ;;      Params:         0       0       0       0       0
  2620 ;;      Locals:         0       0       0       0       0
  2621 ;;      Temps:          0       1       0       0       0
  2622 ;;      Totals:         0       1       0       0       0
  2623 ;;Total ram usage:        1 bytes
  2624 ;; Hardware stack levels used: 1
  2625 ;; Hardware stack levels required when called: 3
  2626 ;; This function calls:
  2627 ;;		Nothing
  2628 ;; This function is called by:
  2629 ;;		_main
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633     0EE7                     _setup:	
  2634                           ;psect for function _setup
  2635                           
  2636     0EE7                     l1903:	
  2637                           ;incstack = 0
  2638                           ; Regs used in _setup: [wreg+status,2+status,0]
  2639                           
  2640                           
  2641                           ;Kart_main.c: 232:     ANSEL = 0b00000011;
  2642     0EE7  3003               	movlw	3
  2643     0EE8  1683               	bsf	3,5	;RP0=1, select bank3
  2644     0EE9  1703               	bsf	3,6	;RP1=1, select bank3
  2645     0EEA  0088               	movwf	8	;volatile
  2646     0EEB                     l1905:
  2647                           
  2648                           ;Kart_main.c: 233:     ANSELH = 0;
  2649     0EEB  0189               	clrf	9	;volatile
  2650     0EEC                     l1907:
  2651                           
  2652                           ;Kart_main.c: 235:     TRISA = 0xFF;
  2653     0EEC  30FF               	movlw	255
  2654     0EED  1683               	bsf	3,5	;RP0=1, select bank1
  2655     0EEE  1303               	bcf	3,6	;RP1=0, select bank1
  2656     0EEF  0085               	movwf	5	;volatile
  2657     0EF0                     l1909:
  2658                           
  2659                           ;Kart_main.c: 236:     TRISB = 0b11111111;
  2660     0EF0  30FF               	movlw	255
  2661     0EF1  0086               	movwf	6	;volatile
  2662     0EF2                     l1911:
  2663                           
  2664                           ;Kart_main.c: 237:     TRISD = 0;
  2665     0EF2  0188               	clrf	8	;volatile
  2666     0EF3                     l1913:
  2667                           
  2668                           ;Kart_main.c: 238:     OPTION_REGbits.nRBPU = 0;
  2669     0EF3  1381               	bcf	1,7	;volatile
  2670                           
  2671                           ;Kart_main.c: 239:     WPUB = 0b1111;
  2672     0EF4  300F               	movlw	15
  2673     0EF5  0095               	movwf	21	;volatile
  2674     0EF6                     l1915:
  2675                           
  2676                           ;Kart_main.c: 240:     PORTB = 0;
  2677     0EF6  1283               	bcf	3,5	;RP0=0, select bank0
  2678     0EF7  1303               	bcf	3,6	;RP1=0, select bank0
  2679     0EF8  0186               	clrf	6	;volatile
  2680     0EF9                     l1917:
  2681                           
  2682                           ;Kart_main.c: 241:     PORTC = 0;
  2683     0EF9  0187               	clrf	7	;volatile
  2684     0EFA                     l1919:
  2685                           
  2686                           ;Kart_main.c: 242:     PORTD = 0;
  2687     0EFA  0188               	clrf	8	;volatile
  2688     0EFB                     l1921:
  2689                           
  2690                           ;Kart_main.c: 243:     PORTE = 0;
  2691     0EFB  0189               	clrf	9	;volatile
  2692     0EFC                     l1923:
  2693                           
  2694                           ;Kart_main.c: 249:     OSCCONbits.IRCF = 0b0111;
  2695     0EFC  3070               	movlw	112
  2696     0EFD  1683               	bsf	3,5	;RP0=1, select bank1
  2697     0EFE  1303               	bcf	3,6	;RP1=0, select bank1
  2698     0EFF  048F               	iorwf	15,f	;volatile
  2699     0F00                     l1925:
  2700                           
  2701                           ;Kart_main.c: 250:     OSCCONbits.SCS = 1;
  2702     0F00  140F               	bsf	15,0	;volatile
  2703     0F01                     l1927:
  2704                           
  2705                           ;Kart_main.c: 253:     ADCON1bits.ADFM = 0;
  2706     0F01  139F               	bcf	31,7	;volatile
  2707     0F02                     l1929:
  2708                           
  2709                           ;Kart_main.c: 254:     ADCON1bits.VCFG0 = 0;
  2710     0F02  121F               	bcf	31,4	;volatile
  2711     0F03                     l1931:
  2712                           
  2713                           ;Kart_main.c: 255:     ADCON1bits.VCFG1 = 0;
  2714     0F03  129F               	bcf	31,5	;volatile
  2715     0F04                     l1933:
  2716                           
  2717                           ;Kart_main.c: 257:     ADCON0bits.ADCS = 0b01;
  2718     0F04  1283               	bcf	3,5	;RP0=0, select bank0
  2719     0F05  1303               	bcf	3,6	;RP1=0, select bank0
  2720     0F06  081F               	movf	31,w	;volatile
  2721     0F07  393F               	andlw	-193
  2722     0F08  3840               	iorlw	64
  2723     0F09  009F               	movwf	31	;volatile
  2724     0F0A                     l1935:
  2725                           
  2726                           ;Kart_main.c: 258:     ADCON0bits.CHS = 0;
  2727     0F0A  30C3               	movlw	-61
  2728     0F0B  059F               	andwf	31,f	;volatile
  2729     0F0C                     l1937:
  2730                           
  2731                           ;Kart_main.c: 259:     ADCON0bits.ADON= 1;
  2732     0F0C  141F               	bsf	31,0	;volatile
  2733     0F0D                     l1939:
  2734                           
  2735                           ;Kart_main.c: 260:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  2736     0F0D  300F               	movlw	15
  2737     0F0E  1283               	bcf	3,5	;RP0=0, select bank0
  2738     0F0F  1303               	bcf	3,6	;RP1=0, select bank0
  2739     0F10  00B7               	movwf	??_setup
  2740     0F11                     u2697:
  2741     0F11  0BB7               	decfsz	??_setup,f
  2742     0F12  2F11               	goto	u2697
  2743     0F13  2F14               	nop2
  2744     0F14                     l1941:
  2745                           
  2746                           ;Kart_main.c: 264:     PIR1bits.ADIF = 0;
  2747     0F14  1283               	bcf	3,5	;RP0=0, select bank0
  2748     0F15  1303               	bcf	3,6	;RP1=0, select bank0
  2749     0F16  130C               	bcf	12,6	;volatile
  2750     0F17                     l1943:
  2751                           
  2752                           ;Kart_main.c: 265:     PIE1bits.ADIE = 1;
  2753     0F17  1683               	bsf	3,5	;RP0=1, select bank1
  2754     0F18  1303               	bcf	3,6	;RP1=0, select bank1
  2755     0F19  170C               	bsf	12,6	;volatile
  2756     0F1A                     l1945:
  2757                           
  2758                           ;Kart_main.c: 267:     INTCONbits.RBIE = 0;
  2759     0F1A  118B               	bcf	11,3	;volatile
  2760     0F1B                     l1947:
  2761                           
  2762                           ;Kart_main.c: 268:     INTCONbits.RBIF = 1;
  2763     0F1B  140B               	bsf	11,0	;volatile
  2764     0F1C                     l1949:
  2765                           
  2766                           ;Kart_main.c: 270:     INTCONbits.PEIE = 1;
  2767     0F1C  170B               	bsf	11,6	;volatile
  2768     0F1D                     l1951:
  2769                           
  2770                           ;Kart_main.c: 271:     INTCONbits.GIE = 1;
  2771     0F1D  178B               	bsf	11,7	;volatile
  2772     0F1E                     l168:
  2773     0F1E  0008               	return
  2774     0F1F                     __end_of_setup:
  2775                           
  2776                           	psect	text8
  2777     0E54                     __ptext8:	
  2778 ;; *************** function _preguntas *****************
  2779 ;; Defined at:
  2780 ;;		line 273 in file "Kart_main.c"
  2781 ;; Parameters:    Size  Location     Type
  2782 ;;		None
  2783 ;; Auto vars:     Size  Location     Type
  2784 ;;		None
  2785 ;; Return value:  Size  Location     Type
  2786 ;;                  1    wreg      void 
  2787 ;; Registers used:
  2788 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2789 ;; Tracked objects:
  2790 ;;		On entry : 0/0
  2791 ;;		On exit  : 0/0
  2792 ;;		Unchanged: 0/0
  2793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2794 ;;      Params:         0       0       0       0       0
  2795 ;;      Locals:         0       0       0       0       0
  2796 ;;      Temps:          0       0       0       0       0
  2797 ;;      Totals:         0       0       0       0       0
  2798 ;;Total ram usage:        0 bytes
  2799 ;; Hardware stack levels used: 1
  2800 ;; Hardware stack levels required when called: 5
  2801 ;; This function calls:
  2802 ;;		_UART_Print
  2803 ;; This function is called by:
  2804 ;;		_main
  2805 ;; This function uses a non-reentrant model
  2806 ;;
  2807                           
  2808     0E54                     _preguntas:	
  2809                           ;psect for function _preguntas
  2810                           
  2811     0E54                     l2095:	
  2812                           ;incstack = 0
  2813                           ; Regs used in _preguntas: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2814                           
  2815                           
  2816                           ;Kart_main.c: 275:     UART_Print ("1.Leer potenciometro\r\n");
  2817     0E54  301A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2818     0E55  1283               	bcf	3,5	;RP0=0, select bank0
  2819     0E56  1303               	bcf	3,6	;RP1=0, select bank0
  2820     0E57  00B8               	movwf	UART_Print@data
  2821     0E58  3080               	movlw	128
  2822     0E59  00B9               	movwf	UART_Print@data+1
  2823     0E5A  120A  158A  26B2  120A  158A  	fcall	_UART_Print
  2824                           
  2825                           ;Kart_main.c: 276:     UART_Print (message);
  2826     0E5F  300B               	movlw	(low ((_message-__stringbase)| (0+32768)))& (0+255)
  2827     0E60  1283               	bcf	3,5	;RP0=0, select bank0
  2828     0E61  1303               	bcf	3,6	;RP1=0, select bank0
  2829     0E62  00B8               	movwf	UART_Print@data
  2830     0E63  3080               	movlw	128
  2831     0E64  00B9               	movwf	UART_Print@data+1
  2832     0E65  120A  158A  26B2  120A  158A  	fcall	_UART_Print
  2833     0E6A                     l171:
  2834     0E6A  0008               	return
  2835     0E6B                     __end_of_preguntas:
  2836                           
  2837                           	psect	text9
  2838     0EB2                     __ptext9:	
  2839 ;; *************** function _UART_Print *****************
  2840 ;; Defined at:
  2841 ;;		line 65 in file "USARTmodl.c"
  2842 ;; Parameters:    Size  Location     Type
  2843 ;;  data            2   24[BANK0 ] PTR const unsigned char 
  2844 ;;		 -> STR_7(23), STR_6(3), ROM(8192), STR_5(3), 
  2845 ;;		 -> main@text(9), STR_3(3), STR_2(3), message(15), 
  2846 ;;		 -> STR_1(23), 
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;  i               1   28[BANK0 ] unsigned char 
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  1    wreg      void 
  2851 ;; Registers used:
  2852 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2858 ;;      Params:         0       2       0       0       0
  2859 ;;      Locals:         0       1       0       0       0
  2860 ;;      Temps:          0       2       0       0       0
  2861 ;;      Totals:         0       5       0       0       0
  2862 ;;Total ram usage:        5 bytes
  2863 ;; Hardware stack levels used: 1
  2864 ;; Hardware stack levels required when called: 4
  2865 ;; This function calls:
  2866 ;;		_UART_PutC
  2867 ;; This function is called by:
  2868 ;;		_main
  2869 ;;		_preguntas
  2870 ;; This function uses a non-reentrant model
  2871 ;;
  2872                           
  2873     0EB2                     _UART_Print:	
  2874                           ;psect for function _UART_Print
  2875                           
  2876     0EB2                     l1625:	
  2877                           ;incstack = 0
  2878                           ; Regs used in _UART_Print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2879                           
  2880                           
  2881                           ;USARTmodl.c: 65: void UART_Print(const char *data);USARTmodl.c: 66: {;USARTmodl.c: 67: 
      +                            uint8_t i = 0;
  2882     0EB2  1283               	bcf	3,5	;RP0=0, select bank0
  2883     0EB3  1303               	bcf	3,6	;RP1=0, select bank0
  2884     0EB4  01BC               	clrf	UART_Print@i
  2885                           
  2886                           ;USARTmodl.c: 68:   while (data[i] != '\0')
  2887     0EB5  2ED1               	goto	l1631
  2888     0EB6                     l1627:
  2889                           
  2890                           ;USARTmodl.c: 69:     UART_PutC (data[i++]);
  2891     0EB6  083C               	movf	UART_Print@i,w
  2892     0EB7  00BA               	movwf	??_UART_Print
  2893     0EB8  01BB               	clrf	??_UART_Print+1
  2894     0EB9  083A               	movf	??_UART_Print,w
  2895     0EBA  0738               	addwf	UART_Print@data,w
  2896     0EBB  0084               	movwf	4
  2897     0EBC  083B               	movf	??_UART_Print+1,w
  2898     0EBD  1803               	skipnc
  2899     0EBE  0A3B               	incf	??_UART_Print+1,w
  2900     0EBF  0739               	addwf	UART_Print@data+1,w
  2901     0EC0  00FF               	movwf	btemp+1
  2902     0EC1  120A  158A  2000  120A  158A  	fcall	stringtab
  2903     0EC6  120A  158A  2609  120A  158A  	fcall	_UART_PutC
  2904     0ECB                     l1629:
  2905     0ECB  3001               	movlw	1
  2906     0ECC  1283               	bcf	3,5	;RP0=0, select bank0
  2907     0ECD  1303               	bcf	3,6	;RP1=0, select bank0
  2908     0ECE  00BA               	movwf	??_UART_Print
  2909     0ECF  083A               	movf	??_UART_Print,w
  2910     0ED0  07BC               	addwf	UART_Print@i,f
  2911     0ED1                     l1631:
  2912                           
  2913                           ;USARTmodl.c: 68:   while (data[i] != '\0')
  2914     0ED1  083C               	movf	UART_Print@i,w
  2915     0ED2  00BA               	movwf	??_UART_Print
  2916     0ED3  01BB               	clrf	??_UART_Print+1
  2917     0ED4  083A               	movf	??_UART_Print,w
  2918     0ED5  0738               	addwf	UART_Print@data,w
  2919     0ED6  0084               	movwf	4
  2920     0ED7  083B               	movf	??_UART_Print+1,w
  2921     0ED8  1803               	skipnc
  2922     0ED9  0A3B               	incf	??_UART_Print+1,w
  2923     0EDA  0739               	addwf	UART_Print@data+1,w
  2924     0EDB  00FF               	movwf	btemp+1
  2925     0EDC  120A  158A  2000  120A  158A  	fcall	stringtab
  2926     0EE1  3A00               	xorlw	0
  2927     0EE2  1D03               	skipz
  2928     0EE3  2EE5               	goto	u1051
  2929     0EE4  2EE6               	goto	u1050
  2930     0EE5                     u1051:
  2931     0EE5  2EB6               	goto	l1627
  2932     0EE6                     u1050:
  2933     0EE6                     l261:
  2934     0EE6  0008               	return
  2935     0EE7                     __end_of_UART_Print:
  2936                           
  2937                           	psect	text10
  2938     0E09                     __ptext10:	
  2939 ;; *************** function _UART_PutC *****************
  2940 ;; Defined at:
  2941 ;;		line 59 in file "USARTmodl.c"
  2942 ;; Parameters:    Size  Location     Type
  2943 ;;  data            1    wreg     const unsigned char 
  2944 ;; Auto vars:     Size  Location     Type
  2945 ;;  data            1   23[BANK0 ] const unsigned char 
  2946 ;; Return value:  Size  Location     Type
  2947 ;;                  1    wreg      void 
  2948 ;; Registers used:
  2949 ;;		wreg
  2950 ;; Tracked objects:
  2951 ;;		On entry : 0/0
  2952 ;;		On exit  : 0/0
  2953 ;;		Unchanged: 0/0
  2954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2955 ;;      Params:         0       0       0       0       0
  2956 ;;      Locals:         0       1       0       0       0
  2957 ;;      Temps:          0       0       0       0       0
  2958 ;;      Totals:         0       1       0       0       0
  2959 ;;Total ram usage:        1 bytes
  2960 ;; Hardware stack levels used: 1
  2961 ;; Hardware stack levels required when called: 3
  2962 ;; This function calls:
  2963 ;;		Nothing
  2964 ;; This function is called by:
  2965 ;;		_main
  2966 ;;		_UART_Print
  2967 ;; This function uses a non-reentrant model
  2968 ;;
  2969                           
  2970     0E09                     _UART_PutC:	
  2971                           ;psect for function _UART_PutC
  2972                           
  2973                           
  2974                           ;incstack = 0
  2975                           ; Regs used in _UART_PutC: [wreg]
  2976                           ;UART_PutC@data stored from wreg
  2977     0E09  1283               	bcf	3,5	;RP0=0, select bank0
  2978     0E0A  1303               	bcf	3,6	;RP1=0, select bank0
  2979     0E0B  00B7               	movwf	UART_PutC@data
  2980     0E0C                     l1621:
  2981     0E0C                     l252:	
  2982                           ;USARTmodl.c: 59: void UART_PutC(const char data);USARTmodl.c: 60: {;USARTmodl.c: 61:   
      +                          while (TRMT == 0);
  2983                           
  2984     0E0C  1683               	bsf	3,5	;RP0=1, select bank1
  2985     0E0D  1303               	bcf	3,6	;RP1=0, select bank1
  2986     0E0E  1C98               	btfss	24,1	;volatile
  2987     0E0F  2E11               	goto	u1041
  2988     0E10  2E12               	goto	u1040
  2989     0E11                     u1041:
  2990     0E11  2E0C               	goto	l252
  2991     0E12                     u1040:
  2992     0E12                     l1623:
  2993                           
  2994                           ;USARTmodl.c: 62:   TXREG = data;
  2995     0E12  1283               	bcf	3,5	;RP0=0, select bank0
  2996     0E13  1303               	bcf	3,6	;RP1=0, select bank0
  2997     0E14  0837               	movf	UART_PutC@data,w
  2998     0E15  0099               	movwf	25	;volatile
  2999     0E16                     l255:
  3000     0E16  0008               	return
  3001     0E17                     __end_of_UART_PutC:
  3002                           
  3003                           	psect	text11
  3004     03FB                     __ptext11:	
  3005 ;; *************** function _UART_Init *****************
  3006 ;; Defined at:
  3007 ;;		line 14 in file "USARTmodl.c"
  3008 ;; Parameters:    Size  Location     Type
  3009 ;;  baud_rate       4    5[BANK1 ] const unsigned long 
  3010 ;; Auto vars:     Size  Location     Type
  3011 ;;  n               2   13[BANK1 ] int 
  3012 ;; Return value:  Size  Location     Type
  3013 ;;                  1    wreg      void 
  3014 ;; Registers used:
  3015 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3016 ;; Tracked objects:
  3017 ;;		On entry : 0/0
  3018 ;;		On exit  : 0/0
  3019 ;;		Unchanged: 0/0
  3020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3021 ;;      Params:         0       0       4       0       0
  3022 ;;      Locals:         0       0       2       0       0
  3023 ;;      Temps:          0       0       4       0       0
  3024 ;;      Totals:         0       0      10       0       0
  3025 ;;Total ram usage:       10 bytes
  3026 ;; Hardware stack levels used: 1
  3027 ;; Hardware stack levels required when called: 4
  3028 ;; This function calls:
  3029 ;;		___lldiv
  3030 ;; This function is called by:
  3031 ;;		_main
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           
  3035     03FB                     _UART_Init:	
  3036                           ;psect for function _UART_Init
  3037                           
  3038     03FB                     l2443:	
  3039                           ;incstack = 0
  3040                           ; Regs used in _UART_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3041                           
  3042                           
  3043                           ;USARTmodl.c: 14: void UART_Init(const uint32_t baud_rate);USARTmodl.c: 15: {;USARTmodl.
      +                          c: 16:   int16_t n = ( 8000000 / (16 * baud_rate) ) - 1;
  3044     03FB  1683               	bsf	3,5	;RP0=1, select bank1
  3045     03FC  1303               	bcf	3,6	;RP1=0, select bank1
  3046     03FD  0825               	movf	UART_Init@baud_rate^(0+128),w
  3047     03FE  00A9               	movwf	??_UART_Init^(0+128)
  3048     03FF  0826               	movf	(UART_Init@baud_rate+1)^(0+128),w
  3049     0400  00AA               	movwf	(??_UART_Init^(0+128)+1)
  3050     0401  0827               	movf	(UART_Init@baud_rate+2)^(0+128),w
  3051     0402  00AB               	movwf	(??_UART_Init^(0+128)+2)
  3052     0403  0828               	movf	(UART_Init@baud_rate+3)^(0+128),w
  3053     0404  00AC               	movwf	(??_UART_Init^(0+128)+3)
  3054     0405  3004               	movlw	4
  3055     0406                     u2445:
  3056     0406  1003               	clrc
  3057     0407  0DA9               	rlf	??_UART_Init^(0+128),f
  3058     0408  0DAA               	rlf	(??_UART_Init^(0+128)+1),f
  3059     0409  0DAB               	rlf	(??_UART_Init^(0+128)+2),f
  3060     040A  0DAC               	rlf	(??_UART_Init^(0+128)+3),f
  3061     040B                     u2440:
  3062     040B  3EFF               	addlw	-1
  3063     040C  1D03               	skipz
  3064     040D  2C06               	goto	u2445
  3065     040E  082C               	movf	(??_UART_Init+3)^(0+128),w
  3066     040F  1283               	bcf	3,5	;RP0=0, select bank0
  3067     0410  1303               	bcf	3,6	;RP1=0, select bank0
  3068     0411  00BA               	movwf	___lldiv@divisor+3
  3069     0412  1683               	bsf	3,5	;RP0=1, select bank1
  3070     0413  1303               	bcf	3,6	;RP1=0, select bank1
  3071     0414  082B               	movf	(??_UART_Init+2)^(0+128),w
  3072     0415  1283               	bcf	3,5	;RP0=0, select bank0
  3073     0416  1303               	bcf	3,6	;RP1=0, select bank0
  3074     0417  00B9               	movwf	___lldiv@divisor+2
  3075     0418  1683               	bsf	3,5	;RP0=1, select bank1
  3076     0419  1303               	bcf	3,6	;RP1=0, select bank1
  3077     041A  082A               	movf	(??_UART_Init+1)^(0+128),w
  3078     041B  1283               	bcf	3,5	;RP0=0, select bank0
  3079     041C  1303               	bcf	3,6	;RP1=0, select bank0
  3080     041D  00B8               	movwf	___lldiv@divisor+1
  3081     041E  1683               	bsf	3,5	;RP0=1, select bank1
  3082     041F  1303               	bcf	3,6	;RP1=0, select bank1
  3083     0420  0829               	movf	??_UART_Init^(0+128),w
  3084     0421  1283               	bcf	3,5	;RP0=0, select bank0
  3085     0422  1303               	bcf	3,6	;RP1=0, select bank0
  3086     0423  00B7               	movwf	___lldiv@divisor
  3087     0424  3000               	movlw	0
  3088     0425  00BE               	movwf	___lldiv@dividend+3
  3089     0426  307A               	movlw	122
  3090     0427  00BD               	movwf	___lldiv@dividend+2
  3091     0428  3012               	movlw	18
  3092     0429  00BC               	movwf	___lldiv@dividend+1
  3093     042A  3000               	movlw	0
  3094     042B  00BB               	movwf	___lldiv@dividend
  3095     042C  120A  118A  2734  120A  118A  	fcall	___lldiv
  3096     0431  1283               	bcf	3,5	;RP0=0, select bank0
  3097     0432  1303               	bcf	3,6	;RP1=0, select bank0
  3098     0433  0837               	movf	?___lldiv,w
  3099     0434  3EFF               	addlw	255
  3100     0435  1683               	bsf	3,5	;RP0=1, select bank1
  3101     0436  1303               	bcf	3,6	;RP1=0, select bank1
  3102     0437  00AD               	movwf	UART_Init@n^(0+128)
  3103     0438  1283               	bcf	3,5	;RP0=0, select bank0
  3104     0439  1303               	bcf	3,6	;RP1=0, select bank0
  3105     043A  0838               	movf	?___lldiv+1,w
  3106     043B  1803               	skipnc
  3107     043C  3E01               	addlw	1
  3108     043D  3EFF               	addlw	255
  3109     043E  1683               	bsf	3,5	;RP0=1, select bank1
  3110     043F  1303               	bcf	3,6	;RP1=0, select bank1
  3111     0440  00AE               	movwf	(UART_Init@n+1)^(0+128)
  3112     0441                     l2445:
  3113                           
  3114                           ;USARTmodl.c: 18:   if (n < 0)
  3115     0441  1FAE               	btfss	(UART_Init@n+1)^(0+128),7
  3116     0442  2C44               	goto	u2451
  3117     0443  2C45               	goto	u2450
  3118     0444                     u2451:
  3119     0444  2C47               	goto	l2449
  3120     0445                     u2450:
  3121     0445                     l2447:
  3122                           
  3123                           ;USARTmodl.c: 19:     n = 0;
  3124     0445  01AD               	clrf	UART_Init@n^(0+128)
  3125     0446  01AE               	clrf	(UART_Init@n+1)^(0+128)
  3126     0447                     l2449:
  3127                           
  3128                           ;USARTmodl.c: 21:   if (n > 255)
  3129     0447  082E               	movf	(UART_Init@n+1)^(0+128),w
  3130     0448  3A80               	xorlw	128
  3131     0449  00FF               	movwf	btemp+1
  3132     044A  3081               	movlw	129
  3133     044B  027F               	subwf	btemp+1,w
  3134     044C  1D03               	skipz
  3135     044D  2C50               	goto	u2465
  3136     044E  3000               	movlw	0
  3137     044F  022D               	subwf	UART_Init@n^(0+128),w
  3138     0450                     u2465:
  3139     0450  1C03               	skipc
  3140     0451  2C53               	goto	u2461
  3141     0452  2C54               	goto	u2460
  3142     0453                     u2461:
  3143     0453  2CB4               	goto	l2457
  3144     0454                     u2460:
  3145     0454                     l2451:
  3146                           
  3147                           ;USARTmodl.c: 22:   {;USARTmodl.c: 23:     n = ( 8000000 / (64 * baud_rate) ) - 1;
  3148     0454  1683               	bsf	3,5	;RP0=1, select bank1
  3149     0455  1303               	bcf	3,6	;RP1=0, select bank1
  3150     0456  0825               	movf	UART_Init@baud_rate^(0+128),w
  3151     0457  00A9               	movwf	??_UART_Init^(0+128)
  3152     0458  0826               	movf	(UART_Init@baud_rate+1)^(0+128),w
  3153     0459  00AA               	movwf	(??_UART_Init^(0+128)+1)
  3154     045A  0827               	movf	(UART_Init@baud_rate+2)^(0+128),w
  3155     045B  00AB               	movwf	(??_UART_Init^(0+128)+2)
  3156     045C  0828               	movf	(UART_Init@baud_rate+3)^(0+128),w
  3157     045D  00AC               	movwf	(??_UART_Init^(0+128)+3)
  3158     045E  3006               	movlw	6
  3159     045F                     u2475:
  3160     045F  1003               	clrc
  3161     0460  0DA9               	rlf	??_UART_Init^(0+128),f
  3162     0461  0DAA               	rlf	(??_UART_Init^(0+128)+1),f
  3163     0462  0DAB               	rlf	(??_UART_Init^(0+128)+2),f
  3164     0463  0DAC               	rlf	(??_UART_Init^(0+128)+3),f
  3165     0464                     u2470:
  3166     0464  3EFF               	addlw	-1
  3167     0465  1D03               	skipz
  3168     0466  2C5F               	goto	u2475
  3169     0467  082C               	movf	(??_UART_Init+3)^(0+128),w
  3170     0468  1283               	bcf	3,5	;RP0=0, select bank0
  3171     0469  1303               	bcf	3,6	;RP1=0, select bank0
  3172     046A  00BA               	movwf	___lldiv@divisor+3
  3173     046B  1683               	bsf	3,5	;RP0=1, select bank1
  3174     046C  1303               	bcf	3,6	;RP1=0, select bank1
  3175     046D  082B               	movf	(??_UART_Init+2)^(0+128),w
  3176     046E  1283               	bcf	3,5	;RP0=0, select bank0
  3177     046F  1303               	bcf	3,6	;RP1=0, select bank0
  3178     0470  00B9               	movwf	___lldiv@divisor+2
  3179     0471  1683               	bsf	3,5	;RP0=1, select bank1
  3180     0472  1303               	bcf	3,6	;RP1=0, select bank1
  3181     0473  082A               	movf	(??_UART_Init+1)^(0+128),w
  3182     0474  1283               	bcf	3,5	;RP0=0, select bank0
  3183     0475  1303               	bcf	3,6	;RP1=0, select bank0
  3184     0476  00B8               	movwf	___lldiv@divisor+1
  3185     0477  1683               	bsf	3,5	;RP0=1, select bank1
  3186     0478  1303               	bcf	3,6	;RP1=0, select bank1
  3187     0479  0829               	movf	??_UART_Init^(0+128),w
  3188     047A  1283               	bcf	3,5	;RP0=0, select bank0
  3189     047B  1303               	bcf	3,6	;RP1=0, select bank0
  3190     047C  00B7               	movwf	___lldiv@divisor
  3191     047D  3000               	movlw	0
  3192     047E  00BE               	movwf	___lldiv@dividend+3
  3193     047F  307A               	movlw	122
  3194     0480  00BD               	movwf	___lldiv@dividend+2
  3195     0481  3012               	movlw	18
  3196     0482  00BC               	movwf	___lldiv@dividend+1
  3197     0483  3000               	movlw	0
  3198     0484  00BB               	movwf	___lldiv@dividend
  3199     0485  120A  118A  2734  120A  118A  	fcall	___lldiv
  3200     048A  1283               	bcf	3,5	;RP0=0, select bank0
  3201     048B  1303               	bcf	3,6	;RP1=0, select bank0
  3202     048C  0837               	movf	?___lldiv,w
  3203     048D  3EFF               	addlw	255
  3204     048E  1683               	bsf	3,5	;RP0=1, select bank1
  3205     048F  1303               	bcf	3,6	;RP1=0, select bank1
  3206     0490  00AD               	movwf	UART_Init@n^(0+128)
  3207     0491  1283               	bcf	3,5	;RP0=0, select bank0
  3208     0492  1303               	bcf	3,6	;RP1=0, select bank0
  3209     0493  0838               	movf	?___lldiv+1,w
  3210     0494  1803               	skipnc
  3211     0495  3E01               	addlw	1
  3212     0496  3EFF               	addlw	255
  3213     0497  1683               	bsf	3,5	;RP0=1, select bank1
  3214     0498  1303               	bcf	3,6	;RP1=0, select bank1
  3215     0499  00AE               	movwf	(UART_Init@n+1)^(0+128)
  3216     049A                     l2453:
  3217                           
  3218                           ;USARTmodl.c: 24:     if (n > 255)
  3219     049A  082E               	movf	(UART_Init@n+1)^(0+128),w
  3220     049B  3A80               	xorlw	128
  3221     049C  00FF               	movwf	btemp+1
  3222     049D  3081               	movlw	129
  3223     049E  027F               	subwf	btemp+1,w
  3224     049F  1D03               	skipz
  3225     04A0  2CA3               	goto	u2485
  3226     04A1  3000               	movlw	0
  3227     04A2  022D               	subwf	UART_Init@n^(0+128),w
  3228     04A3                     u2485:
  3229     04A3  1C03               	skipc
  3230     04A4  2CA6               	goto	u2481
  3231     04A5  2CA7               	goto	u2480
  3232     04A6                     u2481:
  3233     04A6  2CAD               	goto	l233
  3234     04A7                     u2480:
  3235     04A7                     l2455:
  3236                           
  3237                           ;USARTmodl.c: 25:       n = 255;
  3238     04A7  30FF               	movlw	255
  3239     04A8  1683               	bsf	3,5	;RP0=1, select bank1
  3240     04A9  1303               	bcf	3,6	;RP1=0, select bank1
  3241     04AA  00AD               	movwf	UART_Init@n^(0+128)
  3242     04AB  3000               	movlw	0
  3243     04AC  00AE               	movwf	(UART_Init@n^(0+128)+1)
  3244     04AD                     l233:
  3245                           
  3246                           ;USARTmodl.c: 26:     SPBRG = n;
  3247     04AD  1683               	bsf	3,5	;RP0=1, select bank1
  3248     04AE  1303               	bcf	3,6	;RP1=0, select bank1
  3249     04AF  082D               	movf	UART_Init@n^(0+128),w
  3250     04B0  0099               	movwf	25	;volatile
  3251                           
  3252                           ;USARTmodl.c: 27:     TXSTA = 0x20;
  3253     04B1  3020               	movlw	32
  3254     04B2  0098               	movwf	24	;volatile
  3255                           
  3256                           ;USARTmodl.c: 28:   }
  3257     04B3  2CBA               	goto	l234
  3258     04B4                     l2457:
  3259                           
  3260                           ;USARTmodl.c: 31:   {;USARTmodl.c: 32:     SPBRG = n;
  3261     04B4  1683               	bsf	3,5	;RP0=1, select bank1
  3262     04B5  1303               	bcf	3,6	;RP1=0, select bank1
  3263     04B6  082D               	movf	UART_Init@n^(0+128),w
  3264     04B7  0099               	movwf	25	;volatile
  3265                           
  3266                           ;USARTmodl.c: 33:     TXSTA = 0x24;
  3267     04B8  3024               	movlw	36
  3268     04B9  0098               	movwf	24	;volatile
  3269     04BA                     l234:	
  3270                           ;USARTmodl.c: 34:   }
  3271                           
  3272                           
  3273                           ;USARTmodl.c: 36:   RCSTA = 0x90;
  3274     04BA  3090               	movlw	144
  3275     04BB  1283               	bcf	3,5	;RP0=0, select bank0
  3276     04BC  1303               	bcf	3,6	;RP1=0, select bank0
  3277     04BD  0098               	movwf	24	;volatile
  3278     04BE                     l235:
  3279     04BE  0008               	return
  3280     04BF                     __end_of_UART_Init:
  3281                           
  3282                           	psect	text12
  3283     0734                     __ptext12:	
  3284 ;; *************** function ___lldiv *****************
  3285 ;; Defined at:
  3286 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  3287 ;; Parameters:    Size  Location     Type
  3288 ;;  divisor         4   23[BANK0 ] unsigned long 
  3289 ;;  dividend        4   27[BANK0 ] unsigned long 
  3290 ;; Auto vars:     Size  Location     Type
  3291 ;;  quotient        4    0[BANK1 ] unsigned long 
  3292 ;;  counter         1    4[BANK1 ] unsigned char 
  3293 ;; Return value:  Size  Location     Type
  3294 ;;                  4   23[BANK0 ] unsigned long 
  3295 ;; Registers used:
  3296 ;;		wreg, status,2, status,0
  3297 ;; Tracked objects:
  3298 ;;		On entry : 0/0
  3299 ;;		On exit  : 0/0
  3300 ;;		Unchanged: 0/0
  3301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3302 ;;      Params:         0       8       0       0       0
  3303 ;;      Locals:         0       0       5       0       0
  3304 ;;      Temps:          0       1       0       0       0
  3305 ;;      Totals:         0       9       5       0       0
  3306 ;;Total ram usage:       14 bytes
  3307 ;; Hardware stack levels used: 1
  3308 ;; Hardware stack levels required when called: 3
  3309 ;; This function calls:
  3310 ;;		Nothing
  3311 ;; This function is called by:
  3312 ;;		_UART_Init
  3313 ;; This function uses a non-reentrant model
  3314 ;;
  3315                           
  3316     0734                     ___lldiv:	
  3317                           ;psect for function ___lldiv
  3318                           
  3319     0734                     l2309:	
  3320                           ;incstack = 0
  3321                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3322                           
  3323     0734  3000               	movlw	0
  3324     0735  1683               	bsf	3,5	;RP0=1, select bank1
  3325     0736  1303               	bcf	3,6	;RP1=0, select bank1
  3326     0737  00A3               	movwf	(___lldiv@quotient+3)^(0+128)
  3327     0738  3000               	movlw	0
  3328     0739  00A2               	movwf	(___lldiv@quotient+2)^(0+128)
  3329     073A  3000               	movlw	0
  3330     073B  00A1               	movwf	(___lldiv@quotient+1)^(0+128)
  3331     073C  3000               	movlw	0
  3332     073D  00A0               	movwf	___lldiv@quotient^(0+128)
  3333     073E  1283               	bcf	3,5	;RP0=0, select bank0
  3334     073F  1303               	bcf	3,6	;RP1=0, select bank0
  3335     0740  083A               	movf	___lldiv@divisor+3,w
  3336     0741  0439               	iorwf	___lldiv@divisor+2,w
  3337     0742  0438               	iorwf	___lldiv@divisor+1,w
  3338     0743  0437               	iorwf	___lldiv@divisor,w
  3339     0744  1903               	skipnz
  3340     0745  2F47               	goto	u2131
  3341     0746  2F48               	goto	u2130
  3342     0747                     u2131:
  3343     0747  2FA5               	goto	l2329
  3344     0748                     u2130:
  3345     0748                     l2311:
  3346     0748  1683               	bsf	3,5	;RP0=1, select bank1
  3347     0749  1303               	bcf	3,6	;RP1=0, select bank1
  3348     074A  01A4               	clrf	___lldiv@counter^(0+128)
  3349     074B  0AA4               	incf	___lldiv@counter^(0+128),f
  3350     074C  2F5C               	goto	l2315
  3351     074D                     l2313:
  3352     074D  3001               	movlw	1
  3353     074E  00BF               	movwf	??___lldiv
  3354     074F                     u2145:
  3355     074F  1003               	clrc
  3356     0750  0DB7               	rlf	___lldiv@divisor,f
  3357     0751  0DB8               	rlf	___lldiv@divisor+1,f
  3358     0752  0DB9               	rlf	___lldiv@divisor+2,f
  3359     0753  0DBA               	rlf	___lldiv@divisor+3,f
  3360     0754  0BBF               	decfsz	??___lldiv,f
  3361     0755  2F4F               	goto	u2145
  3362     0756  3001               	movlw	1
  3363     0757  00BF               	movwf	??___lldiv
  3364     0758  083F               	movf	??___lldiv,w
  3365     0759  1683               	bsf	3,5	;RP0=1, select bank1
  3366     075A  1303               	bcf	3,6	;RP1=0, select bank1
  3367     075B  07A4               	addwf	___lldiv@counter^(0+128),f
  3368     075C                     l2315:
  3369     075C  1283               	bcf	3,5	;RP0=0, select bank0
  3370     075D  1303               	bcf	3,6	;RP1=0, select bank0
  3371     075E  1FBA               	btfss	___lldiv@divisor+3,7
  3372     075F  2F61               	goto	u2151
  3373     0760  2F62               	goto	u2150
  3374     0761                     u2151:
  3375     0761  2F4D               	goto	l2313
  3376     0762                     u2150:
  3377     0762                     l2317:
  3378     0762  3001               	movlw	1
  3379     0763  1283               	bcf	3,5	;RP0=0, select bank0
  3380     0764  00BF               	movwf	??___lldiv
  3381     0765                     u2165:
  3382     0765  1003               	clrc
  3383     0766  1683               	bsf	3,5	;RP0=1, select bank1
  3384     0767  1303               	bcf	3,6	;RP1=0, select bank1
  3385     0768  0DA0               	rlf	___lldiv@quotient^(0+128),f
  3386     0769  0DA1               	rlf	(___lldiv@quotient+1)^(0+128),f
  3387     076A  0DA2               	rlf	(___lldiv@quotient+2)^(0+128),f
  3388     076B  0DA3               	rlf	(___lldiv@quotient+3)^(0+128),f
  3389     076C  1283               	bcf	3,5	;RP0=0, select bank0
  3390     076D  1303               	bcf	3,6	;RP1=0, select bank0
  3391     076E  0BBF               	decfsz	??___lldiv,f
  3392     076F  2F65               	goto	u2165
  3393     0770                     l2319:
  3394     0770  083A               	movf	___lldiv@divisor+3,w
  3395     0771  023E               	subwf	___lldiv@dividend+3,w
  3396     0772  1D03               	skipz
  3397     0773  2F7E               	goto	u2175
  3398     0774  0839               	movf	___lldiv@divisor+2,w
  3399     0775  023D               	subwf	___lldiv@dividend+2,w
  3400     0776  1D03               	skipz
  3401     0777  2F7E               	goto	u2175
  3402     0778  0838               	movf	___lldiv@divisor+1,w
  3403     0779  023C               	subwf	___lldiv@dividend+1,w
  3404     077A  1D03               	skipz
  3405     077B  2F7E               	goto	u2175
  3406     077C  0837               	movf	___lldiv@divisor,w
  3407     077D  023B               	subwf	___lldiv@dividend,w
  3408     077E                     u2175:
  3409     077E  1C03               	skipc
  3410     077F  2F81               	goto	u2171
  3411     0780  2F82               	goto	u2170
  3412     0781                     u2171:
  3413     0781  2F93               	goto	l2325
  3414     0782                     u2170:
  3415     0782                     l2321:
  3416     0782  0837               	movf	___lldiv@divisor,w
  3417     0783  02BB               	subwf	___lldiv@dividend,f
  3418     0784  0838               	movf	___lldiv@divisor+1,w
  3419     0785  1C03               	skipc
  3420     0786  0F38               	incfsz	___lldiv@divisor+1,w
  3421     0787  02BC               	subwf	___lldiv@dividend+1,f
  3422     0788  0839               	movf	___lldiv@divisor+2,w
  3423     0789  1C03               	skipc
  3424     078A  0F39               	incfsz	___lldiv@divisor+2,w
  3425     078B  02BD               	subwf	___lldiv@dividend+2,f
  3426     078C  083A               	movf	___lldiv@divisor+3,w
  3427     078D  1C03               	skipc
  3428     078E  0F3A               	incfsz	___lldiv@divisor+3,w
  3429     078F  02BE               	subwf	___lldiv@dividend+3,f
  3430     0790                     l2323:
  3431     0790  1683               	bsf	3,5	;RP0=1, select bank1
  3432     0791  1303               	bcf	3,6	;RP1=0, select bank1
  3433     0792  1420               	bsf	___lldiv@quotient^(0+128),0
  3434     0793                     l2325:
  3435     0793  3001               	movlw	1
  3436     0794                     u2185:
  3437     0794  1003               	clrc
  3438     0795  1283               	bcf	3,5	;RP0=0, select bank0
  3439     0796  0CBA               	rrf	___lldiv@divisor+3,f
  3440     0797  0CB9               	rrf	___lldiv@divisor+2,f
  3441     0798  0CB8               	rrf	___lldiv@divisor+1,f
  3442     0799  0CB7               	rrf	___lldiv@divisor,f
  3443     079A  3EFF               	addlw	-1
  3444     079B  1D03               	skipz
  3445     079C  2F94               	goto	u2185
  3446     079D                     l2327:
  3447     079D  3001               	movlw	1
  3448     079E  1683               	bsf	3,5	;RP0=1, select bank1
  3449     079F  1303               	bcf	3,6	;RP1=0, select bank1
  3450     07A0  02A4               	subwf	___lldiv@counter^(0+128),f
  3451     07A1  1D03               	btfss	3,2
  3452     07A2  2FA4               	goto	u2191
  3453     07A3  2FA5               	goto	u2190
  3454     07A4                     u2191:
  3455     07A4  2F62               	goto	l2317
  3456     07A5                     u2190:
  3457     07A5                     l2329:
  3458     07A5  1683               	bsf	3,5	;RP0=1, select bank1
  3459     07A6  1303               	bcf	3,6	;RP1=0, select bank1
  3460     07A7  0823               	movf	(___lldiv@quotient+3)^(0+128),w
  3461     07A8  1283               	bcf	3,5	;RP0=0, select bank0
  3462     07A9  1303               	bcf	3,6	;RP1=0, select bank0
  3463     07AA  00BA               	movwf	?___lldiv+3
  3464     07AB  1683               	bsf	3,5	;RP0=1, select bank1
  3465     07AC  1303               	bcf	3,6	;RP1=0, select bank1
  3466     07AD  0822               	movf	(___lldiv@quotient+2)^(0+128),w
  3467     07AE  1283               	bcf	3,5	;RP0=0, select bank0
  3468     07AF  1303               	bcf	3,6	;RP1=0, select bank0
  3469     07B0  00B9               	movwf	?___lldiv+2
  3470     07B1  1683               	bsf	3,5	;RP0=1, select bank1
  3471     07B2  1303               	bcf	3,6	;RP1=0, select bank1
  3472     07B3  0821               	movf	(___lldiv@quotient+1)^(0+128),w
  3473     07B4  1283               	bcf	3,5	;RP0=0, select bank0
  3474     07B5  1303               	bcf	3,6	;RP1=0, select bank0
  3475     07B6  00B8               	movwf	?___lldiv+1
  3476     07B7  1683               	bsf	3,5	;RP0=1, select bank1
  3477     07B8  1303               	bcf	3,6	;RP1=0, select bank1
  3478     07B9  0820               	movf	___lldiv@quotient^(0+128),w
  3479     07BA  1283               	bcf	3,5	;RP0=0, select bank0
  3480     07BB  1303               	bcf	3,6	;RP1=0, select bank0
  3481     07BC  00B7               	movwf	?___lldiv
  3482     07BD                     l452:
  3483     07BD  0008               	return
  3484     07BE                     __end_of___lldiv:
  3485                           
  3486                           	psect	text13
  3487     0DFB                     __ptext13:	
  3488 ;; *************** function _UART_GetC *****************
  3489 ;; Defined at:
  3490 ;;		line 46 in file "USARTmodl.c"
  3491 ;; Parameters:    Size  Location     Type
  3492 ;;		None
  3493 ;; Auto vars:     Size  Location     Type
  3494 ;;		None
  3495 ;; Return value:  Size  Location     Type
  3496 ;;                  1    wreg      unsigned char 
  3497 ;; Registers used:
  3498 ;;		wreg
  3499 ;; Tracked objects:
  3500 ;;		On entry : 0/0
  3501 ;;		On exit  : 0/0
  3502 ;;		Unchanged: 0/0
  3503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3504 ;;      Params:         0       0       0       0       0
  3505 ;;      Locals:         0       0       0       0       0
  3506 ;;      Temps:          0       0       0       0       0
  3507 ;;      Totals:         0       0       0       0       0
  3508 ;;Total ram usage:        0 bytes
  3509 ;; Hardware stack levels used: 1
  3510 ;; Hardware stack levels required when called: 3
  3511 ;; This function calls:
  3512 ;;		Nothing
  3513 ;; This function is called by:
  3514 ;;		_main
  3515 ;; This function uses a non-reentrant model
  3516 ;;
  3517                           
  3518     0DFB                     _UART_GetC:	
  3519                           ;psect for function _UART_GetC
  3520                           
  3521     0DFB                     l2105:	
  3522                           ;incstack = 0
  3523                           ; Regs used in _UART_GetC: [wreg]
  3524                           
  3525     0DFB                     l245:	
  3526                           ;USARTmodl.c: 48:   while (RCIF == 0) ;
  3527                           
  3528     0DFB  1283               	bcf	3,5	;RP0=0, select bank0
  3529     0DFC  1303               	bcf	3,6	;RP1=0, select bank0
  3530     0DFD  1E8C               	btfss	12,5	;volatile
  3531     0DFE  2E00               	goto	u1931
  3532     0DFF  2E01               	goto	u1930
  3533     0E00                     u1931:
  3534     0E00  2DFB               	goto	l245
  3535     0E01                     u1930:
  3536     0E01                     l247:
  3537                           
  3538                           ;USARTmodl.c: 49:   if (OERR)
  3539     0E01  1C98               	btfss	24,1	;volatile
  3540     0E02  2E04               	goto	u1941
  3541     0E03  2E05               	goto	u1940
  3542     0E04                     u1941:
  3543     0E04  2E07               	goto	l2109
  3544     0E05                     u1940:
  3545     0E05                     l2107:
  3546                           
  3547                           ;USARTmodl.c: 50:   {;USARTmodl.c: 51:     CREN = 0;
  3548     0E05  1218               	bcf	24,4	;volatile
  3549                           
  3550                           ;USARTmodl.c: 52:     CREN = 1;
  3551     0E06  1618               	bsf	24,4	;volatile
  3552     0E07                     l2109:
  3553                           
  3554                           ;USARTmodl.c: 54:   return RCREG;
  3555     0E07  081A               	movf	26,w	;volatile
  3556     0E08                     l249:
  3557     0E08  0008               	return
  3558     0E09                     __end_of_UART_GetC:
  3559                           
  3560                           	psect	text14
  3561     0DE4                     __ptext14:	
  3562 ;; *************** function _UART_Data_Ready *****************
  3563 ;; Defined at:
  3564 ;;		line 41 in file "USARTmodl.c"
  3565 ;; Parameters:    Size  Location     Type
  3566 ;;		None
  3567 ;; Auto vars:     Size  Location     Type
  3568 ;;		None
  3569 ;; Return value:  Size  Location     Type
  3570 ;;		None               void
  3571 ;; Registers used:
  3572 ;;		status,2, status,0
  3573 ;; Tracked objects:
  3574 ;;		On entry : 0/0
  3575 ;;		On exit  : 0/0
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3578 ;;      Params:         0       0       0       0       0
  3579 ;;      Locals:         0       0       0       0       0
  3580 ;;      Temps:          0       0       0       0       0
  3581 ;;      Totals:         0       0       0       0       0
  3582 ;;Total ram usage:        0 bytes
  3583 ;; Hardware stack levels used: 1
  3584 ;; Hardware stack levels required when called: 3
  3585 ;; This function calls:
  3586 ;;		Nothing
  3587 ;; This function is called by:
  3588 ;;		_main
  3589 ;; This function uses a non-reentrant model
  3590 ;;
  3591                           
  3592     0DE4                     _UART_Data_Ready:	
  3593                           ;psect for function _UART_Data_Ready
  3594                           
  3595     0DE4                     l2097:	
  3596                           ;incstack = 0
  3597                           ; Regs used in _UART_Data_Ready: [status]
  3598                           
  3599                           
  3600                           ;USARTmodl.c: 43:   return RCIF;
  3601     0DE4  1283               	bcf	3,5	;RP0=0, select bank0
  3602     0DE5  1303               	bcf	3,6	;RP1=0, select bank0
  3603     0DE6  1A8C               	btfsc	12,5	;volatile
  3604     0DE7  2DE9               	goto	u1921
  3605     0DE8  2DEA               	goto	u1920
  3606     0DE9                     u1921:
  3607     0DE9  2DEC               	goto	l2101
  3608     0DEA                     u1920:
  3609     0DEA                     l2099:
  3610     0DEA  1003               	clrc
  3611     0DEB  2DED               	goto	l242
  3612     0DEC                     l2101:
  3613     0DEC  1403               	setc
  3614     0DED                     l242:
  3615     0DED  0008               	return
  3616     0DEE                     __end_of_UART_Data_Ready:
  3617                           
  3618                           	psect	text15
  3619     0DDA                     __ptext15:	
  3620 ;; *************** function _PWmanual_init *****************
  3621 ;; Defined at:
  3622 ;;		line 12 in file "PWmanual.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;  portsl          1    wreg     unsigned char 
  3625 ;;  numport         2   23[BANK0 ] int 
  3626 ;; Auto vars:     Size  Location     Type
  3627 ;;  portsl          1    0[COMMON] unsigned char 
  3628 ;; Return value:  Size  Location     Type
  3629 ;;                  1    wreg      void 
  3630 ;; Registers used:
  3631 ;;		wreg, status,0
  3632 ;; Tracked objects:
  3633 ;;		On entry : 0/0
  3634 ;;		On exit  : 0/0
  3635 ;;		Unchanged: 0/0
  3636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3637 ;;      Params:         0       2       0       0       0
  3638 ;;      Locals:         0       0       0       0       0
  3639 ;;      Temps:          0       0       0       0       0
  3640 ;;      Totals:         0       2       0       0       0
  3641 ;;Total ram usage:        2 bytes
  3642 ;; Hardware stack levels used: 1
  3643 ;; Hardware stack levels required when called: 3
  3644 ;; This function calls:
  3645 ;;		Nothing
  3646 ;; This function is called by:
  3647 ;;		_main
  3648 ;; This function uses a non-reentrant model
  3649 ;;
  3650                           
  3651     0DDA                     _PWmanual_init:	
  3652                           ;psect for function _PWmanual_init
  3653                           
  3654     0DDA                     l1995:	
  3655                           ;incstack = 0
  3656                           ; Regs used in _PWmanual_init: [wreg+status,0]
  3657                           
  3658                           
  3659                           ;PWmanual.c: 14:     TRISCbits.TRISC3 = numport;
  3660     0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  3661     0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  3662     0DDC  0C37               	rrf	PWmanual_init@numport,w
  3663     0DDD  1683               	bsf	3,5	;RP0=1, select bank1
  3664     0DDE  1303               	bcf	3,6	;RP1=0, select bank1
  3665     0DDF  1C03               	skipc
  3666     0DE0  1187               	bcf	7,3	;volatile
  3667     0DE1  1803               	skipnc
  3668     0DE2  1587               	bsf	7,3	;volatile
  3669     0DE3                     l276:
  3670     0DE3  0008               	return
  3671     0DE4                     __end_of_PWmanual_init:
  3672                           
  3673                           	psect	text16
  3674     0F65                     __ptext16:	
  3675 ;; *************** function _PWM_init *****************
  3676 ;; Defined at:
  3677 ;;		line 11 in file "PWM.c"
  3678 ;; Parameters:    Size  Location     Type
  3679 ;;  chn1            2    2[BANK1 ] int 
  3680 ;;  chn2            2    4[BANK1 ] int 
  3681 ;;  periodo_ms      4    6[BANK1 ] float 
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;		None
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  1    wreg      void 
  3686 ;; Registers used:
  3687 ;;		wreg, status,2, status,0, pclath, cstack
  3688 ;; Tracked objects:
  3689 ;;		On entry : 0/0
  3690 ;;		On exit  : 0/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3693 ;;      Params:         0       0       8       0       0
  3694 ;;      Locals:         0       0       0       0       0
  3695 ;;      Temps:          0       0       0       0       0
  3696 ;;      Totals:         0       0       8       0       0
  3697 ;;Total ram usage:        8 bytes
  3698 ;; Hardware stack levels used: 1
  3699 ;; Hardware stack levels required when called: 4
  3700 ;; This function calls:
  3701 ;;		___fltol
  3702 ;; This function is called by:
  3703 ;;		_main
  3704 ;; This function uses a non-reentrant model
  3705 ;;
  3706                           
  3707     0F65                     _PWM_init:	
  3708                           ;psect for function _PWM_init
  3709                           
  3710     0F65                     l2417:	
  3711                           ;incstack = 0
  3712                           ; Regs used in _PWM_init: [wreg+status,2+status,0+pclath+cstack]
  3713                           
  3714                           
  3715                           ;PWM.c: 13:     TRISCbits.TRISC1 = chn2;
  3716     0F65  1683               	bsf	3,5	;RP0=1, select bank1
  3717     0F66  1303               	bcf	3,6	;RP1=0, select bank1
  3718     0F67  0C24               	rrf	PWM_init@chn2^(0+128),w
  3719     0F68  1C03               	skipc
  3720     0F69  1087               	bcf	7,1	;volatile
  3721     0F6A  1803               	skipnc
  3722     0F6B  1487               	bsf	7,1	;volatile
  3723                           
  3724                           ;PWM.c: 14:     TRISCbits.TRISC2 = chn1;
  3725     0F6C  0C22               	rrf	PWM_init@chn1^(0+128),w
  3726     0F6D  1C03               	skipc
  3727     0F6E  1107               	bcf	7,2	;volatile
  3728     0F6F  1803               	skipnc
  3729     0F70  1507               	bsf	7,2	;volatile
  3730     0F71                     l2419:
  3731                           
  3732                           ;PWM.c: 16:     PR2 = periodo_ms;
  3733     0F71  0829               	movf	(PWM_init@periodo_ms+3)^(0+128),w
  3734     0F72  1283               	bcf	3,5	;RP0=0, select bank0
  3735     0F73  1303               	bcf	3,6	;RP1=0, select bank0
  3736     0F74  00BA               	movwf	___fltol@f1+3
  3737     0F75  1683               	bsf	3,5	;RP0=1, select bank1
  3738     0F76  1303               	bcf	3,6	;RP1=0, select bank1
  3739     0F77  0828               	movf	(PWM_init@periodo_ms+2)^(0+128),w
  3740     0F78  1283               	bcf	3,5	;RP0=0, select bank0
  3741     0F79  1303               	bcf	3,6	;RP1=0, select bank0
  3742     0F7A  00B9               	movwf	___fltol@f1+2
  3743     0F7B  1683               	bsf	3,5	;RP0=1, select bank1
  3744     0F7C  1303               	bcf	3,6	;RP1=0, select bank1
  3745     0F7D  0827               	movf	(PWM_init@periodo_ms+1)^(0+128),w
  3746     0F7E  1283               	bcf	3,5	;RP0=0, select bank0
  3747     0F7F  1303               	bcf	3,6	;RP1=0, select bank0
  3748     0F80  00B8               	movwf	___fltol@f1+1
  3749     0F81  1683               	bsf	3,5	;RP0=1, select bank1
  3750     0F82  1303               	bcf	3,6	;RP1=0, select bank1
  3751     0F83  0826               	movf	PWM_init@periodo_ms^(0+128),w
  3752     0F84  1283               	bcf	3,5	;RP0=0, select bank0
  3753     0F85  1303               	bcf	3,6	;RP1=0, select bank0
  3754     0F86  00B7               	movwf	___fltol@f1
  3755     0F87  120A  118A  261B  120A  158A  	fcall	___fltol
  3756     0F8C  1283               	bcf	3,5	;RP0=0, select bank0
  3757     0F8D  1303               	bcf	3,6	;RP1=0, select bank0
  3758     0F8E  0837               	movf	?___fltol,w
  3759     0F8F  1683               	bsf	3,5	;RP0=1, select bank1
  3760     0F90  1303               	bcf	3,6	;RP1=0, select bank1
  3761     0F91  0092               	movwf	18	;volatile
  3762     0F92                     l2421:
  3763                           
  3764                           ;PWM.c: 17:     CCP1CONbits.P1M =0;
  3765     0F92  303F               	movlw	-193
  3766     0F93  1283               	bcf	3,5	;RP0=0, select bank0
  3767     0F94  1303               	bcf	3,6	;RP1=0, select bank0
  3768     0F95  0597               	andwf	23,f	;volatile
  3769     0F96                     l2423:
  3770                           
  3771                           ;PWM.c: 18:     CCP1CONbits.CCP1M =0b1100;
  3772     0F96  0817               	movf	23,w	;volatile
  3773     0F97  39F0               	andlw	-16
  3774     0F98  380C               	iorlw	12
  3775     0F99  0097               	movwf	23	;volatile
  3776     0F9A                     l2425:
  3777                           
  3778                           ;PWM.c: 20:     CCPR1L = 0x0f;
  3779     0F9A  300F               	movlw	15
  3780     0F9B  0095               	movwf	21	;volatile
  3781     0F9C                     l2427:
  3782                           
  3783                           ;PWM.c: 21:     CCP1CONbits.DC1B= 0;
  3784     0F9C  30CF               	movlw	-49
  3785     0F9D  0597               	andwf	23,f	;volatile
  3786     0F9E                     l2429:
  3787                           
  3788                           ;PWM.c: 23:     PIR1bits.TMR2IF =0;
  3789     0F9E  108C               	bcf	12,1	;volatile
  3790     0F9F                     l2431:
  3791                           
  3792                           ;PWM.c: 24:     T2CONbits.T2CKPS = 0b11;
  3793     0F9F  3003               	movlw	3
  3794     0FA0  0492               	iorwf	18,f	;volatile
  3795     0FA1                     l2433:
  3796                           
  3797                           ;PWM.c: 25:     T2CONbits.TMR2ON = 1;
  3798     0FA1  1512               	bsf	18,2	;volatile
  3799     0FA2                     l2435:
  3800                           
  3801                           ;PWM.c: 28:     CCP2CONbits.CCP2M = 0b1100;
  3802     0FA2  081D               	movf	29,w	;volatile
  3803     0FA3  39F0               	andlw	-16
  3804     0FA4  380C               	iorlw	12
  3805     0FA5  009D               	movwf	29	;volatile
  3806     0FA6                     l2437:
  3807                           
  3808                           ;PWM.c: 29:     CCPR2L = 0x0f;
  3809     0FA6  300F               	movlw	15
  3810     0FA7  009B               	movwf	27	;volatile
  3811     0FA8                     l2439:
  3812                           
  3813                           ;PWM.c: 30:     CCP2CONbits.DC2B0 = 0;
  3814     0FA8  121D               	bcf	29,4	;volatile
  3815     0FA9                     l2441:
  3816                           
  3817                           ;PWM.c: 31:     CCP2CONbits.DC2B1 = 0;
  3818     0FA9  129D               	bcf	29,5	;volatile
  3819     0FAA                     l200:	
  3820                           ;PWM.c: 34:     while (PIR1bits.TMR2IF == 0);
  3821                           
  3822     0FAA  1C8C               	btfss	12,1	;volatile
  3823     0FAB  2FAD               	goto	u2431
  3824     0FAC  2FAE               	goto	u2430
  3825     0FAD                     u2431:
  3826     0FAD  2FAA               	goto	l200
  3827     0FAE                     u2430:
  3828     0FAE                     l202:
  3829                           
  3830                           ;PWM.c: 35:     PIR1bits.TMR2IF = 0;
  3831     0FAE  108C               	bcf	12,1	;volatile
  3832     0FAF                     l203:
  3833     0FAF  0008               	return
  3834     0FB0                     __end_of_PWM_init:
  3835                           
  3836                           	psect	text17
  3837     061B                     __ptext17:	
  3838 ;; *************** function ___fltol *****************
  3839 ;; Defined at:
  3840 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  3841 ;; Parameters:    Size  Location     Type
  3842 ;;  f1              4   23[BANK0 ] void 
  3843 ;; Auto vars:     Size  Location     Type
  3844 ;;  exp1            1    1[BANK1 ] unsigned char 
  3845 ;;  sign1           1    0[BANK1 ] unsigned char 
  3846 ;; Return value:  Size  Location     Type
  3847 ;;                  4   23[BANK0 ] long 
  3848 ;; Registers used:
  3849 ;;		wreg, status,2, status,0
  3850 ;; Tracked objects:
  3851 ;;		On entry : 0/0
  3852 ;;		On exit  : 0/0
  3853 ;;		Unchanged: 0/0
  3854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3855 ;;      Params:         0       4       0       0       0
  3856 ;;      Locals:         0       0       2       0       0
  3857 ;;      Temps:          0       4       0       0       0
  3858 ;;      Totals:         0       8       2       0       0
  3859 ;;Total ram usage:       10 bytes
  3860 ;; Hardware stack levels used: 1
  3861 ;; Hardware stack levels required when called: 3
  3862 ;; This function calls:
  3863 ;;		Nothing
  3864 ;; This function is called by:
  3865 ;;		_PWM_init
  3866 ;; This function uses a non-reentrant model
  3867 ;;
  3868                           
  3869     061B                     ___fltol:	
  3870                           ;psect for function ___fltol
  3871                           
  3872     061B                     l2333:	
  3873                           ;incstack = 0
  3874                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3875                           
  3876     061B  1003               	clrc
  3877     061C  1283               	bcf	3,5	;RP0=0, select bank0
  3878     061D  1303               	bcf	3,6	;RP1=0, select bank0
  3879     061E  0D39               	rlf	___fltol@f1+2,w
  3880     061F  0D3A               	rlf	___fltol@f1+3,w
  3881     0620  1683               	bsf	3,5	;RP0=1, select bank1
  3882     0621  1303               	bcf	3,6	;RP1=0, select bank1
  3883     0622  00A1               	movwf	___fltol@exp1^(0+128)
  3884     0623  0821               	movf	___fltol@exp1^(0+128),w
  3885     0624  1D03               	btfss	3,2
  3886     0625  2E27               	goto	u2201
  3887     0626  2E28               	goto	u2200
  3888     0627                     u2201:
  3889     0627  2E33               	goto	l2339
  3890     0628                     u2200:
  3891     0628                     l2335:
  3892     0628  3000               	movlw	0
  3893     0629  1283               	bcf	3,5	;RP0=0, select bank0
  3894     062A  1303               	bcf	3,6	;RP1=0, select bank0
  3895     062B  00BA               	movwf	?___fltol+3
  3896     062C  3000               	movlw	0
  3897     062D  00B9               	movwf	?___fltol+2
  3898     062E  3000               	movlw	0
  3899     062F  00B8               	movwf	?___fltol+1
  3900     0630  3000               	movlw	0
  3901     0631  00B7               	movwf	?___fltol
  3902     0632  2EA8               	goto	l602
  3903     0633                     l2339:
  3904     0633  1283               	bcf	3,5	;RP0=0, select bank0
  3905     0634  1303               	bcf	3,6	;RP1=0, select bank0
  3906     0635  0837               	movf	___fltol@f1,w
  3907     0636  00BB               	movwf	??___fltol
  3908     0637  0838               	movf	___fltol@f1+1,w
  3909     0638  00BC               	movwf	??___fltol+1
  3910     0639  0839               	movf	___fltol@f1+2,w
  3911     063A  00BD               	movwf	??___fltol+2
  3912     063B  083A               	movf	___fltol@f1+3,w
  3913     063C  00BE               	movwf	??___fltol+3
  3914     063D  301F               	movlw	31
  3915     063E                     u2215:
  3916     063E  1003               	clrc
  3917     063F  0CBE               	rrf	??___fltol+3,f
  3918     0640  0CBD               	rrf	??___fltol+2,f
  3919     0641  0CBC               	rrf	??___fltol+1,f
  3920     0642  0CBB               	rrf	??___fltol,f
  3921     0643                     u2210:
  3922     0643  3EFF               	addlw	-1
  3923     0644  1D03               	skipz
  3924     0645  2E3E               	goto	u2215
  3925     0646  083B               	movf	??___fltol,w
  3926     0647  1683               	bsf	3,5	;RP0=1, select bank1
  3927     0648  1303               	bcf	3,6	;RP1=0, select bank1
  3928     0649  00A0               	movwf	___fltol@sign1^(0+128)
  3929     064A                     l2341:
  3930     064A  1283               	bcf	3,5	;RP0=0, select bank0
  3931     064B  1303               	bcf	3,6	;RP1=0, select bank0
  3932     064C  17B9               	bsf	___fltol@f1+2,7
  3933     064D                     l2343:
  3934     064D  30FF               	movlw	255
  3935     064E  05B7               	andwf	___fltol@f1,f
  3936     064F  30FF               	movlw	255
  3937     0650  05B8               	andwf	___fltol@f1+1,f
  3938     0651  30FF               	movlw	255
  3939     0652  05B9               	andwf	___fltol@f1+2,f
  3940     0653  3000               	movlw	0
  3941     0654  05BA               	andwf	___fltol@f1+3,f
  3942     0655                     l2345:
  3943     0655  3096               	movlw	150
  3944     0656  1683               	bsf	3,5	;RP0=1, select bank1
  3945     0657  1303               	bcf	3,6	;RP1=0, select bank1
  3946     0658  02A1               	subwf	___fltol@exp1^(0+128),f
  3947     0659                     l2347:
  3948     0659  1FA1               	btfss	___fltol@exp1^(0+128),7
  3949     065A  2E5C               	goto	u2221
  3950     065B  2E5D               	goto	u2220
  3951     065C                     u2221:
  3952     065C  2E7B               	goto	l2357
  3953     065D                     u2220:
  3954     065D                     l2349:
  3955     065D  0821               	movf	___fltol@exp1^(0+128),w
  3956     065E  3A80               	xorlw	128
  3957     065F  3E97               	addlw	151
  3958     0660  1803               	skipnc
  3959     0661  2E63               	goto	u2231
  3960     0662  2E64               	goto	u2230
  3961     0663                     u2231:
  3962     0663  2E65               	goto	l2355
  3963     0664                     u2230:
  3964     0664  2E28               	goto	l2335
  3965     0665                     l2355:
  3966     0665  3001               	movlw	1
  3967     0666                     u2245:
  3968     0666  1003               	clrc
  3969     0667  1283               	bcf	3,5	;RP0=0, select bank0
  3970     0668  1303               	bcf	3,6	;RP1=0, select bank0
  3971     0669  0CBA               	rrf	___fltol@f1+3,f
  3972     066A  0CB9               	rrf	___fltol@f1+2,f
  3973     066B  0CB8               	rrf	___fltol@f1+1,f
  3974     066C  0CB7               	rrf	___fltol@f1,f
  3975     066D  3EFF               	addlw	-1
  3976     066E  1D03               	skipz
  3977     066F  2E66               	goto	u2245
  3978     0670  3001               	movlw	1
  3979     0671  00BB               	movwf	??___fltol
  3980     0672  083B               	movf	??___fltol,w
  3981     0673  1683               	bsf	3,5	;RP0=1, select bank1
  3982     0674  1303               	bcf	3,6	;RP1=0, select bank1
  3983     0675  07A1               	addwf	___fltol@exp1^(0+128),f
  3984     0676  1D03               	btfss	3,2
  3985     0677  2E79               	goto	u2251
  3986     0678  2E7A               	goto	u2250
  3987     0679                     u2251:
  3988     0679  2E65               	goto	l2355
  3989     067A                     u2250:
  3990     067A  2E96               	goto	l2365
  3991     067B                     l2357:
  3992     067B  3020               	movlw	32
  3993     067C  0221               	subwf	___fltol@exp1^(0+128),w
  3994     067D  1C03               	skipc
  3995     067E  2E80               	goto	u2261
  3996     067F  2E81               	goto	u2260
  3997     0680                     u2261:
  3998     0680  2E91               	goto	l609
  3999     0681                     u2260:
  4000     0681  2E28               	goto	l2335
  4001     0682                     l2363:
  4002     0682  3001               	movlw	1
  4003     0683  1283               	bcf	3,5	;RP0=0, select bank0
  4004     0684  1303               	bcf	3,6	;RP1=0, select bank0
  4005     0685  00BB               	movwf	??___fltol
  4006     0686                     u2275:
  4007     0686  1003               	clrc
  4008     0687  0DB7               	rlf	___fltol@f1,f
  4009     0688  0DB8               	rlf	___fltol@f1+1,f
  4010     0689  0DB9               	rlf	___fltol@f1+2,f
  4011     068A  0DBA               	rlf	___fltol@f1+3,f
  4012     068B  0BBB               	decfsz	??___fltol,f
  4013     068C  2E86               	goto	u2275
  4014     068D  3001               	movlw	1
  4015     068E  1683               	bsf	3,5	;RP0=1, select bank1
  4016     068F  1303               	bcf	3,6	;RP1=0, select bank1
  4017     0690  02A1               	subwf	___fltol@exp1^(0+128),f
  4018     0691                     l609:
  4019     0691  0821               	movf	___fltol@exp1^(0+128),w
  4020     0692  1D03               	btfss	3,2
  4021     0693  2E95               	goto	u2281
  4022     0694  2E96               	goto	u2280
  4023     0695                     u2281:
  4024     0695  2E82               	goto	l2363
  4025     0696                     u2280:
  4026     0696                     l2365:
  4027     0696  0820               	movf	___fltol@sign1^(0+128),w
  4028     0697  1903               	btfsc	3,2
  4029     0698  2E9A               	goto	u2291
  4030     0699  2E9B               	goto	u2290
  4031     069A                     u2291:
  4032     069A  2EA8               	goto	l612
  4033     069B                     u2290:
  4034     069B                     l2367:
  4035     069B  1283               	bcf	3,5	;RP0=0, select bank0
  4036     069C  1303               	bcf	3,6	;RP1=0, select bank0
  4037     069D  09B7               	comf	___fltol@f1,f
  4038     069E  09B8               	comf	___fltol@f1+1,f
  4039     069F  09B9               	comf	___fltol@f1+2,f
  4040     06A0  09BA               	comf	___fltol@f1+3,f
  4041     06A1  0AB7               	incf	___fltol@f1,f
  4042     06A2  1903               	skipnz
  4043     06A3  0AB8               	incf	___fltol@f1+1,f
  4044     06A4  1903               	skipnz
  4045     06A5  0AB9               	incf	___fltol@f1+2,f
  4046     06A6  1903               	skipnz
  4047     06A7  0ABA               	incf	___fltol@f1+3,f
  4048     06A8                     l612:
  4049     06A8                     l602:
  4050     06A8  0008               	return
  4051     06A9                     __end_of___fltol:
  4052                           
  4053                           	psect	text18
  4054     0324                     __ptext18:	
  4055 ;; *************** function _isr *****************
  4056 ;; Defined at:
  4057 ;;		line 86 in file "Kart_main.c"
  4058 ;; Parameters:    Size  Location     Type
  4059 ;;		None
  4060 ;; Auto vars:     Size  Location     Type
  4061 ;;		None
  4062 ;; Return value:  Size  Location     Type
  4063 ;;                  1    wreg      void 
  4064 ;; Registers used:
  4065 ;;		wreg, status,2, status,0, pclath, cstack
  4066 ;; Tracked objects:
  4067 ;;		On entry : 0/0
  4068 ;;		On exit  : 0/0
  4069 ;;		Unchanged: 0/0
  4070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4071 ;;      Params:         0       0       0       0       0
  4072 ;;      Locals:         0       0       0       0       0
  4073 ;;      Temps:          0       6       0       0       0
  4074 ;;      Totals:         0       6       0       0       0
  4075 ;;Total ram usage:        6 bytes
  4076 ;; Hardware stack levels used: 1
  4077 ;; Hardware stack levels required when called: 2
  4078 ;; This function calls:
  4079 ;;		_PWM_duty
  4080 ;;		_PWmanual_func
  4081 ;;		___xxtofl
  4082 ;;		_readEEPROM
  4083 ;;		_writeEEPROM
  4084 ;; This function is called by:
  4085 ;;		Interrupt level 1
  4086 ;; This function uses a non-reentrant model
  4087 ;;
  4088                           
  4089     0324                     _isr:	
  4090                           ;psect for function _isr
  4091                           
  4092     0324                     i1l2113:
  4093                           
  4094                           ;Kart_main.c: 88:    if(PIR1bits.ADIF){
  4095     0324  1F0C               	btfss	12,6	;volatile
  4096     0325  2B27               	goto	u195_21
  4097     0326  2B28               	goto	u195_20
  4098     0327                     u195_21:
  4099     0327  2BB9               	goto	i1l2131
  4100     0328                     u195_20:
  4101     0328                     i1l2115:
  4102                           
  4103                           ;Kart_main.c: 90:        if (ADCON0bits.CHS ==1){
  4104     0328  0C1F               	rrf	31,w	;volatile
  4105     0329  00B1               	movwf	??_isr
  4106     032A  0C31               	rrf	??_isr,w
  4107     032B  390F               	andlw	15
  4108     032C  3A01               	xorlw	1
  4109     032D  1D03               	skipz
  4110     032E  2B30               	goto	u196_21
  4111     032F  2B31               	goto	u196_20
  4112     0330                     u196_21:
  4113     0330  2B57               	goto	i1l2119
  4114     0331                     u196_20:
  4115     0331                     i1l2117:
  4116                           
  4117                           ;Kart_main.c: 91:              PWM_duty(0,ADRESH);
  4118     0331  3000               	movlw	0
  4119     0332  00A0               	movwf	PWM_duty@chn
  4120     0333  00A1               	movwf	PWM_duty@chn+1
  4121     0334  081E               	movf	30,w	;volatile
  4122     0335  00B1               	movwf	??_isr
  4123     0336  01B2               	clrf	??_isr+1
  4124     0337  01B3               	clrf	??_isr+2
  4125     0338  01B4               	clrf	??_isr+3
  4126     0339  0834               	movf	??_isr+3,w
  4127     033A  00F3               	movwf	___xxtofl@val+3
  4128     033B  0833               	movf	??_isr+2,w
  4129     033C  00F2               	movwf	___xxtofl@val+2
  4130     033D  0832               	movf	??_isr+1,w
  4131     033E  00F1               	movwf	___xxtofl@val+1
  4132     033F  0831               	movf	??_isr,w
  4133     0340  00F0               	movwf	___xxtofl@val
  4134     0341  3000               	movlw	0
  4135     0342  120A  118A  24BF  120A  118A  	fcall	___xxtofl
  4136     0347  0873               	movf	?___xxtofl+3,w
  4137     0348  1283               	bcf	3,5	;RP0=0, select bank0
  4138     0349  1303               	bcf	3,6	;RP1=0, select bank0
  4139     034A  00A5               	movwf	PWM_duty@duty+3
  4140     034B  0872               	movf	?___xxtofl+2,w
  4141     034C  00A4               	movwf	PWM_duty@duty+2
  4142     034D  0871               	movf	?___xxtofl+1,w
  4143     034E  00A3               	movwf	PWM_duty@duty+1
  4144     034F  0870               	movf	?___xxtofl,w
  4145     0350  00A2               	movwf	PWM_duty@duty
  4146     0351  120A  158A  263E  120A  118A  	fcall	_PWM_duty
  4147                           
  4148                           ;Kart_main.c: 94:         }
  4149     0356  2BB6               	goto	i1l2129
  4150     0357                     i1l2119:
  4151     0357  0C1F               	rrf	31,w	;volatile
  4152     0358  00B1               	movwf	??_isr
  4153     0359  0C31               	rrf	??_isr,w
  4154     035A  390F               	andlw	15
  4155     035B  3A00               	xorlw	0
  4156     035C  1D03               	skipz
  4157     035D  2B5F               	goto	u197_21
  4158     035E  2B60               	goto	u197_20
  4159     035F                     u197_21:
  4160     035F  2B90               	goto	i1l2125
  4161     0360                     u197_20:
  4162     0360                     i1l2121:
  4163                           
  4164                           ;Kart_main.c: 96:             PWM_duty(1 ,ADRESH);
  4165     0360  3001               	movlw	1
  4166     0361  00A0               	movwf	PWM_duty@chn
  4167     0362  3000               	movlw	0
  4168     0363  00A1               	movwf	PWM_duty@chn+1
  4169     0364  081E               	movf	30,w	;volatile
  4170     0365  00B1               	movwf	??_isr
  4171     0366  01B2               	clrf	??_isr+1
  4172     0367  01B3               	clrf	??_isr+2
  4173     0368  01B4               	clrf	??_isr+3
  4174     0369  0834               	movf	??_isr+3,w
  4175     036A  00F3               	movwf	___xxtofl@val+3
  4176     036B  0833               	movf	??_isr+2,w
  4177     036C  00F2               	movwf	___xxtofl@val+2
  4178     036D  0832               	movf	??_isr+1,w
  4179     036E  00F1               	movwf	___xxtofl@val+1
  4180     036F  0831               	movf	??_isr,w
  4181     0370  00F0               	movwf	___xxtofl@val
  4182     0371  3000               	movlw	0
  4183     0372  120A  118A  24BF  120A  118A  	fcall	___xxtofl
  4184     0377  0873               	movf	?___xxtofl+3,w
  4185     0378  1283               	bcf	3,5	;RP0=0, select bank0
  4186     0379  1303               	bcf	3,6	;RP1=0, select bank0
  4187     037A  00A5               	movwf	PWM_duty@duty+3
  4188     037B  0872               	movf	?___xxtofl+2,w
  4189     037C  00A4               	movwf	PWM_duty@duty+2
  4190     037D  0871               	movf	?___xxtofl+1,w
  4191     037E  00A3               	movwf	PWM_duty@duty+1
  4192     037F  0870               	movf	?___xxtofl,w
  4193     0380  00A2               	movwf	PWM_duty@duty
  4194     0381  120A  158A  263E  120A  118A  	fcall	_PWM_duty
  4195     0386                     i1l2123:
  4196                           
  4197                           ;Kart_main.c: 97:              valpot = ADRESH;
  4198     0386  1283               	bcf	3,5	;RP0=0, select bank0
  4199     0387  1303               	bcf	3,6	;RP1=0, select bank0
  4200     0388  081E               	movf	30,w	;volatile
  4201     0389  00B1               	movwf	??_isr
  4202     038A  01B2               	clrf	??_isr+1
  4203     038B  0831               	movf	??_isr,w
  4204     038C  00CC               	movwf	_valpot
  4205     038D  0832               	movf	??_isr+1,w
  4206     038E  00CD               	movwf	_valpot+1
  4207                           
  4208                           ;Kart_main.c: 98:         }
  4209     038F  2BB6               	goto	i1l2129
  4210     0390                     i1l2125:
  4211     0390  0C1F               	rrf	31,w	;volatile
  4212     0391  00B1               	movwf	??_isr
  4213     0392  0C31               	rrf	??_isr,w
  4214     0393  390F               	andlw	15
  4215     0394  3A02               	xorlw	2
  4216     0395  1D03               	skipz
  4217     0396  2B98               	goto	u198_21
  4218     0397  2B99               	goto	u198_20
  4219     0398                     u198_21:
  4220     0398  2BB6               	goto	i1l2129
  4221     0399                     u198_20:
  4222     0399                     i1l2127:
  4223                           
  4224                           ;Kart_main.c: 100:             val = ADRESH;
  4225     0399  081E               	movf	30,w	;volatile
  4226     039A  00B1               	movwf	??_isr
  4227     039B  01B2               	clrf	??_isr+1
  4228     039C  01B3               	clrf	??_isr+2
  4229     039D  01B4               	clrf	??_isr+3
  4230     039E  0834               	movf	??_isr+3,w
  4231     039F  00F3               	movwf	___xxtofl@val+3
  4232     03A0  0833               	movf	??_isr+2,w
  4233     03A1  00F2               	movwf	___xxtofl@val+2
  4234     03A2  0832               	movf	??_isr+1,w
  4235     03A3  00F1               	movwf	___xxtofl@val+1
  4236     03A4  0831               	movf	??_isr,w
  4237     03A5  00F0               	movwf	___xxtofl@val
  4238     03A6  3000               	movlw	0
  4239     03A7  120A  118A  24BF  120A  118A  	fcall	___xxtofl
  4240     03AC  0873               	movf	?___xxtofl+3,w
  4241     03AD  1283               	bcf	3,5	;RP0=0, select bank0
  4242     03AE  1303               	bcf	3,6	;RP1=0, select bank0
  4243     03AF  00C3               	movwf	_val+3
  4244     03B0  0872               	movf	?___xxtofl+2,w
  4245     03B1  00C2               	movwf	_val+2
  4246     03B2  0871               	movf	?___xxtofl+1,w
  4247     03B3  00C1               	movwf	_val+1
  4248     03B4  0870               	movf	?___xxtofl,w
  4249     03B5  00C0               	movwf	_val
  4250     03B6                     i1l2129:
  4251                           
  4252                           ;Kart_main.c: 101:             PIR1bits.ADIF =0;
  4253     03B6  1283               	bcf	3,5	;RP0=0, select bank0
  4254     03B7  1303               	bcf	3,6	;RP1=0, select bank0
  4255     03B8  130C               	bcf	12,6	;volatile
  4256     03B9                     i1l2131:
  4257                           
  4258                           ;Kart_main.c: 104:    if (INTCONbits.RBIF ){
  4259     03B9  1C0B               	btfss	11,0	;volatile
  4260     03BA  2BBC               	goto	u199_21
  4261     03BB  2BBD               	goto	u199_20
  4262     03BC                     u199_21:
  4263     03BC  2BE5               	goto	i1l2149
  4264     03BD                     u199_20:
  4265     03BD                     i1l2133:
  4266                           
  4267                           ;Kart_main.c: 113:         if (!PORTBbits.RB0){
  4268     03BD  1806               	btfsc	6,0	;volatile
  4269     03BE  2BC0               	goto	u200_21
  4270     03BF  2BC1               	goto	u200_20
  4271     03C0                     u200_21:
  4272     03C0  2BC9               	goto	i1l2139
  4273     03C1                     u200_20:
  4274     03C1                     i1l136:
  4275     03C1  1C06               	btfss	6,0	;volatile
  4276     03C2  2BC4               	goto	u201_21
  4277     03C3  2BC5               	goto	u201_20
  4278     03C4                     u201_21:
  4279     03C4  2BC1               	goto	i1l136
  4280     03C5                     u201_20:
  4281     03C5                     i1l2137:
  4282                           
  4283                           ;Kart_main.c: 115:                 PORTE ++;
  4284     03C5  3001               	movlw	1
  4285     03C6  00B1               	movwf	??_isr
  4286     03C7  0831               	movf	??_isr,w
  4287     03C8  0789               	addwf	9,f	;volatile
  4288     03C9                     i1l2139:
  4289                           
  4290                           ;Kart_main.c: 120:     if (!PORTBbits.RB1){
  4291     03C9  1886               	btfsc	6,1	;volatile
  4292     03CA  2BCC               	goto	u202_21
  4293     03CB  2BCD               	goto	u202_20
  4294     03CC                     u202_21:
  4295     03CC  2BE5               	goto	i1l2149
  4296     03CD                     u202_20:
  4297     03CD  2BE1               	goto	i1l2147
  4298     03CE                     i1l2143:
  4299                           
  4300                           ;Kart_main.c: 123:                 writeEEPROM(valadr, valpot);
  4301     03CE  084C               	movf	_valpot,w
  4302     03CF  00F0               	movwf	writeEEPROM@dataEE
  4303     03D0  084E               	movf	_valadr,w
  4304     03D1  120A  158A  266B  120A  118A  	fcall	_writeEEPROM
  4305     03D6                     i1l2145:
  4306                           
  4307                           ;Kart_main.c: 124:                 PORTD = readEEPROM(valadr);
  4308     03D6  1283               	bcf	3,5	;RP0=0, select bank0
  4309     03D7  1303               	bcf	3,6	;RP1=0, select bank0
  4310     03D8  084E               	movf	_valadr,w
  4311     03D9  120A  158A  25EE  120A  118A  	fcall	_readEEPROM
  4312     03DE  1283               	bcf	3,5	;RP0=0, select bank0
  4313     03DF  1303               	bcf	3,6	;RP1=0, select bank0
  4314     03E0  0088               	movwf	8	;volatile
  4315     03E1                     i1l2147:
  4316                           
  4317                           ;Kart_main.c: 121:             while (!RB1){
  4318     03E1  1C86               	btfss	6,1	;volatile
  4319     03E2  2BE4               	goto	u203_21
  4320     03E3  2BE5               	goto	u203_20
  4321     03E4                     u203_21:
  4322     03E4  2BCE               	goto	i1l2143
  4323     03E5                     u203_20:
  4324     03E5                     i1l2149:
  4325                           
  4326                           ;Kart_main.c: 130:    PWmanual_func (val);
  4327     03E5  0843               	movf	_val+3,w
  4328     03E6  00AF               	movwf	PWmanual_func@valad+3
  4329     03E7  0842               	movf	_val+2,w
  4330     03E8  00AE               	movwf	PWmanual_func@valad+2
  4331     03E9  0841               	movf	_val+1,w
  4332     03EA  00AD               	movwf	PWmanual_func@valad+1
  4333     03EB  0840               	movf	_val,w
  4334     03EC  00AC               	movwf	PWmanual_func@valad
  4335     03ED  120A  118A  26A9  120A  118A  	fcall	_PWmanual_func
  4336     03F2                     i1l143:
  4337     03F2  1283               	bcf	3,5	;RP0=0, select bank0
  4338     03F3  1303               	bcf	3,6	;RP1=0, select bank0
  4339     03F4  0836               	movf	??_isr+5,w
  4340     03F5  008A               	movwf	10
  4341     03F6  0E35               	swapf	??_isr+4,w
  4342     03F7  0083               	movwf	3
  4343     03F8  0EFE               	swapf	btemp,f
  4344     03F9  0E7E               	swapf	btemp,w
  4345     03FA  0009               	retfie
  4346     03FB                     __end_of_isr:
  4347                           
  4348                           	psect	intentry
  4349     0004                     __pintentry:	
  4350                           ;incstack = 0
  4351                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  4352                           
  4353     0004                     interrupt_function:
  4354     007E                     saved_w	set	btemp
  4355     0004  00FE               	movwf	btemp
  4356     0005  0E03               	swapf	3,w
  4357     0006  1283               	bcf	3,5	;RP0=0, select bank0
  4358     0007  1303               	bcf	3,6	;RP1=0, select bank0
  4359     0008  00B5               	movwf	??_isr+4
  4360     0009  080A               	movf	10,w
  4361     000A  00B6               	movwf	??_isr+5
  4362     000B  120A  118A  2B24   	ljmp	_isr
  4363                           
  4364                           	psect	text19
  4365     0E6B                     __ptext19:	
  4366 ;; *************** function _writeEEPROM *****************
  4367 ;; Defined at:
  4368 ;;		line 61 in file "Kart_main.c"
  4369 ;; Parameters:    Size  Location     Type
  4370 ;;  address         1    wreg     unsigned char 
  4371 ;;  dataEE          1    0[COMMON] unsigned char 
  4372 ;; Auto vars:     Size  Location     Type
  4373 ;;  address         1    1[COMMON] unsigned char 
  4374 ;;  INTCON_SAVE     1    2[COMMON] unsigned char 
  4375 ;; Return value:  Size  Location     Type
  4376 ;;                  1    wreg      void 
  4377 ;; Registers used:
  4378 ;;		wreg, status,2
  4379 ;; Tracked objects:
  4380 ;;		On entry : 0/0
  4381 ;;		On exit  : 0/0
  4382 ;;		Unchanged: 0/0
  4383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4384 ;;      Params:         1       0       0       0       0
  4385 ;;      Locals:         2       0       0       0       0
  4386 ;;      Temps:          0       0       0       0       0
  4387 ;;      Totals:         3       0       0       0       0
  4388 ;;Total ram usage:        3 bytes
  4389 ;; Hardware stack levels used: 1
  4390 ;; This function calls:
  4391 ;;		Nothing
  4392 ;; This function is called by:
  4393 ;;		_isr
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397     0E6B                     _writeEEPROM:	
  4398                           ;psect for function _writeEEPROM
  4399                           
  4400                           
  4401                           ;incstack = 0
  4402                           ; Regs used in _writeEEPROM: [wreg+status,2]
  4403                           ;writeEEPROM@address stored from wreg
  4404     0E6B  00F1               	movwf	writeEEPROM@address
  4405     0E6C                     i1l1851:
  4406                           
  4407                           ;Kart_main.c: 61: void writeEEPROM(unsigned char address, unsigned char dataEE);Kart_mai
      +                          n.c: 62: {;Kart_main.c: 63:   unsigned char INTCON_SAVE;;Kart_main.c: 64:   EEADR = addr
      +                          ess;
  4408     0E6C  0871               	movf	writeEEPROM@address,w
  4409     0E6D  1283               	bcf	3,5	;RP0=0, select bank2
  4410     0E6E  1703               	bsf	3,6	;RP1=1, select bank2
  4411     0E6F  008D               	movwf	13	;volatile
  4412                           
  4413                           ;Kart_main.c: 65:   EEDATA = dataEE;
  4414     0E70  0870               	movf	writeEEPROM@dataEE,w
  4415     0E71  008C               	movwf	12	;volatile
  4416     0E72                     i1l1853:
  4417                           
  4418                           ;Kart_main.c: 66:   EECON1bits.EEPGD = 0;
  4419     0E72  1683               	bsf	3,5	;RP0=1, select bank3
  4420     0E73  1703               	bsf	3,6	;RP1=1, select bank3
  4421     0E74  138C               	bcf	12,7	;volsfr
  4422     0E75                     i1l1855:
  4423                           
  4424                           ;Kart_main.c: 67:   EECON1bits.WREN = 1;
  4425     0E75  150C               	bsf	12,2	;volsfr
  4426                           
  4427                           ;Kart_main.c: 68:   INTCON_SAVE=INTCON;
  4428     0E76  080B               	movf	11,w	;volatile
  4429     0E77  00F2               	movwf	writeEEPROM@INTCON_SAVE
  4430     0E78                     i1l1857:
  4431                           
  4432                           ;Kart_main.c: 69:   INTCON=0;
  4433     0E78  018B               	clrf	11	;volatile
  4434     0E79                     i1l1859:
  4435                           
  4436                           ;Kart_main.c: 70:   EECON2=0x55;
  4437     0E79  3055               	movlw	85
  4438     0E7A  008D               	movwf	13	;volsfr
  4439     0E7B                     i1l1861:
  4440                           
  4441                           ;Kart_main.c: 71:   EECON2=0xAA;
  4442     0E7B  30AA               	movlw	170
  4443     0E7C  008D               	movwf	13	;volsfr
  4444     0E7D                     i1l1863:
  4445                           
  4446                           ;Kart_main.c: 72:   EECON1bits.WR = 1;
  4447     0E7D  148C               	bsf	12,1	;volsfr
  4448     0E7E                     i1l1865:
  4449                           
  4450                           ;Kart_main.c: 73:   INTCON = INTCON_SAVE;
  4451     0E7E  0872               	movf	writeEEPROM@INTCON_SAVE,w
  4452     0E7F  008B               	movwf	11	;volatile
  4453     0E80                     i1l1867:
  4454                           
  4455                           ;Kart_main.c: 74:   EECON1bits.WREN = 0;
  4456     0E80  110C               	bcf	12,2	;volsfr
  4457                           
  4458                           ;Kart_main.c: 75:   while(PIR2bits.EEIF == 0)
  4459     0E81  2E83               	goto	i1l120
  4460     0E82                     i1l121:
  4461                           
  4462                           ;Kart_main.c: 76:   {;Kart_main.c: 77:     __nop();
  4463     0E82  0000               	nop
  4464     0E83                     i1l120:	
  4465                           ;Kart_main.c: 78:   }
  4466                           
  4467                           
  4468                           ;Kart_main.c: 75:   while(PIR2bits.EEIF == 0)
  4469     0E83  1283               	bcf	3,5	;RP0=0, select bank0
  4470     0E84  1303               	bcf	3,6	;RP1=0, select bank0
  4471     0E85  1E0D               	btfss	13,4	;volatile
  4472     0E86  2E88               	goto	u166_21
  4473     0E87  2E89               	goto	u166_20
  4474     0E88                     u166_21:
  4475     0E88  2E82               	goto	i1l121
  4476     0E89                     u166_20:
  4477     0E89                     i1l122:
  4478                           
  4479                           ;Kart_main.c: 79:   PIR2bits.EEIF = 0;
  4480     0E89  120D               	bcf	13,4	;volatile
  4481     0E8A                     i1l123:
  4482     0E8A  0008               	return
  4483     0E8B                     __end_of_writeEEPROM:
  4484                           
  4485                           	psect	text20
  4486     0DEE                     __ptext20:	
  4487 ;; *************** function _readEEPROM *****************
  4488 ;; Defined at:
  4489 ;;		line 52 in file "Kart_main.c"
  4490 ;; Parameters:    Size  Location     Type
  4491 ;;  address         1    wreg     unsigned char 
  4492 ;; Auto vars:     Size  Location     Type
  4493 ;;  address         1    0[COMMON] unsigned char 
  4494 ;; Return value:  Size  Location     Type
  4495 ;;                  1    wreg      unsigned char 
  4496 ;; Registers used:
  4497 ;;		wreg
  4498 ;; Tracked objects:
  4499 ;;		On entry : 0/0
  4500 ;;		On exit  : 0/0
  4501 ;;		Unchanged: 0/0
  4502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4503 ;;      Params:         0       0       0       0       0
  4504 ;;      Locals:         1       0       0       0       0
  4505 ;;      Temps:          0       0       0       0       0
  4506 ;;      Totals:         1       0       0       0       0
  4507 ;;Total ram usage:        1 bytes
  4508 ;; Hardware stack levels used: 1
  4509 ;; This function calls:
  4510 ;;		Nothing
  4511 ;; This function is called by:
  4512 ;;		_isr
  4513 ;; This function uses a non-reentrant model
  4514 ;;
  4515                           
  4516     0DEE                     _readEEPROM:	
  4517                           ;psect for function _readEEPROM
  4518                           
  4519                           
  4520                           ;incstack = 0
  4521                           ; Regs used in _readEEPROM: [wreg]
  4522                           ;readEEPROM@address stored from wreg
  4523     0DEE  00F0               	movwf	readEEPROM@address
  4524     0DEF                     i1l1843:
  4525                           
  4526                           ;Kart_main.c: 52: unsigned char readEEPROM(unsigned char address);Kart_main.c: 53: {;Kar
      +                          t_main.c: 55:   EEADR = address;
  4527     0DEF  0870               	movf	readEEPROM@address,w
  4528     0DF0  1283               	bcf	3,5	;RP0=0, select bank2
  4529     0DF1  1703               	bsf	3,6	;RP1=1, select bank2
  4530     0DF2  008D               	movwf	13	;volatile
  4531     0DF3                     i1l1845:
  4532                           
  4533                           ;Kart_main.c: 56:   EECON1bits.EEPGD = 0;
  4534     0DF3  1683               	bsf	3,5	;RP0=1, select bank3
  4535     0DF4  1703               	bsf	3,6	;RP1=1, select bank3
  4536     0DF5  138C               	bcf	12,7	;volsfr
  4537     0DF6                     i1l1847:
  4538                           
  4539                           ;Kart_main.c: 57:   EECON1bits.RD = 1;
  4540     0DF6  140C               	bsf	12,0	;volsfr
  4541                           
  4542                           ;Kart_main.c: 58:   return EEDATA;
  4543     0DF7  1283               	bcf	3,5	;RP0=0, select bank2
  4544     0DF8  1703               	bsf	3,6	;RP1=1, select bank2
  4545     0DF9  080C               	movf	12,w	;volatile
  4546     0DFA                     i1l117:
  4547     0DFA  0008               	return
  4548     0DFB                     __end_of_readEEPROM:
  4549                           
  4550                           	psect	text21
  4551     06A9                     __ptext21:	
  4552 ;; *************** function _PWmanual_func *****************
  4553 ;; Defined at:
  4554 ;;		line 17 in file "PWmanual.c"
  4555 ;; Parameters:    Size  Location     Type
  4556 ;;  valad           4   12[BANK0 ] float 
  4557 ;; Auto vars:     Size  Location     Type
  4558 ;;		None
  4559 ;; Return value:  Size  Location     Type
  4560 ;;                  1    wreg      void 
  4561 ;; Registers used:
  4562 ;;		wreg, status,2, status,0, pclath, cstack
  4563 ;; Tracked objects:
  4564 ;;		On entry : 0/0
  4565 ;;		On exit  : 0/0
  4566 ;;		Unchanged: 0/0
  4567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4568 ;;      Params:         0       4       0       0       0
  4569 ;;      Locals:         0       0       0       0       0
  4570 ;;      Temps:          0       1       0       0       0
  4571 ;;      Totals:         0       5       0       0       0
  4572 ;;Total ram usage:        5 bytes
  4573 ;; Hardware stack levels used: 1
  4574 ;; Hardware stack levels required when called: 1
  4575 ;; This function calls:
  4576 ;;		___fleq
  4577 ;;		___flge
  4578 ;;		___xxtofl
  4579 ;; This function is called by:
  4580 ;;		_isr
  4581 ;; This function uses a non-reentrant model
  4582 ;;
  4583                           
  4584     06A9                     _PWmanual_func:	
  4585                           ;psect for function _PWmanual_func
  4586                           
  4587     06A9                     i1l1875:	
  4588                           ;incstack = 0
  4589                           ; Regs used in _PWmanual_func: [wreg+status,2+status,0+pclath+cstack]
  4590                           
  4591                           
  4592                           ;PWmanual.c: 18:     if (PIR1bits.TMR2IF){
  4593     06A9  1283               	bcf	3,5	;RP0=0, select bank0
  4594     06AA  1303               	bcf	3,6	;RP1=0, select bank0
  4595     06AB  1C8C               	btfss	12,1	;volatile
  4596     06AC  2EAE               	goto	u168_21
  4597     06AD  2EAF               	goto	u168_20
  4598     06AE                     u168_21:
  4599     06AE  2F33               	goto	i1l284
  4600     06AF                     u168_20:
  4601     06AF                     i1l1877:
  4602                           
  4603                           ;PWmanual.c: 20:         for (i=0;i<=valad;i++){
  4604     06AF  1683               	bsf	3,5	;RP0=1, select bank1
  4605     06B0  1303               	bcf	3,6	;RP1=0, select bank1
  4606     06B1  01C1               	clrf	_i^(0+128)
  4607     06B2  01C2               	clrf	(_i+1)^(0+128)
  4608     06B3  2F02               	goto	i1l1885
  4609     06B4                     i1l1879:
  4610                           
  4611                           ;PWmanual.c: 21:             if (i== valad){
  4612     06B4  1683               	bsf	3,5	;RP0=1, select bank1
  4613     06B5  1303               	bcf	3,6	;RP1=0, select bank1
  4614     06B6  0841               	movf	_i^(0+128),w
  4615     06B7  00F0               	movwf	___xxtofl@val
  4616     06B8  0842               	movf	(_i+1)^(0+128),w
  4617     06B9  00F1               	movwf	___xxtofl@val+1
  4618     06BA  3000               	movlw	0
  4619     06BB  1BF1               	btfsc	___xxtofl@val+1,7
  4620     06BC  30FF               	movlw	255
  4621     06BD  00F2               	movwf	___xxtofl@val+2
  4622     06BE  00F3               	movwf	___xxtofl@val+3
  4623     06BF  3001               	movlw	1
  4624     06C0  120A  118A  24BF  120A  118A  	fcall	___xxtofl
  4625     06C5  0873               	movf	?___xxtofl+3,w
  4626     06C6  1283               	bcf	3,5	;RP0=0, select bank0
  4627     06C7  1303               	bcf	3,6	;RP1=0, select bank0
  4628     06C8  00A3               	movwf	___fleq@ff1+3
  4629     06C9  0872               	movf	?___xxtofl+2,w
  4630     06CA  00A2               	movwf	___fleq@ff1+2
  4631     06CB  0871               	movf	?___xxtofl+1,w
  4632     06CC  00A1               	movwf	___fleq@ff1+1
  4633     06CD  0870               	movf	?___xxtofl,w
  4634     06CE  00A0               	movwf	___fleq@ff1
  4635     06CF  082F               	movf	PWmanual_func@valad+3,w
  4636     06D0  00A7               	movwf	___fleq@ff2+3
  4637     06D1  082E               	movf	PWmanual_func@valad+2,w
  4638     06D2  00A6               	movwf	___fleq@ff2+2
  4639     06D3  082D               	movf	PWmanual_func@valad+1,w
  4640     06D4  00A5               	movwf	___fleq@ff2+1
  4641     06D5  082C               	movf	PWmanual_func@valad,w
  4642     06D6  00A4               	movwf	___fleq@ff2
  4643     06D7  120A  158A  27B0  120A  118A  	fcall	___fleq
  4644     06DC  1C03               	btfss	3,0
  4645     06DD  2EDF               	goto	u169_21
  4646     06DE  2EE0               	goto	u169_20
  4647     06DF                     u169_21:
  4648     06DF  2EFA               	goto	i1l1883
  4649     06E0                     u169_20:
  4650     06E0                     i1l1881:
  4651                           
  4652                           ;PWmanual.c: 22:             TRISCbits.TRISC3 ++;
  4653     06E0  1683               	bsf	3,5	;RP0=1, select bank1
  4654     06E1  1303               	bcf	3,6	;RP1=0, select bank1
  4655     06E2  0C07               	rrf	7,w	;volatile
  4656     06E3  1283               	bcf	3,5	;RP0=0, select bank0
  4657     06E4  1303               	bcf	3,6	;RP1=0, select bank0
  4658     06E5  00B0               	movwf	??_PWmanual_func
  4659     06E6  0CB0               	rrf	??_PWmanual_func,f
  4660     06E7  0C30               	rrf	??_PWmanual_func,w
  4661     06E8  3901               	andlw	1
  4662     06E9  00B0               	movwf	??_PWmanual_func
  4663     06EA  3001               	movlw	1
  4664     06EB  06B0               	xorwf	??_PWmanual_func,f
  4665     06EC  0DB0               	rlf	??_PWmanual_func,f
  4666     06ED  0DB0               	rlf	??_PWmanual_func,f
  4667     06EE  0DB0               	rlf	??_PWmanual_func,f
  4668     06EF  1683               	bsf	3,5	;RP0=1, select bank1
  4669     06F0  1303               	bcf	3,6	;RP1=0, select bank1
  4670     06F1  0807               	movf	7,w	;volatile
  4671     06F2  1283               	bcf	3,5	;RP0=0, select bank0
  4672     06F3  1303               	bcf	3,6	;RP1=0, select bank0
  4673     06F4  0630               	xorwf	??_PWmanual_func,w
  4674     06F5  39F7               	andlw	-9
  4675     06F6  0630               	xorwf	??_PWmanual_func,w
  4676     06F7  1683               	bsf	3,5	;RP0=1, select bank1
  4677     06F8  1303               	bcf	3,6	;RP1=0, select bank1
  4678     06F9  0087               	movwf	7	;volatile
  4679     06FA                     i1l1883:
  4680                           
  4681                           ;PWmanual.c: 25:         }
  4682     06FA  3001               	movlw	1
  4683     06FB  1683               	bsf	3,5	;RP0=1, select bank1
  4684     06FC  1303               	bcf	3,6	;RP1=0, select bank1
  4685     06FD  07C1               	addwf	_i^(0+128),f
  4686     06FE  1803               	skipnc
  4687     06FF  0AC2               	incf	(_i+1)^(0+128),f
  4688     0700  3000               	movlw	0
  4689     0701  07C2               	addwf	(_i+1)^(0+128),f
  4690     0702                     i1l1885:
  4691     0702  1283               	bcf	3,5	;RP0=0, select bank0
  4692     0703  1303               	bcf	3,6	;RP1=0, select bank0
  4693     0704  082F               	movf	PWmanual_func@valad+3,w
  4694     0705  00A3               	movwf	___flge@ff1+3
  4695     0706  082E               	movf	PWmanual_func@valad+2,w
  4696     0707  00A2               	movwf	___flge@ff1+2
  4697     0708  082D               	movf	PWmanual_func@valad+1,w
  4698     0709  00A1               	movwf	___flge@ff1+1
  4699     070A  082C               	movf	PWmanual_func@valad,w
  4700     070B  00A0               	movwf	___flge@ff1
  4701     070C  1683               	bsf	3,5	;RP0=1, select bank1
  4702     070D  1303               	bcf	3,6	;RP1=0, select bank1
  4703     070E  0841               	movf	_i^(0+128),w
  4704     070F  00F0               	movwf	___xxtofl@val
  4705     0710  0842               	movf	(_i+1)^(0+128),w
  4706     0711  00F1               	movwf	___xxtofl@val+1
  4707     0712  3000               	movlw	0
  4708     0713  1BF1               	btfsc	___xxtofl@val+1,7
  4709     0714  30FF               	movlw	255
  4710     0715  00F2               	movwf	___xxtofl@val+2
  4711     0716  00F3               	movwf	___xxtofl@val+3
  4712     0717  3001               	movlw	1
  4713     0718  120A  118A  24BF  120A  118A  	fcall	___xxtofl
  4714     071D  0873               	movf	?___xxtofl+3,w
  4715     071E  1283               	bcf	3,5	;RP0=0, select bank0
  4716     071F  1303               	bcf	3,6	;RP1=0, select bank0
  4717     0720  00A7               	movwf	___flge@ff2+3
  4718     0721  0872               	movf	?___xxtofl+2,w
  4719     0722  00A6               	movwf	___flge@ff2+2
  4720     0723  0871               	movf	?___xxtofl+1,w
  4721     0724  00A5               	movwf	___flge@ff2+1
  4722     0725  0870               	movf	?___xxtofl,w
  4723     0726  00A4               	movwf	___flge@ff2
  4724     0727  120A  118A  2577  120A  118A  	fcall	___flge
  4725     072C  1803               	btfsc	3,0
  4726     072D  2F2F               	goto	u170_21
  4727     072E  2F30               	goto	u170_20
  4728     072F                     u170_21:
  4729     072F  2EB4               	goto	i1l1879
  4730     0730                     u170_20:
  4731     0730                     i1l283:
  4732                           
  4733                           ;PWmanual.c: 26:        PIR1bits.TMR2IF = 0;
  4734     0730  1283               	bcf	3,5	;RP0=0, select bank0
  4735     0731  1303               	bcf	3,6	;RP1=0, select bank0
  4736     0732  108C               	bcf	12,1	;volatile
  4737     0733                     i1l284:
  4738     0733  0008               	return
  4739     0734                     __end_of_PWmanual_func:
  4740                           
  4741                           	psect	text22
  4742     04BF                     __ptext22:	
  4743 ;; *************** function ___xxtofl *****************
  4744 ;; Defined at:
  4745 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  4746 ;; Parameters:    Size  Location     Type
  4747 ;;  sign            1    wreg     unsigned char 
  4748 ;;  val             4    0[COMMON] long 
  4749 ;; Auto vars:     Size  Location     Type
  4750 ;;  sign            1    8[COMMON] unsigned char 
  4751 ;;  arg             4   10[COMMON] unsigned long 
  4752 ;;  exp             1    9[COMMON] unsigned char 
  4753 ;; Return value:  Size  Location     Type
  4754 ;;                  4    0[COMMON] unsigned char 
  4755 ;; Registers used:
  4756 ;;		wreg, status,2, status,0
  4757 ;; Tracked objects:
  4758 ;;		On entry : 0/0
  4759 ;;		On exit  : 0/0
  4760 ;;		Unchanged: 0/0
  4761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4762 ;;      Params:         4       0       0       0       0
  4763 ;;      Locals:         6       0       0       0       0
  4764 ;;      Temps:          4       0       0       0       0
  4765 ;;      Totals:        14       0       0       0       0
  4766 ;;Total ram usage:       14 bytes
  4767 ;; Hardware stack levels used: 1
  4768 ;; This function calls:
  4769 ;;		Nothing
  4770 ;; This function is called by:
  4771 ;;		_isr
  4772 ;;		_PWmanual_func
  4773 ;; This function uses a non-reentrant model
  4774 ;;
  4775                           
  4776     04BF                     ___xxtofl:	
  4777                           ;psect for function ___xxtofl
  4778                           
  4779                           
  4780                           ;incstack = 0
  4781                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4782                           ;___xxtofl@sign stored from wreg
  4783     04BF  00F8               	movwf	___xxtofl@sign
  4784     04C0                     i1l1799:
  4785     04C0  0878               	movf	___xxtofl@sign,w
  4786     04C1  1903               	btfsc	3,2
  4787     04C2  2CC4               	goto	u152_21
  4788     04C3  2CC5               	goto	u152_20
  4789     04C4                     u152_21:
  4790     04C4  2CD9               	goto	i1l1805
  4791     04C5                     u152_20:
  4792     04C5                     i1l1801:
  4793     04C5  1FF3               	btfss	___xxtofl@val+3,7
  4794     04C6  2CC8               	goto	u153_21
  4795     04C7  2CC9               	goto	u153_20
  4796     04C8                     u153_21:
  4797     04C8  2CD9               	goto	i1l1805
  4798     04C9                     u153_20:
  4799     04C9                     i1l1803:
  4800     04C9  0970               	comf	___xxtofl@val,w
  4801     04CA  00FA               	movwf	___xxtofl@arg
  4802     04CB  0971               	comf	___xxtofl@val+1,w
  4803     04CC  00FB               	movwf	___xxtofl@arg+1
  4804     04CD  0972               	comf	___xxtofl@val+2,w
  4805     04CE  00FC               	movwf	___xxtofl@arg+2
  4806     04CF  0973               	comf	___xxtofl@val+3,w
  4807     04D0  00FD               	movwf	___xxtofl@arg+3
  4808     04D1  0AFA               	incf	___xxtofl@arg,f
  4809     04D2  1903               	skipnz
  4810     04D3  0AFB               	incf	___xxtofl@arg+1,f
  4811     04D4  1903               	skipnz
  4812     04D5  0AFC               	incf	___xxtofl@arg+2,f
  4813     04D6  1903               	skipnz
  4814     04D7  0AFD               	incf	___xxtofl@arg+3,f
  4815     04D8  2CE1               	goto	i1l849
  4816     04D9                     i1l1805:
  4817     04D9  0873               	movf	___xxtofl@val+3,w
  4818     04DA  00FD               	movwf	___xxtofl@arg+3
  4819     04DB  0872               	movf	___xxtofl@val+2,w
  4820     04DC  00FC               	movwf	___xxtofl@arg+2
  4821     04DD  0871               	movf	___xxtofl@val+1,w
  4822     04DE  00FB               	movwf	___xxtofl@arg+1
  4823     04DF  0870               	movf	___xxtofl@val,w
  4824     04E0  00FA               	movwf	___xxtofl@arg
  4825     04E1                     i1l849:
  4826     04E1  0873               	movf	___xxtofl@val+3,w
  4827     04E2  0472               	iorwf	___xxtofl@val+2,w
  4828     04E3  0471               	iorwf	___xxtofl@val+1,w
  4829     04E4  0470               	iorwf	___xxtofl@val,w
  4830     04E5  1D03               	skipz
  4831     04E6  2CE8               	goto	u154_21
  4832     04E7  2CE9               	goto	u154_20
  4833     04E8                     u154_21:
  4834     04E8  2CF2               	goto	i1l1811
  4835     04E9                     u154_20:
  4836     04E9                     i1l1807:
  4837     04E9  3000               	movlw	0
  4838     04EA  00F3               	movwf	?___xxtofl+3
  4839     04EB  3000               	movlw	0
  4840     04EC  00F2               	movwf	?___xxtofl+2
  4841     04ED  3000               	movlw	0
  4842     04EE  00F1               	movwf	?___xxtofl+1
  4843     04EF  3000               	movlw	0
  4844     04F0  00F0               	movwf	?___xxtofl
  4845     04F1  2D76               	goto	i1l851
  4846     04F2                     i1l1811:
  4847     04F2  3096               	movlw	150
  4848     04F3  00F9               	movwf	___xxtofl@exp
  4849     04F4  2D02               	goto	i1l1815
  4850     04F5                     i1l1813:
  4851     04F5  3001               	movlw	1
  4852     04F6  00F4               	movwf	??___xxtofl
  4853     04F7  0874               	movf	??___xxtofl,w
  4854     04F8  07F9               	addwf	___xxtofl@exp,f
  4855     04F9  3001               	movlw	1
  4856     04FA                     u155_25:
  4857     04FA  1003               	clrc
  4858     04FB  0CFD               	rrf	___xxtofl@arg+3,f
  4859     04FC  0CFC               	rrf	___xxtofl@arg+2,f
  4860     04FD  0CFB               	rrf	___xxtofl@arg+1,f
  4861     04FE  0CFA               	rrf	___xxtofl@arg,f
  4862     04FF  3EFF               	addlw	-1
  4863     0500  1D03               	skipz
  4864     0501  2CFA               	goto	u155_25
  4865     0502                     i1l1815:
  4866     0502  30FE               	movlw	254
  4867     0503  057D               	andwf	___xxtofl@arg+3,w
  4868     0504  1D03               	btfss	3,2
  4869     0505  2D07               	goto	u156_21
  4870     0506  2D08               	goto	u156_20
  4871     0507                     u156_21:
  4872     0507  2CF5               	goto	i1l1813
  4873     0508                     u156_20:
  4874     0508  2D24               	goto	i1l855
  4875     0509                     i1l1817:
  4876     0509  3001               	movlw	1
  4877     050A  00F4               	movwf	??___xxtofl
  4878     050B  0874               	movf	??___xxtofl,w
  4879     050C  07F9               	addwf	___xxtofl@exp,f
  4880     050D                     i1l1819:
  4881     050D  3001               	movlw	1
  4882     050E  07FA               	addwf	___xxtofl@arg,f
  4883     050F  3000               	movlw	0
  4884     0510  1803               	skipnc
  4885     0511  3001               	movlw	1
  4886     0512  07FB               	addwf	___xxtofl@arg+1,f
  4887     0513  3000               	movlw	0
  4888     0514  1803               	skipnc
  4889     0515  3001               	movlw	1
  4890     0516  07FC               	addwf	___xxtofl@arg+2,f
  4891     0517  3000               	movlw	0
  4892     0518  1803               	skipnc
  4893     0519  3001               	movlw	1
  4894     051A  07FD               	addwf	___xxtofl@arg+3,f
  4895     051B                     i1l1821:
  4896     051B  3001               	movlw	1
  4897     051C                     u157_25:
  4898     051C  1003               	clrc
  4899     051D  0CFD               	rrf	___xxtofl@arg+3,f
  4900     051E  0CFC               	rrf	___xxtofl@arg+2,f
  4901     051F  0CFB               	rrf	___xxtofl@arg+1,f
  4902     0520  0CFA               	rrf	___xxtofl@arg,f
  4903     0521  3EFF               	addlw	-1
  4904     0522  1D03               	skipz
  4905     0523  2D1C               	goto	u157_25
  4906     0524                     i1l855:
  4907     0524  30FF               	movlw	255
  4908     0525  057D               	andwf	___xxtofl@arg+3,w
  4909     0526  1D03               	btfss	3,2
  4910     0527  2D29               	goto	u158_21
  4911     0528  2D2A               	goto	u158_20
  4912     0529                     u158_21:
  4913     0529  2D09               	goto	i1l1817
  4914     052A                     u158_20:
  4915     052A  2D36               	goto	i1l1825
  4916     052B                     i1l1823:
  4917     052B  3001               	movlw	1
  4918     052C  02F9               	subwf	___xxtofl@exp,f
  4919     052D  3001               	movlw	1
  4920     052E  00F4               	movwf	??___xxtofl
  4921     052F                     u159_25:
  4922     052F  1003               	clrc
  4923     0530  0DFA               	rlf	___xxtofl@arg,f
  4924     0531  0DFB               	rlf	___xxtofl@arg+1,f
  4925     0532  0DFC               	rlf	___xxtofl@arg+2,f
  4926     0533  0DFD               	rlf	___xxtofl@arg+3,f
  4927     0534  0BF4               	decfsz	??___xxtofl,f
  4928     0535  2D2F               	goto	u159_25
  4929     0536                     i1l1825:
  4930     0536  1BFC               	btfsc	___xxtofl@arg+2,7
  4931     0537  2D39               	goto	u160_21
  4932     0538  2D3A               	goto	u160_20
  4933     0539                     u160_21:
  4934     0539  2D40               	goto	i1l862
  4935     053A                     u160_20:
  4936     053A                     i1l1827:
  4937     053A  3002               	movlw	2
  4938     053B  0279               	subwf	___xxtofl@exp,w
  4939     053C  1803               	skipnc
  4940     053D  2D3F               	goto	u161_21
  4941     053E  2D40               	goto	u161_20
  4942     053F                     u161_21:
  4943     053F  2D2B               	goto	i1l1823
  4944     0540                     u161_20:
  4945     0540                     i1l862:
  4946     0540  1879               	btfsc	___xxtofl@exp,0
  4947     0541  2D43               	goto	u162_21
  4948     0542  2D44               	goto	u162_20
  4949     0543                     u162_21:
  4950     0543  2D4C               	goto	i1l863
  4951     0544                     u162_20:
  4952     0544                     i1l1829:
  4953     0544  30FF               	movlw	255
  4954     0545  05FA               	andwf	___xxtofl@arg,f
  4955     0546  30FF               	movlw	255
  4956     0547  05FB               	andwf	___xxtofl@arg+1,f
  4957     0548  307F               	movlw	127
  4958     0549  05FC               	andwf	___xxtofl@arg+2,f
  4959     054A  30FF               	movlw	255
  4960     054B  05FD               	andwf	___xxtofl@arg+3,f
  4961     054C                     i1l863:
  4962     054C  1003               	clrc
  4963     054D  0CF9               	rrf	___xxtofl@exp,f
  4964     054E                     i1l1831:
  4965     054E  0879               	movf	___xxtofl@exp,w
  4966     054F  00F4               	movwf	??___xxtofl
  4967     0550  01F5               	clrf	??___xxtofl+1
  4968     0551  01F6               	clrf	??___xxtofl+2
  4969     0552  01F7               	clrf	??___xxtofl+3
  4970     0553  3018               	movlw	24
  4971     0554                     u163_25:
  4972     0554  1003               	clrc
  4973     0555  0DF4               	rlf	??___xxtofl,f
  4974     0556  0DF5               	rlf	??___xxtofl+1,f
  4975     0557  0DF6               	rlf	??___xxtofl+2,f
  4976     0558  0DF7               	rlf	??___xxtofl+3,f
  4977     0559                     u163_20:
  4978     0559  3EFF               	addlw	-1
  4979     055A  1D03               	skipz
  4980     055B  2D54               	goto	u163_25
  4981     055C  0874               	movf	??___xxtofl,w
  4982     055D  04FA               	iorwf	___xxtofl@arg,f
  4983     055E  0875               	movf	??___xxtofl+1,w
  4984     055F  04FB               	iorwf	___xxtofl@arg+1,f
  4985     0560  0876               	movf	??___xxtofl+2,w
  4986     0561  04FC               	iorwf	___xxtofl@arg+2,f
  4987     0562  0877               	movf	??___xxtofl+3,w
  4988     0563  04FD               	iorwf	___xxtofl@arg+3,f
  4989     0564                     i1l1833:
  4990     0564  0878               	movf	___xxtofl@sign,w
  4991     0565  1903               	btfsc	3,2
  4992     0566  2D68               	goto	u164_21
  4993     0567  2D69               	goto	u164_20
  4994     0568                     u164_21:
  4995     0568  2D6E               	goto	i1l1839
  4996     0569                     u164_20:
  4997     0569                     i1l1835:
  4998     0569  1FF3               	btfss	___xxtofl@val+3,7
  4999     056A  2D6C               	goto	u165_21
  5000     056B  2D6D               	goto	u165_20
  5001     056C                     u165_21:
  5002     056C  2D6E               	goto	i1l1839
  5003     056D                     u165_20:
  5004     056D                     i1l1837:
  5005     056D  17FD               	bsf	___xxtofl@arg+3,7
  5006     056E                     i1l1839:
  5007     056E  087D               	movf	___xxtofl@arg+3,w
  5008     056F  00F3               	movwf	?___xxtofl+3
  5009     0570  087C               	movf	___xxtofl@arg+2,w
  5010     0571  00F2               	movwf	?___xxtofl+2
  5011     0572  087B               	movf	___xxtofl@arg+1,w
  5012     0573  00F1               	movwf	?___xxtofl+1
  5013     0574  087A               	movf	___xxtofl@arg,w
  5014     0575  00F0               	movwf	?___xxtofl
  5015     0576                     i1l851:
  5016     0576  0008               	return
  5017     0577                     __end_of___xxtofl:
  5018                           
  5019                           	psect	text23
  5020     0577                     __ptext23:	
  5021 ;; *************** function ___flge *****************
  5022 ;; Defined at:
  5023 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flge.c"
  5024 ;; Parameters:    Size  Location     Type
  5025 ;;  ff1             4    0[BANK0 ] unsigned char 
  5026 ;;  ff2             4    4[BANK0 ] unsigned char 
  5027 ;; Auto vars:     Size  Location     Type
  5028 ;;		None
  5029 ;; Return value:  Size  Location     Type
  5030 ;;		None               void
  5031 ;; Registers used:
  5032 ;;		wreg, status,2, status,0
  5033 ;; Tracked objects:
  5034 ;;		On entry : 0/0
  5035 ;;		On exit  : 0/0
  5036 ;;		Unchanged: 0/0
  5037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5038 ;;      Params:         0       8       0       0       0
  5039 ;;      Locals:         0       0       0       0       0
  5040 ;;      Temps:          0       4       0       0       0
  5041 ;;      Totals:         0      12       0       0       0
  5042 ;;Total ram usage:       12 bytes
  5043 ;; Hardware stack levels used: 1
  5044 ;; This function calls:
  5045 ;;		Nothing
  5046 ;; This function is called by:
  5047 ;;		_PWmanual_func
  5048 ;; This function uses a non-reentrant model
  5049 ;;
  5050                           
  5051     0577                     ___flge:	
  5052                           ;psect for function ___flge
  5053                           
  5054     0577                     i1l1695:	
  5055                           ;incstack = 0
  5056                           ; Regs used in ___flge: [wreg+status,2+status,0]
  5057                           
  5058     0577  3000               	movlw	0
  5059     0578  1283               	bcf	3,5	;RP0=0, select bank0
  5060     0579  1303               	bcf	3,6	;RP1=0, select bank0
  5061     057A  0520               	andwf	___flge@ff1,w
  5062     057B  00A8               	movwf	??___flge
  5063     057C  3000               	movlw	0
  5064     057D  0521               	andwf	___flge@ff1+1,w
  5065     057E  00A9               	movwf	??___flge+1
  5066     057F  3080               	movlw	128
  5067     0580  0522               	andwf	___flge@ff1+2,w
  5068     0581  00AA               	movwf	??___flge+2
  5069     0582  307F               	movlw	127
  5070     0583  0523               	andwf	___flge@ff1+3,w
  5071     0584  00AB               	movwf	??___flge+3
  5072     0585  082B               	movf	??___flge+3,w
  5073     0586  042A               	iorwf	??___flge+2,w
  5074     0587  0429               	iorwf	??___flge+1,w
  5075     0588  0428               	iorwf	??___flge,w
  5076     0589  1D03               	skipz
  5077     058A  2D8C               	goto	u122_21
  5078     058B  2D8D               	goto	u122_20
  5079     058C                     u122_21:
  5080     058C  2D95               	goto	i1l590
  5081     058D                     u122_20:
  5082     058D                     i1l1697:
  5083     058D  3000               	movlw	0
  5084     058E  00A3               	movwf	___flge@ff1+3
  5085     058F  3000               	movlw	0
  5086     0590  00A2               	movwf	___flge@ff1+2
  5087     0591  3000               	movlw	0
  5088     0592  00A1               	movwf	___flge@ff1+1
  5089     0593  3000               	movlw	0
  5090     0594  00A0               	movwf	___flge@ff1
  5091     0595                     i1l590:
  5092     0595  3000               	movlw	0
  5093     0596  0524               	andwf	___flge@ff2,w
  5094     0597  00A8               	movwf	??___flge
  5095     0598  3000               	movlw	0
  5096     0599  0525               	andwf	___flge@ff2+1,w
  5097     059A  00A9               	movwf	??___flge+1
  5098     059B  3080               	movlw	128
  5099     059C  0526               	andwf	___flge@ff2+2,w
  5100     059D  00AA               	movwf	??___flge+2
  5101     059E  307F               	movlw	127
  5102     059F  0527               	andwf	___flge@ff2+3,w
  5103     05A0  00AB               	movwf	??___flge+3
  5104     05A1  082B               	movf	??___flge+3,w
  5105     05A2  042A               	iorwf	??___flge+2,w
  5106     05A3  0429               	iorwf	??___flge+1,w
  5107     05A4  0428               	iorwf	??___flge,w
  5108     05A5  1D03               	skipz
  5109     05A6  2DA8               	goto	u123_21
  5110     05A7  2DA9               	goto	u123_20
  5111     05A8                     u123_21:
  5112     05A8  2DB1               	goto	i1l1701
  5113     05A9                     u123_20:
  5114     05A9                     i1l1699:
  5115     05A9  3000               	movlw	0
  5116     05AA  00A7               	movwf	___flge@ff2+3
  5117     05AB  3000               	movlw	0
  5118     05AC  00A6               	movwf	___flge@ff2+2
  5119     05AD  3000               	movlw	0
  5120     05AE  00A5               	movwf	___flge@ff2+1
  5121     05AF  3000               	movlw	0
  5122     05B0  00A4               	movwf	___flge@ff2
  5123     05B1                     i1l1701:
  5124     05B1  1FA3               	btfss	___flge@ff1+3,7
  5125     05B2  2DB4               	goto	u124_21
  5126     05B3  2DB5               	goto	u124_20
  5127     05B4                     u124_21:
  5128     05B4  2DD9               	goto	i1l1705
  5129     05B5                     u124_20:
  5130     05B5                     i1l1703:
  5131     05B5  3000               	movlw	0
  5132     05B6  00A8               	movwf	??___flge
  5133     05B7  3000               	movlw	0
  5134     05B8  00A9               	movwf	??___flge+1
  5135     05B9  3000               	movlw	0
  5136     05BA  00AA               	movwf	??___flge+2
  5137     05BB  3080               	movlw	128
  5138     05BC  00AB               	movwf	??___flge+3
  5139     05BD  0820               	movf	___flge@ff1,w
  5140     05BE  02A8               	subwf	??___flge,f
  5141     05BF  0821               	movf	___flge@ff1+1,w
  5142     05C0  1C03               	skipc
  5143     05C1  0F21               	incfsz	___flge@ff1+1,w
  5144     05C2  2DC4               	goto	u125_21
  5145     05C3  2DC5               	goto	u125_22
  5146     05C4                     u125_21:
  5147     05C4  02A9               	subwf	??___flge+1,f
  5148     05C5                     u125_22:
  5149     05C5  0822               	movf	___flge@ff1+2,w
  5150     05C6  1C03               	skipc
  5151     05C7  0F22               	incfsz	___flge@ff1+2,w
  5152     05C8  2DCA               	goto	u125_23
  5153     05C9  2DCB               	goto	u125_24
  5154     05CA                     u125_23:
  5155     05CA  02AA               	subwf	??___flge+2,f
  5156     05CB                     u125_24:
  5157     05CB  0823               	movf	___flge@ff1+3,w
  5158     05CC  1C03               	skipc
  5159     05CD  0F23               	incfsz	___flge@ff1+3,w
  5160     05CE  2DD0               	goto	u125_25
  5161     05CF  2DD1               	goto	u125_26
  5162     05D0                     u125_25:
  5163     05D0  02AB               	subwf	??___flge+3,f
  5164     05D1                     u125_26:
  5165     05D1  082B               	movf	??___flge+3,w
  5166     05D2  00A3               	movwf	___flge@ff1+3
  5167     05D3  082A               	movf	??___flge+2,w
  5168     05D4  00A2               	movwf	___flge@ff1+2
  5169     05D5  0829               	movf	??___flge+1,w
  5170     05D6  00A1               	movwf	___flge@ff1+1
  5171     05D7  0828               	movf	??___flge,w
  5172     05D8  00A0               	movwf	___flge@ff1
  5173     05D9                     i1l1705:
  5174     05D9  1FA7               	btfss	___flge@ff2+3,7
  5175     05DA  2DDC               	goto	u126_21
  5176     05DB  2DDD               	goto	u126_20
  5177     05DC                     u126_21:
  5178     05DC  2E01               	goto	i1l593
  5179     05DD                     u126_20:
  5180     05DD                     i1l1707:
  5181     05DD  3000               	movlw	0
  5182     05DE  00A8               	movwf	??___flge
  5183     05DF  3000               	movlw	0
  5184     05E0  00A9               	movwf	??___flge+1
  5185     05E1  3000               	movlw	0
  5186     05E2  00AA               	movwf	??___flge+2
  5187     05E3  3080               	movlw	128
  5188     05E4  00AB               	movwf	??___flge+3
  5189     05E5  0824               	movf	___flge@ff2,w
  5190     05E6  02A8               	subwf	??___flge,f
  5191     05E7  0825               	movf	___flge@ff2+1,w
  5192     05E8  1C03               	skipc
  5193     05E9  0F25               	incfsz	___flge@ff2+1,w
  5194     05EA  2DEC               	goto	u127_21
  5195     05EB  2DED               	goto	u127_22
  5196     05EC                     u127_21:
  5197     05EC  02A9               	subwf	??___flge+1,f
  5198     05ED                     u127_22:
  5199     05ED  0826               	movf	___flge@ff2+2,w
  5200     05EE  1C03               	skipc
  5201     05EF  0F26               	incfsz	___flge@ff2+2,w
  5202     05F0  2DF2               	goto	u127_23
  5203     05F1  2DF3               	goto	u127_24
  5204     05F2                     u127_23:
  5205     05F2  02AA               	subwf	??___flge+2,f
  5206     05F3                     u127_24:
  5207     05F3  0827               	movf	___flge@ff2+3,w
  5208     05F4  1C03               	skipc
  5209     05F5  0F27               	incfsz	___flge@ff2+3,w
  5210     05F6  2DF8               	goto	u127_25
  5211     05F7  2DF9               	goto	u127_26
  5212     05F8                     u127_25:
  5213     05F8  02AB               	subwf	??___flge+3,f
  5214     05F9                     u127_26:
  5215     05F9  082B               	movf	??___flge+3,w
  5216     05FA  00A7               	movwf	___flge@ff2+3
  5217     05FB  082A               	movf	??___flge+2,w
  5218     05FC  00A6               	movwf	___flge@ff2+2
  5219     05FD  0829               	movf	??___flge+1,w
  5220     05FE  00A5               	movwf	___flge@ff2+1
  5221     05FF  0828               	movf	??___flge,w
  5222     0600  00A4               	movwf	___flge@ff2
  5223     0601                     i1l593:
  5224     0601  3080               	movlw	128
  5225     0602  06A3               	xorwf	___flge@ff1+3,f
  5226     0603  3080               	movlw	128
  5227     0604  06A7               	xorwf	___flge@ff2+3,f
  5228     0605  0827               	movf	___flge@ff2+3,w
  5229     0606  0223               	subwf	___flge@ff1+3,w
  5230     0607  1D03               	skipz
  5231     0608  2E13               	goto	u128_25
  5232     0609  0826               	movf	___flge@ff2+2,w
  5233     060A  0222               	subwf	___flge@ff1+2,w
  5234     060B  1D03               	skipz
  5235     060C  2E13               	goto	u128_25
  5236     060D  0825               	movf	___flge@ff2+1,w
  5237     060E  0221               	subwf	___flge@ff1+1,w
  5238     060F  1D03               	skipz
  5239     0610  2E13               	goto	u128_25
  5240     0611  0824               	movf	___flge@ff2,w
  5241     0612  0220               	subwf	___flge@ff1,w
  5242     0613                     u128_25:
  5243     0613  1803               	skipnc
  5244     0614  2E16               	goto	u128_21
  5245     0615  2E17               	goto	u128_20
  5246     0616                     u128_21:
  5247     0616  2E19               	goto	i1l1711
  5248     0617                     u128_20:
  5249     0617                     i1l1709:
  5250     0617  1003               	clrc
  5251     0618  2E1A               	goto	i1l594
  5252     0619                     i1l1711:
  5253     0619  1403               	setc
  5254     061A                     i1l594:
  5255     061A  0008               	return
  5256     061B                     __end_of___flge:
  5257                           
  5258                           	psect	text24
  5259     0FB0                     __ptext24:	
  5260 ;; *************** function ___fleq *****************
  5261 ;; Defined at:
  5262 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fleq.c"
  5263 ;; Parameters:    Size  Location     Type
  5264 ;;  ff1             4    0[BANK0 ] unsigned char 
  5265 ;;  ff2             4    4[BANK0 ] unsigned char 
  5266 ;; Auto vars:     Size  Location     Type
  5267 ;;		None
  5268 ;; Return value:  Size  Location     Type
  5269 ;;		None               void
  5270 ;; Registers used:
  5271 ;;		wreg, status,2, status,0
  5272 ;; Tracked objects:
  5273 ;;		On entry : 0/0
  5274 ;;		On exit  : 0/0
  5275 ;;		Unchanged: 0/0
  5276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5277 ;;      Params:         0       8       0       0       0
  5278 ;;      Locals:         0       0       0       0       0
  5279 ;;      Temps:          0       4       0       0       0
  5280 ;;      Totals:         0      12       0       0       0
  5281 ;;Total ram usage:       12 bytes
  5282 ;; Hardware stack levels used: 1
  5283 ;; This function calls:
  5284 ;;		Nothing
  5285 ;; This function is called by:
  5286 ;;		_PWmanual_func
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           
  5290     0FB0                     ___fleq:	
  5291                           ;psect for function ___fleq
  5292                           
  5293     0FB0                     i1l1683:	
  5294                           ;incstack = 0
  5295                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  5296                           
  5297     0FB0  3000               	movlw	0
  5298     0FB1  1283               	bcf	3,5	;RP0=0, select bank0
  5299     0FB2  1303               	bcf	3,6	;RP1=0, select bank0
  5300     0FB3  0520               	andwf	___fleq@ff1,w
  5301     0FB4  00A8               	movwf	??___fleq
  5302     0FB5  3000               	movlw	0
  5303     0FB6  0521               	andwf	___fleq@ff1+1,w
  5304     0FB7  00A9               	movwf	??___fleq+1
  5305     0FB8  3080               	movlw	128
  5306     0FB9  0522               	andwf	___fleq@ff1+2,w
  5307     0FBA  00AA               	movwf	??___fleq+2
  5308     0FBB  307F               	movlw	127
  5309     0FBC  0523               	andwf	___fleq@ff1+3,w
  5310     0FBD  00AB               	movwf	??___fleq+3
  5311     0FBE  082B               	movf	??___fleq+3,w
  5312     0FBF  042A               	iorwf	??___fleq+2,w
  5313     0FC0  0429               	iorwf	??___fleq+1,w
  5314     0FC1  0428               	iorwf	??___fleq,w
  5315     0FC2  1D03               	skipz
  5316     0FC3  2FC5               	goto	u119_21
  5317     0FC4  2FC6               	goto	u119_20
  5318     0FC5                     u119_21:
  5319     0FC5  2FCE               	goto	i1l585
  5320     0FC6                     u119_20:
  5321     0FC6                     i1l1685:
  5322     0FC6  3000               	movlw	0
  5323     0FC7  00A3               	movwf	___fleq@ff1+3
  5324     0FC8  3000               	movlw	0
  5325     0FC9  00A2               	movwf	___fleq@ff1+2
  5326     0FCA  3000               	movlw	0
  5327     0FCB  00A1               	movwf	___fleq@ff1+1
  5328     0FCC  3000               	movlw	0
  5329     0FCD  00A0               	movwf	___fleq@ff1
  5330     0FCE                     i1l585:
  5331     0FCE  3000               	movlw	0
  5332     0FCF  0524               	andwf	___fleq@ff2,w
  5333     0FD0  00A8               	movwf	??___fleq
  5334     0FD1  3000               	movlw	0
  5335     0FD2  0525               	andwf	___fleq@ff2+1,w
  5336     0FD3  00A9               	movwf	??___fleq+1
  5337     0FD4  3080               	movlw	128
  5338     0FD5  0526               	andwf	___fleq@ff2+2,w
  5339     0FD6  00AA               	movwf	??___fleq+2
  5340     0FD7  307F               	movlw	127
  5341     0FD8  0527               	andwf	___fleq@ff2+3,w
  5342     0FD9  00AB               	movwf	??___fleq+3
  5343     0FDA  082B               	movf	??___fleq+3,w
  5344     0FDB  042A               	iorwf	??___fleq+2,w
  5345     0FDC  0429               	iorwf	??___fleq+1,w
  5346     0FDD  0428               	iorwf	??___fleq,w
  5347     0FDE  1D03               	skipz
  5348     0FDF  2FE1               	goto	u120_21
  5349     0FE0  2FE2               	goto	u120_20
  5350     0FE1                     u120_21:
  5351     0FE1  2FEA               	goto	i1l586
  5352     0FE2                     u120_20:
  5353     0FE2                     i1l1687:
  5354     0FE2  3000               	movlw	0
  5355     0FE3  00A7               	movwf	___fleq@ff2+3
  5356     0FE4  3000               	movlw	0
  5357     0FE5  00A6               	movwf	___fleq@ff2+2
  5358     0FE6  3000               	movlw	0
  5359     0FE7  00A5               	movwf	___fleq@ff2+1
  5360     0FE8  3000               	movlw	0
  5361     0FE9  00A4               	movwf	___fleq@ff2
  5362     0FEA                     i1l586:
  5363     0FEA  0827               	movf	___fleq@ff2+3,w
  5364     0FEB  0623               	xorwf	___fleq@ff1+3,w
  5365     0FEC  1D03               	skipz
  5366     0FED  2FF8               	goto	u121_25
  5367     0FEE  0826               	movf	___fleq@ff2+2,w
  5368     0FEF  0622               	xorwf	___fleq@ff1+2,w
  5369     0FF0  1D03               	skipz
  5370     0FF1  2FF8               	goto	u121_25
  5371     0FF2  0825               	movf	___fleq@ff2+1,w
  5372     0FF3  0621               	xorwf	___fleq@ff1+1,w
  5373     0FF4  1D03               	skipz
  5374     0FF5  2FF8               	goto	u121_25
  5375     0FF6  0824               	movf	___fleq@ff2,w
  5376     0FF7  0620               	xorwf	___fleq@ff1,w
  5377     0FF8                     u121_25:
  5378     0FF8  1903               	skipnz
  5379     0FF9  2FFB               	goto	u121_21
  5380     0FFA  2FFC               	goto	u121_20
  5381     0FFB                     u121_21:
  5382     0FFB  2FFE               	goto	i1l1691
  5383     0FFC                     u121_20:
  5384     0FFC                     i1l1689:
  5385     0FFC  1003               	clrc
  5386     0FFD  2FFF               	goto	i1l587
  5387     0FFE                     i1l1691:
  5388     0FFE  1403               	setc
  5389     0FFF                     i1l587:
  5390     0FFF  0008               	return
  5391     1000                     __end_of___fleq:
  5392                           
  5393                           	psect	text25
  5394     0E3E                     __ptext25:	
  5395 ;; *************** function _PWM_duty *****************
  5396 ;; Defined at:
  5397 ;;		line 46 in file "PWM.c"
  5398 ;; Parameters:    Size  Location     Type
  5399 ;;  chn             2    0[BANK0 ] int 
  5400 ;;  duty            4    2[BANK0 ] float 
  5401 ;; Auto vars:     Size  Location     Type
  5402 ;;		None
  5403 ;; Return value:  Size  Location     Type
  5404 ;;                  1    wreg      void 
  5405 ;; Registers used:
  5406 ;;		wreg, status,2, status,0
  5407 ;; Tracked objects:
  5408 ;;		On entry : 0/0
  5409 ;;		On exit  : 0/0
  5410 ;;		Unchanged: 0/0
  5411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5412 ;;      Params:         0       6       0       0       0
  5413 ;;      Locals:         0       0       0       0       0
  5414 ;;      Temps:          0       1       0       0       0
  5415 ;;      Totals:         0       7       0       0       0
  5416 ;;Total ram usage:        7 bytes
  5417 ;; Hardware stack levels used: 1
  5418 ;; This function calls:
  5419 ;;		Nothing
  5420 ;; This function is called by:
  5421 ;;		_isr
  5422 ;; This function uses a non-reentrant model
  5423 ;;
  5424                           
  5425     0E3E                     _PWM_duty:	
  5426                           ;psect for function _PWM_duty
  5427                           
  5428     0E3E                     i1l1869:	
  5429                           ;incstack = 0
  5430                           ; Regs used in _PWM_duty: [wreg+status,2+status,0]
  5431                           
  5432                           
  5433                           ;PWM.c: 47:       if (chn==0)
  5434     0E3E  1283               	bcf	3,5	;RP0=0, select bank0
  5435     0E3F  1303               	bcf	3,6	;RP1=0, select bank0
  5436     0E40  0820               	movf	PWM_duty@chn,w
  5437     0E41  0421               	iorwf	PWM_duty@chn+1,w
  5438     0E42  1D03               	btfss	3,2
  5439     0E43  2E45               	goto	u167_21
  5440     0E44  2E46               	goto	u167_20
  5441     0E45                     u167_21:
  5442     0E45  2E4D               	goto	i1l1873
  5443     0E46                     u167_20:
  5444     0E46                     i1l1871:
  5445                           
  5446                           ;PWM.c: 48:           CCPR1L = (ADRESH>>1)+128;
  5447     0E46  081E               	movf	30,w	;volatile
  5448     0E47  00A6               	movwf	??_PWM_duty
  5449     0E48  1003               	clrc
  5450     0E49  0C26               	rrf	??_PWM_duty,w
  5451     0E4A  3E80               	addlw	128
  5452     0E4B  0095               	movwf	21	;volatile
  5453     0E4C  2E53               	goto	i1l208
  5454     0E4D                     i1l1873:
  5455                           
  5456                           ;PWM.c: 51:           CCPR2L = (ADRESH>>1)+128;
  5457     0E4D  081E               	movf	30,w	;volatile
  5458     0E4E  00A6               	movwf	??_PWM_duty
  5459     0E4F  1003               	clrc
  5460     0E50  0C26               	rrf	??_PWM_duty,w
  5461     0E51  3E80               	addlw	128
  5462     0E52  009B               	movwf	27	;volatile
  5463     0E53                     i1l208:
  5464     0E53  0008               	return
  5465     0E54                     __end_of_PWM_duty:
  5466     007E                     btemp	set	126	;btemp
  5467     007E                     wtemp0	set	126
  5468                           
  5469                           	psect	idloc
  5470                           
  5471                           ;Config register IDLOC0 @ 0x2000
  5472                           ;	unspecified, using default values
  5473     2000                     	org	8192
  5474     2000  3FFF               	dw	16383
  5475                           
  5476                           ;Config register IDLOC1 @ 0x2001
  5477                           ;	unspecified, using default values
  5478     2001                     	org	8193
  5479     2001  3FFF               	dw	16383
  5480                           
  5481                           ;Config register IDLOC2 @ 0x2002
  5482                           ;	unspecified, using default values
  5483     2002                     	org	8194
  5484     2002  3FFF               	dw	16383
  5485                           
  5486                           ;Config register IDLOC3 @ 0x2003
  5487                           ;	unspecified, using default values
  5488     2003                     	org	8195
  5489     2003  3FFF               	dw	16383
  5490                           
  5491                           	psect	config
  5492                           
  5493                           ;Config register CONFIG1 @ 0x2007
  5494                           ;	Oscillator Selection bits
  5495                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  5496                           ;	Watchdog Timer Enable bit
  5497                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5498                           ;	Power-up Timer Enable bit
  5499                           ;	PWRTE = OFF, PWRT disabled
  5500                           ;	RE3/MCLR pin function select bit
  5501                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5502                           ;	Code Protection bit
  5503                           ;	CP = OFF, Program memory code protection is disabled
  5504                           ;	Data Code Protection bit
  5505                           ;	CPD = OFF, Data memory code protection is disabled
  5506                           ;	Brown Out Reset Selection bits
  5507                           ;	BOREN = OFF, BOR disabled
  5508                           ;	Internal External Switchover bit
  5509                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5510                           ;	Fail-Safe Clock Monitor Enabled bit
  5511                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5512                           ;	Low Voltage Programming Enable bit
  5513                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5514                           ;	In-Circuit Debugger Mode bit
  5515                           ;	DEBUG = 0x1, unprogrammed default
  5516     2007                     	org	8199
  5517     2007  20D5               	dw	8405
  5518                           
  5519                           ;Config register CONFIG2 @ 0x2008
  5520                           ;	Brown-out Reset Selection bit
  5521                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5522                           ;	Flash Program Memory Self Write Enable bits
  5523                           ;	WRT = OFF, Write protection off
  5524     2008                     	org	8200
  5525     2008  3FFF               	dw	16383

Data Sizes:
    Strings     30
    Constant    25
    Data        0
    BSS         27
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     32      57
    BANK1            80     33      35
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_4(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 9
		 -> main@text(BANK1[9]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    UART_Print@data	PTR const unsigned char  size(2) Largest target is 8192
		 -> STR_7(CODE[23]), STR_6(CODE[3]), ROM(CODE[8192]), STR_5(CODE[3]), 
		 -> main@text(BANK1[9]), STR_3(CODE[3]), STR_2(CODE[3]), message(CODE[15]), 
		 -> STR_1(CODE[23]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___xxtofl
    _PWmanual_func->___xxtofl
    ___flge->___xxtofl
    ___fleq->___xxtofl
    _PWM_duty->___xxtofl

Critical Paths under _main in BANK0

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _preguntas->_UART_Print
    _UART_Print->_UART_PutC
    _UART_Init->___lldiv
    _PWM_init->___fltol

Critical Paths under _isr in BANK0

    _isr->_PWmanual_func
    _PWmanual_func->___fleq
    _PWmanual_func->___flge

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___lwmod
    _UART_Init->___lldiv
    _PWM_init->___fltol

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0    6144
                                             20 BANK1     13    13      0
                           _PWM_init
                      _PWmanual_init
                    _UART_Data_Ready
                          _UART_GetC
                          _UART_Init
                         _UART_Print
                          _UART_PutC
                          _preguntas
                              _setup
                            _sprintf
                          _uart_read
 ---------------------------------------------------------------------------------
 (1) _uart_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    20      3    2438
                                              5 BANK1     15    12      3
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                             23 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                             23 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                             31 BANK0      1     1      0
                                              0 BANK1      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                             23 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _preguntas                                            0     0      0     872
                         _UART_Print
 ---------------------------------------------------------------------------------
 (2) _UART_Print                                           5     3      2     872
                                             24 BANK0      5     3      2
                          _UART_PutC
                          _uart_read (ARG)
 ---------------------------------------------------------------------------------
 (3) _UART_PutC                                            1     1      0      22
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           10     6      4     920
                                              5 BANK1     10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     601
                                             23 BANK0      9     1      8
                                              0 BANK1      5     5      0
 ---------------------------------------------------------------------------------
 (1) _UART_GetC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Data_Ready                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWmanual_init                                        3     1      2      98
                                             23 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _PWM_init                                             8     0      8     790
                                              2 BANK1      8     0      8
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     427
                                             23 BANK0      8     4      4
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  6     6      0    2591
                                             17 BANK0      6     6      0
                           _PWM_duty
                      _PWmanual_func
                           ___xxtofl
                         _readEEPROM
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (5) _writeEEPROM                                          3     2      1     143
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (5) _readEEPROM                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _PWmanual_func                                        5     1      4    1398
                                             12 BANK0      5     1      4
                             ___fleq
                             ___flge
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4     702
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     334
                                              0 BANK0     12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     242
                                              0 BANK0     12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _PWM_duty                                             7     1      6     326
                                              0 BANK0      7     1      6
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM_init
     ___fltol
   _PWmanual_init
   _UART_Data_Ready
   _UART_GetC
   _UART_Init
     ___lldiv
   _UART_Print
     _UART_PutC
     _uart_read (ARG)
   _UART_PutC
   _preguntas
     _UART_Print
   _setup
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
   _uart_read

 _isr (ROOT)
   _PWM_duty
     ___xxtofl (ARG)
   _PWmanual_func
     ___fleq
       ___xxtofl (ARG)
     ___flge
       ___xxtofl (ARG)
     ___xxtofl
   ___xxtofl
   _readEEPROM
   _writeEEPROM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      6A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     20      39       5       71.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     21      23       7       43.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      6A      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon May 22 16:22:16 2023

                      _i 00C1                        pc 0002          ??_PWmanual_func 0030  
        ??_PWmanual_init 0039                       fsr 0004      ___wmul@multiplicand 0039  
                    l200 0FAA                      l202 0FAE                      l203 0FAF  
                    l233 04AD                      l242 0DED                      l234 04BA  
                    l235 04BE                      l171 0E6A                      l252 0E0C  
                    l412 01C5                      l148 0E29                      l245 0DFB  
                    l261 0EE6                      l247 0E01                      l255 0E16  
                    l168 0F1E                      l416 0E99                      l249 0E08  
                    l602 06A8                      l418 0EB1                      l612 06A8  
                    l276 0DE3                      l452 07BD                      l382 003C  
                    l609 0691                      l688 0F64                      l698 07FD  
                    l869 0E3D                      _RB0 0030                      _RB1 0031  
                    _PR2 0092                      _chn 0052                      _isr 0324  
                    _val 0040                      fsr0 0004                      indf 0000  
           ___fltol@exp1 00A1                     l2101 0DEC                     l2105 0DFB  
                   l2107 0E05                     l2109 0E07                     l2301 0EA0  
                   l2311 0748                     l2303 0EA7                     l2321 0782  
                   l2313 074D                     l2401 07D0                     l2305 0EAD  
                   l2323 0790                     l2315 075C                     l2411 07F3  
                   l2403 07D8                     l2341 064A                     l2333 061B  
                   l2421 0F92                     l2325 0793                     l2317 0762  
                   l2309 0734                     l1621 0E0C                     l2405 07DC  
                   l2413 07F9                     l2343 064D                     l2335 0628  
                   l2431 0F9F                     l2423 0F96                     l2327 079D  
                   l2319 0770                     l1623 0E12                     l1631 0ED1  
                   l2095 0E54                     l2407 07E6                     l2511 0113  
                   l2503 00E2                     l2345 0655                     l2441 0FA9  
                   l2433 0FA1                     l2425 0F9A                     l2417 0F65  
                   l2097 0DE4                     l2329 07A5                     l1625 0EB2  
                   l2409 07EC                     l2521 0132                     l2513 011F  
                   l2601 0287        writeEEPROM@dataEE 0070                     l2363 0682  
                   l2355 0665                     l2347 0659                     l2339 0633  
                   l2435 0FA2                     l2427 0F9C                     l2419 0F71  
                   l2099 0DEA                     l2451 0454                     l2443 03FB  
                   l1627 0EB6                     l2371 0F23                     l2291 0E3C  
                   l2283 0E2D                     l2531 0152                     l2523 0136  
                   l2515 0123                     l2507 00FE                     l2611 02DE  
                   l2603 02B0                     l2365 0696                     l2349 065D  
                   l2357 067B                     l2437 0FA6                     l2429 0F9E  
                   l2453 049A                     l2445 0441                     l1629 0ECB  
                   l2381 0F3B                     l2373 0F29                     l2285 0E2E  
                   l2541 01A8                     l2533 015E                     l2517 0127  
                   l2525 0143                     l2509 0108                     l2461 0028  
                   l2621 0312                     l2701 0301                     l2613 02E9  
                   l2605 02B5                     l2367 069B                     l2439 0FA8  
                   l2455 04A7                     l2447 0445                     l1911 0EF2  
                   l1903 0EE7                     l2383 0F4C                     l2375 0F2C  
                   l2391 0F60                     l2295 0E8B                     l2287 0E34  
                   l2535 0161                     l2527 0149                     l2519 012D  
                   l2703 004F                     l2463 002E                     l2543 01B1  
                   l2623 031A                     l2607 02C4                     l2457 04B4  
                   l2449 0447                     l1921 0EFB                     l1913 0EF3  
                   l1905 0EEB                     l2385 0F52                     l2377 0F33  
                   l2369 0F1F                     l2297 0E8F                     l2289 0E3A  
                   l2537 019F                     l2529 014E                     l2545 01C1  
                   l2705 00CC                     l2481 008B                     l2473 0041  
                   l2465 0033                     l2609 02CF                     l2617 02F3  
                   l2561 01CF                     l1931 0F03                     l1923 0EFC  
                   l1915 0EF6                     l1907 0EEC                     l2387 0F53  
                   l2379 0F37                     l2395 07BE                     l2299 0E93  
                   l2539 01A4                     l2483 009E                     l2491 00B8  
                   l2475 0054                     l2467 0038                     l2459 0025  
                   l2619 0309                     l2571 0210                     l2563 01E2  
                   l1941 0F14                     l1933 0F04                     l1925 0F00  
                   l1917 0EF9                     l1909 0EF0                     l2389 0F5A  
                   l2397 07C6                     l2493 00D4                     l2485 00A2  
                   l2477 0064                     l2469 003D                     l2581 024D  
                   l2573 021B                     l2565 01E5                     l2557 01C6  
                   l1951 0F1D                     l1943 0F17                     l1935 0F0A  
                   l1927 0F01                     l1919 0EFA                     l2399 07C9  
                   l2495 00DC                     l2487 00B3                     l2479 0068  
                   l2583 0250                     l2575 0229                     l2567 01F4  
                   l2559 01CB                     l1945 0F1A                     l1937 0F0C  
                   l1929 0F02                     l2497 00E0                     l2593 026C  
                   l2585 0254                     l2577 0234                     l2569 0202  
                   l1947 0F1B                     l1939 0F0D                     l1891 0E21  
                   l2595 027D                     l2587 025A                     l2579 0242  
                   l1949 0F1C                     l1893 0E26                     l2597 027E  
                   l2589 025E                     l1887 0E17                     l1889 0E1D  
                   l1995 0DDA                     l1899 0E28                     ?_isr 0070  
                   STR_1 0829                     STR_2 083D                     STR_3 083D  
                   STR_4 0840                     STR_5 083D                     STR_6 083D  
                   STR_7 0829                     _CREN 00C4                     u1040 0E12  
                   u1041 0E11                     u1050 0EE6                     u1051 0EE5  
                   u2200 0628                     u2120 0EAD                     u2201 0627  
                   u2121 0EAC                     u2105 0E9A                     u2210 0643  
                   u2130 0748                     u2131 0747                     u2115 0EA1  
                   u2220 065D                     u2300 0F29                     u2221 065C  
                   u2301 0F28                     u2230 0664                     u2150 0762  
                   u2070 0E34                     u2231 0663                     u2215 063E  
                   u2151 0761                     u2071 0E33                     u2320 0F3B  
                   u2400 07E6                     u2080 0E3A                     u2145 074F  
                   u2321 0F3A                     u2401 07E5                     u2081 0E39  
                   u2250 067A                     u2170 0782                     u2090 0E93  
                   u2251 0679                     u2171 0781                     u2315 0F2D  
                   u2091 0E92                     u2260 0681                     u2340 0F4C  
                   u2420 07F9                     u2500 0064                     u2261 0680  
                   u2245 0666                     u2165 0765                     u2341 0F4B  
                   u2421 07F8                     u2405 07E2                     u2501 0063  
                   u2430 0FAE                     u2190 07A5                     u2510 00B2  
                   u1710 0E1D                     u2431 0FAD                     u2191 07A4  
                   u2175 077E                     u2335 0F3C                     u2415 07ED  
                   u2511 00B1                     u1711 0E1C                     u2280 0696  
                   u2440 040B                     u2360 0F60                     u2600 01B1  
                   u2520 00FD                     u1720 0E21                     u2281 0695  
                   u2185 0794                     u2361 0F5F                     u2345 0F48  
                   u2601 01B0                     u2521 00FC                     u1721 0E20  
                   u2290 069B                     u2450 0445                     u2370 07C6  
                   u2610 01C1                     u2530 0108                     u2291 069A  
                   u2275 0686                     u2451 0444                     u2355 0F54  
                   u2371 07C5                     u2611 01C0                     u2531 0107  
                   u2460 0454                     u2540 0113                     u2620 025A  
                   u2461 0453                     u2445 0406                     u2541 0112  
                   u2525 00F9                     u2621 0259                     u2470 0464  
                   u2390 07DC                     u2550 0127                     u2630 026B  
                   u2391 07DB                     u2551 0126                     u2631 026A  
                   u1920 0DEA                     u2480 04A7                     u2560 012D  
                   u2640 0312                     u1921 0DE9                     u2481 04A6  
                   u2465 0450                     u2385 07CA                     u2561 012C  
                   u2545 010F                     u2641 0311                     u1930 0E01  
                   u2570 0142                     u2490 002E                     u1931 0E00  
                   u2475 045F                     u2571 0141                     u2491 002D  
                   u2635 0267                     u1940 0E05                     u2580 0149  
                   u1941 0E04                     u2485 04A3                     u2581 0148  
                   u2590 015E                     u2591 015D                     u2657 020A  
                   u2667 0223                     u2677 023C                     u2687 02BD  
                   u2697 0F11                     _RCIF 0065                     _OERR 00C1  
                   _TRMT 04C1                     _WPUB 0095                     _chn1 0056  
                   _chn2 0054                     _main 01C6                     btemp 007E  
                   start 000E              _writeEEPROM 0E6B       PWmanual_func@valad 002C  
                  ??_isr 0031            ___fltol@sign1 00A0       writeEEPROM@address 0071  
                  ?_main 0070                    _EEADR 010D          __end_of___fltol 06A9  
                  _ANSEL 0188          __end_of___lldiv 07BE          __end_of___lwdiv 0F65  
                  i1l120 0E83                    i1l121 0E82                    i1l122 0E89  
                  i1l123 0E8A                    i1l117 0DFA                    i1l143 03F2  
                  i1l208 0E53                    i1l136 03C1          __end_of___lwmod 07FE  
                  i1l283 0730                    i1l284 0733                    i1l590 0595  
                  i1l585 0FCE                    i1l593 0601                    i1l586 0FEA  
                  i1l594 061A                    i1l587 0FFF                    i1l851 0576  
                  i1l862 0540                    i1l863 054C                    i1l855 0524  
                  i1l849 04E1                    _RCREG 001A                    _RCSTA 0018  
                  _SPBRG 0099                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISD 0088                    _TXREG 0019  
                  _TXSTA 0098              ?_UART_Print 0038          __end_of_dpowers 081A  
        __end_of_isdigit 0E3E                    _valad 0044          __end_of_message 0829  
                  _setup 0EE7                    main@c 00C0                    pclath 000A  
       __end_of_PWM_init 0FB0         __end_of_PWM_duty 0E54                    status 0003  
                  wtemp0 007E          __end_of_sprintf 01C6          __initialization 0011  
           __end_of_main 0324      PWmanual_init@portsl 0070                   ??_main 00B4  
                 _ADRESH 001E                   _EEDATA 010C                   _CCPR1L 0015  
                 _CCPR2L 001B                   _EECON2 018D                   ?_setup 0070  
                 _ANSELH 0189                   i1l2121 0360                   i1l2113 0324  
                 i1l2123 0386                   i1l2115 0328                   i1l2131 03B9  
                 i1l2133 03BD                   i1l2125 0390                   i1l2117 0331  
                 i1l2143 03CE                   i1l2127 0399                   i1l2119 0357  
                 u120_20 0FE2                   u200_20 03C1                   u120_21 0FE1  
                 i1l2145 03D6                   i1l2137 03C5                   u200_21 03C0  
                 i1l2129 03B6                   i1l2147 03E1                   i1l2139 03C9  
                 i1l1701 05B1                   i1l2149 03E5                   i1l1711 0619  
                 i1l1703 05B5                   u121_20 0FFC                   u201_20 03C5  
                 u121_21 0FFB                   i1l1705 05D9                   i1l1801 04C5  
                 u201_21 03C4                   i1l1707 05DD                   i1l1811 04F2  
                 i1l1803 04C9                   u121_25 0FF8                   i1l1709 0617  
                 i1l1821 051B                   i1l1813 04F5                   i1l1805 04D9  
                 i1l1831 054E                   i1l1823 052B                   i1l1815 0502  
                 i1l1807 04E9                   u122_20 058D                   u202_20 03CD  
                 u122_21 058C                   i1l1833 0564                   i1l1825 0536  
                 i1l1817 0509                   u202_21 03CC                   i1l1691 0FFE  
                 i1l1683 0FB0                   i1l1835 0569                   i1l1827 053A  
                 i1l1819 050D                   i1l1843 0DEF                   i1l1851 0E6C  
                 i1l1685 0FC6                   i1l1837 056D                   i1l1829 0544  
                 i1l1845 0DF3                   i1l1861 0E7B                   i1l1853 0E72  
                 i1l1871 0E46                   i1l1687 0FE2                   i1l1695 0577  
                 i1l1839 056E                   i1l1847 0DF6                   i1l1863 0E7D  
                 i1l1855 0E75                   u123_20 05A9                   u203_20 03E5  
                 i1l1873 0E4D                   i1l1689 0FFC                   u123_21 05A8  
                 i1l1697 058D                   i1l1881 06E0                   i1l1865 0E7E  
                 i1l1857 0E78                   u203_21 03E4                   i1l1699 05A9  
                 i1l1883 06FA                   i1l1875 06A9                   i1l1867 0E80  
                 i1l1859 0E79                   i1l1869 0E3E                   i1l1885 0702  
                 i1l1877 06AF                   i1l1799 04C0                   i1l1879 06B4  
                 u124_20 05B5                   u124_21 05B4                   u125_21 05C4  
                 u125_22 05C5                   u125_23 05CA                   u125_24 05CB  
                 u125_25 05D0                   u125_26 05D1                   u126_20 05DD  
                 u126_21 05DC                   u119_20 0FC6                   u119_21 0FC5  
                 u127_21 05EC                   u127_22 05ED                   u127_23 05F2  
                 u127_24 05F3                   u127_25 05F8                   u127_26 05F9  
                 u128_20 0617                   u160_20 053A                   u152_20 04C5  
                 u128_21 0616                   u160_21 0539                   u152_21 04C4  
                 u128_25 0613                   u161_20 0540                   u153_20 04C9  
                 _INTCON 000B                   u161_21 053F                   u153_21 04C8  
                 u162_20 0544                   u154_20 04E9                   u170_20 0730  
                 u162_21 0543                   u154_21 04E8                   u170_21 072F  
                 u163_20 0559                   u163_25 0554                   u155_25 04FA  
                 u164_20 0569                   u156_20 0508                   u164_21 0568  
                 u156_21 0507                   u165_20 056D                   u165_21 056C  
                 u157_25 051C                   u158_20 052A                   u166_20 0E89  
                 u158_21 0529                   u166_21 0E88                   u167_20 0E46  
                 u167_21 0E45                   u159_25 052F                   u168_20 06AF  
                 u168_21 06AE                   u169_20 06E0                   u169_21 06DF  
                 u195_20 0328                   u195_21 0327                   u196_20 0331  
                 u196_21 0330                   u197_20 0360                   u197_21 035F  
                 u198_20 0399                   u198_21 0398                   u199_20 03BD  
                 u199_21 03BC                   _OSCCON 008F         __end_of___xxtofl 0577  
      __end_of_UART_GetC 0E09        __end_of_UART_Init 04BF        __end_of_UART_PutC 0E17  
                 ___flge 0577                   ___fleq 0FB0                   ___wmul 0E8B  
              ??___fltol 003B                ??___lldiv 003F                ??___lwdiv 003B  
              ??___lwmod 003F                   _valadr 004E                   _valpot 004C  
                 _portsl 0058                ??_isdigit 0037                   saved_w 007E  
              ??_sprintf 00A8               ___flge@ff1 0020               ___flge@ff2 0024  
           ___xxtofl@arg 007A             ___xxtofl@exp 0079             ___xxtofl@val 0070  
             ___fleq@ff1 0020               ___fleq@ff2 0024  __end_of__initialization 001E  
             ___fltol@f1 0037           __pcstackCOMMON 0070            __end_of_setup 0F1F  
              ?_PWM_init 00A2                ?_PWM_duty 0020           _OPTION_REGbits 0081  
   PWmanual_init@numport 0037             sprintf@width 00B1                  ??_setup 0037  
             __pbssBANK0 0040               __pbssBANK1 00C1               __pmaintext 01C6  
           ?_writeEEPROM 0070                  ?___flge 0020                  ?___fleq 0020  
                ?___wmul 0037               __pintentry 0004    __end_of_PWmanual_func 0734  
  __end_of_PWmanual_init 0DE4       PWM_init@periodo_ms 00A6               ??_PWM_init 003F  
             ??_PWM_duty 0026                ?___xxtofl 0070             PWM_init@chn1 00A2  
           PWM_init@chn2 00A4             ??_UART_Print 003A             PWM_duty@duty 0022  
             __stringtab 0800               _readEEPROM 0DEE       __end_of_UART_Print 0EE7  
                ___fltol 061B                  ___lldiv 0734                  ___lwdiv 0F1F  
                ___lwmod 07BE                  __ptext1 0E17                  __ptext2 0022  
                __ptext3 0E2A                  __ptext4 0E8B                  __ptext5 07BE  
                __ptext6 0F1F                  __ptext7 0EE7                  __ptext8 0E54  
                __ptext9 0EB2                  _dpowers 0810                _T2CONbits 0012  
                _isdigit 0E2A               ??___xxtofl 0074                  _message 081A  
            UART_Print@i 003C           UART_Print@data 0038                  _numport 0050  
                _sprintf 0022                  clrloop0 0DD3     end_of_initialization 001E  
             _periodo_ms 0048        __end_of_uart_read 0E2A        __end_of_preguntas 0E6B  
        ___lldiv@divisor 0037          ___lldiv@counter 00A4                _RCSTAbits 0018  
      ??_UART_Data_Ready 0037                _UART_GetC 0DFB                _UART_Init 03FB  
              _UART_PutC 0E09                _PORTBbits 0006       UART_Init@baud_rate 00A5  
          ___xxtofl@sign 0078                _TRISCbits 0087        readEEPROM@address 0070  
            _CCP1CONbits 0017              ?_readEEPROM 0070              _CCP2CONbits 001D  
         __end_of___flge 061B           __end_of___fleq 1000           __end_of___wmul 0EB2  
             ?_UART_GetC 0070               ?_UART_Init 00A5               ?_UART_PutC 0070  
 writeEEPROM@INTCON_SAVE 0072      start_initialization 0011              __end_of_isr 03FB  
               ??___flge 0028                 ??___fleq 0028                 ??___wmul 003B  
              ___latbits 0002            __pcstackBANK0 0020            __pcstackBANK1 00A0  
           _isdigit$1183 0037              sprintf@flag 00AC              sprintf@prec 00AF  
       ___lwdiv@dividend 0039                 ?___fltol 0037                 ?___lldiv 0037  
               ?___lwdiv 0037                 ?___lwmod 00A0              ??_UART_GetC 0037  
            ??_UART_Init 00A9              ??_UART_PutC 0037                __pstrings 0800  
            PWM_duty@chn 0020                 ?_isdigit 0070            UART_PutC@data 0037  
       ___lwdiv@quotient 003D                 ?_sprintf 00A5               UART_Init@n 00AD  
      interrupt_function 0004           ___wmul@product 003B          _UART_Data_Ready 0DE4  
              clear_ram0 0DD2                 _PIE1bits 008C                 _PIR1bits 000C  
               _PIR2bits 000D                _uart_read 0E17                _preguntas 0E54  
             _ADCON0bits 001F              __stringbase 080F               _ADCON1bits 009F  
      ___wmul@multiplier 0037                 _PWM_init 0F65                 _PWM_duty 0E3E  
           ??_readEEPROM 0070               _EECON1bits 018C               ?_uart_read 0070  
             ?_preguntas 0070       __end_of__stringtab 0810            _PWmanual_func 06A9  
          _PWmanual_init 0DDA               sprintf@val 00AD                 ___xxtofl 04BF  
     __end_of_readEEPROM 0DFB          ___lwdiv@divisor 0037          ___lwdiv@counter 003C  
               __ptext10 0E09                 __ptext11 03FB                 __ptext20 0DEE  
               __ptext12 0734                 __ptext21 06A9                 __ptext13 0DFB  
               __ptext22 04BF                 __ptext14 0DE4                 __ptext23 0577  
               __ptext15 0DDA                 __ptext24 0FB0                 __ptext16 0F65  
               __ptext25 0E3E                 __ptext17 061B                 __ptext18 0324  
               __ptext19 0E6B  __end_of_UART_Data_Ready 0DEE            ??_writeEEPROM 0071  
               main@text 00B7           ?_PWmanual_func 002C           ?_PWmanual_init 0037  
             _INTCONbits 000B                 isdigit@c 0038                 intlevel1 0000  
              sprintf@ap 00AB                sprintf@sp 00B0         ___lwmod@dividend 00A2  
       ___lldiv@dividend 003B                stringcode 080A               _OSCCONbits 008F  
            ??_uart_read 0037              ??_preguntas 003D      __end_of_writeEEPROM 0E8B  
               sprintf@c 00B3                 sprintf@f 00A5         ___lldiv@quotient 00A0  
        ___lwmod@divisor 00A0          ___lwmod@counter 00A4                 stringdir 080A  
               stringtab 0800               _UART_Print 0EB2         ?_UART_Data_Ready 0070  
