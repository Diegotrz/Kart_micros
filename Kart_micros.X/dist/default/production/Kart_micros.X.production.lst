

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon May 15 16:26:47 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37     0000                     
    38                           ; Version 2.40
    39                           ; Generated 17/11/2021 GMT
    40                           ; 
    41                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F887 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73     0000                     	;# 
    74     0001                     	;# 
    75     0002                     	;# 
    76     0003                     	;# 
    77     0004                     	;# 
    78     0005                     	;# 
    79     0006                     	;# 
    80     0007                     	;# 
    81     0008                     	;# 
    82     0009                     	;# 
    83     000A                     	;# 
    84     000B                     	;# 
    85     000C                     	;# 
    86     000D                     	;# 
    87     000E                     	;# 
    88     000E                     	;# 
    89     000F                     	;# 
    90     0010                     	;# 
    91     0011                     	;# 
    92     0012                     	;# 
    93     0013                     	;# 
    94     0014                     	;# 
    95     0015                     	;# 
    96     0015                     	;# 
    97     0016                     	;# 
    98     0017                     	;# 
    99     0018                     	;# 
   100     0019                     	;# 
   101     001A                     	;# 
   102     001B                     	;# 
   103     001B                     	;# 
   104     001C                     	;# 
   105     001D                     	;# 
   106     001E                     	;# 
   107     001F                     	;# 
   108     0081                     	;# 
   109     0085                     	;# 
   110     0086                     	;# 
   111     0087                     	;# 
   112     0088                     	;# 
   113     0089                     	;# 
   114     008C                     	;# 
   115     008D                     	;# 
   116     008E                     	;# 
   117     008F                     	;# 
   118     0090                     	;# 
   119     0091                     	;# 
   120     0092                     	;# 
   121     0093                     	;# 
   122     0093                     	;# 
   123     0093                     	;# 
   124     0094                     	;# 
   125     0095                     	;# 
   126     0096                     	;# 
   127     0097                     	;# 
   128     0098                     	;# 
   129     0099                     	;# 
   130     009A                     	;# 
   131     009B                     	;# 
   132     009C                     	;# 
   133     009D                     	;# 
   134     009E                     	;# 
   135     009F                     	;# 
   136     0105                     	;# 
   137     0107                     	;# 
   138     0108                     	;# 
   139     0109                     	;# 
   140     010C                     	;# 
   141     010C                     	;# 
   142     010D                     	;# 
   143     010E                     	;# 
   144     010F                     	;# 
   145     0185                     	;# 
   146     0187                     	;# 
   147     0188                     	;# 
   148     0189                     	;# 
   149     018C                     	;# 
   150     018D                     	;# 
   151     0000                     	;# 
   152     0001                     	;# 
   153     0002                     	;# 
   154     0003                     	;# 
   155     0004                     	;# 
   156     0005                     	;# 
   157     0006                     	;# 
   158     0007                     	;# 
   159     0008                     	;# 
   160     0009                     	;# 
   161     000A                     	;# 
   162     000B                     	;# 
   163     000C                     	;# 
   164     000D                     	;# 
   165     000E                     	;# 
   166     000E                     	;# 
   167     000F                     	;# 
   168     0010                     	;# 
   169     0011                     	;# 
   170     0012                     	;# 
   171     0013                     	;# 
   172     0014                     	;# 
   173     0015                     	;# 
   174     0015                     	;# 
   175     0016                     	;# 
   176     0017                     	;# 
   177     0018                     	;# 
   178     0019                     	;# 
   179     001A                     	;# 
   180     001B                     	;# 
   181     001B                     	;# 
   182     001C                     	;# 
   183     001D                     	;# 
   184     001E                     	;# 
   185     001F                     	;# 
   186     0081                     	;# 
   187     0085                     	;# 
   188     0086                     	;# 
   189     0087                     	;# 
   190     0088                     	;# 
   191     0089                     	;# 
   192     008C                     	;# 
   193     008D                     	;# 
   194     008E                     	;# 
   195     008F                     	;# 
   196     0090                     	;# 
   197     0091                     	;# 
   198     0092                     	;# 
   199     0093                     	;# 
   200     0093                     	;# 
   201     0093                     	;# 
   202     0094                     	;# 
   203     0095                     	;# 
   204     0096                     	;# 
   205     0097                     	;# 
   206     0098                     	;# 
   207     0099                     	;# 
   208     009A                     	;# 
   209     009B                     	;# 
   210     009C                     	;# 
   211     009D                     	;# 
   212     009E                     	;# 
   213     009F                     	;# 
   214     0105                     	;# 
   215     0107                     	;# 
   216     0108                     	;# 
   217     0109                     	;# 
   218     010C                     	;# 
   219     010C                     	;# 
   220     010D                     	;# 
   221     010E                     	;# 
   222     010F                     	;# 
   223     0185                     	;# 
   224     0187                     	;# 
   225     0188                     	;# 
   226     0189                     	;# 
   227     018C                     	;# 
   228     018D                     	;# 
   229     0000                     	;# 
   230     0001                     	;# 
   231     0002                     	;# 
   232     0003                     	;# 
   233     0004                     	;# 
   234     0005                     	;# 
   235     0006                     	;# 
   236     0007                     	;# 
   237     0008                     	;# 
   238     0009                     	;# 
   239     000A                     	;# 
   240     000B                     	;# 
   241     000C                     	;# 
   242     000D                     	;# 
   243     000E                     	;# 
   244     000E                     	;# 
   245     000F                     	;# 
   246     0010                     	;# 
   247     0011                     	;# 
   248     0012                     	;# 
   249     0013                     	;# 
   250     0014                     	;# 
   251     0015                     	;# 
   252     0015                     	;# 
   253     0016                     	;# 
   254     0017                     	;# 
   255     0018                     	;# 
   256     0019                     	;# 
   257     001A                     	;# 
   258     001B                     	;# 
   259     001B                     	;# 
   260     001C                     	;# 
   261     001D                     	;# 
   262     001E                     	;# 
   263     001F                     	;# 
   264     0081                     	;# 
   265     0085                     	;# 
   266     0086                     	;# 
   267     0087                     	;# 
   268     0088                     	;# 
   269     0089                     	;# 
   270     008C                     	;# 
   271     008D                     	;# 
   272     008E                     	;# 
   273     008F                     	;# 
   274     0090                     	;# 
   275     0091                     	;# 
   276     0092                     	;# 
   277     0093                     	;# 
   278     0093                     	;# 
   279     0093                     	;# 
   280     0094                     	;# 
   281     0095                     	;# 
   282     0096                     	;# 
   283     0097                     	;# 
   284     0098                     	;# 
   285     0099                     	;# 
   286     009A                     	;# 
   287     009B                     	;# 
   288     009C                     	;# 
   289     009D                     	;# 
   290     009E                     	;# 
   291     009F                     	;# 
   292     0105                     	;# 
   293     0107                     	;# 
   294     0108                     	;# 
   295     0109                     	;# 
   296     010C                     	;# 
   297     010C                     	;# 
   298     010D                     	;# 
   299     010E                     	;# 
   300     010F                     	;# 
   301     0185                     	;# 
   302     0187                     	;# 
   303     0188                     	;# 
   304     0189                     	;# 
   305     018C                     	;# 
   306     018D                     	;# 
   307     0000                     	;# 
   308     0001                     	;# 
   309     0002                     	;# 
   310     0003                     	;# 
   311     0004                     	;# 
   312     0005                     	;# 
   313     0006                     	;# 
   314     0007                     	;# 
   315     0008                     	;# 
   316     0009                     	;# 
   317     000A                     	;# 
   318     000B                     	;# 
   319     000C                     	;# 
   320     000D                     	;# 
   321     000E                     	;# 
   322     000E                     	;# 
   323     000F                     	;# 
   324     0010                     	;# 
   325     0011                     	;# 
   326     0012                     	;# 
   327     0013                     	;# 
   328     0014                     	;# 
   329     0015                     	;# 
   330     0015                     	;# 
   331     0016                     	;# 
   332     0017                     	;# 
   333     0018                     	;# 
   334     0019                     	;# 
   335     001A                     	;# 
   336     001B                     	;# 
   337     001B                     	;# 
   338     001C                     	;# 
   339     001D                     	;# 
   340     001E                     	;# 
   341     001F                     	;# 
   342     0081                     	;# 
   343     0085                     	;# 
   344     0086                     	;# 
   345     0087                     	;# 
   346     0088                     	;# 
   347     0089                     	;# 
   348     008C                     	;# 
   349     008D                     	;# 
   350     008E                     	;# 
   351     008F                     	;# 
   352     0090                     	;# 
   353     0091                     	;# 
   354     0092                     	;# 
   355     0093                     	;# 
   356     0093                     	;# 
   357     0093                     	;# 
   358     0094                     	;# 
   359     0095                     	;# 
   360     0096                     	;# 
   361     0097                     	;# 
   362     0098                     	;# 
   363     0099                     	;# 
   364     009A                     	;# 
   365     009B                     	;# 
   366     009C                     	;# 
   367     009D                     	;# 
   368     009E                     	;# 
   369     009F                     	;# 
   370     0105                     	;# 
   371     0107                     	;# 
   372     0108                     	;# 
   373     0109                     	;# 
   374     010C                     	;# 
   375     010C                     	;# 
   376     010D                     	;# 
   377     010E                     	;# 
   378     010F                     	;# 
   379     0185                     	;# 
   380     0187                     	;# 
   381     0188                     	;# 
   382     0189                     	;# 
   383     018C                     	;# 
   384     018D                     	;# 
   385                           
   386                           	psect	strings
   387     0600                     __pstrings:
   388     0600                     stringtab:
   389     0600                     __stringtab:
   390                           
   391                           ;	String table - string pointers are 1 byte each
   392     0600  1BFF               	btfsc	btemp+1,7
   393     0601  2E0A               	ljmp	stringcode
   394     0602  1383               	bcf	3,7
   395     0603  187F               	btfsc	btemp+1,0
   396     0604  1783               	bsf	3,7
   397     0605  0800               	movf	0,w
   398     0606  0A84               	incf	4,f
   399     0607  1903               	skipnz
   400     0608  0AFF               	incf	btemp+1,f
   401     0609  0008               	return
   402     060A                     stringcode:
   403     060A                     stringdir:
   404     060A  3006               	movlw	high stringdir
   405     060B  008A               	movwf	10
   406     060C  0804               	movf	4,w
   407     060D  0A84               	incf	4,f
   408     060E  0782               	addwf	2,f
   409     060F                     __stringbase:
   410     060F  3400               	retlw	0
   411     0610                     __end_of__stringtab:
   412     0610                     _dpowers:
   413     0610  3401               	retlw	1
   414     0611  3400               	retlw	0
   415     0612  340A               	retlw	10
   416     0613  3400               	retlw	0
   417     0614  3464               	retlw	100
   418     0615  3400               	retlw	0
   419     0616  34E8               	retlw	232
   420     0617  3403               	retlw	3
   421     0618  3410               	retlw	16
   422     0619  3427               	retlw	39
   423     061A                     __end_of_dpowers:
   424     061A                     _message:
   425     061A  3432               	retlw	50
   426     061B  342E               	retlw	46
   427     061C  3445               	retlw	69
   428     061D  346E               	retlw	110
   429     061E  3476               	retlw	118
   430     061F  3469               	retlw	105
   431     0620  3461               	retlw	97
   432     0621  3472               	retlw	114
   433     0622  3420               	retlw	32
   434     0623  3441               	retlw	65
   435     0624  3473               	retlw	115
   436     0625  3463               	retlw	99
   437     0626  3469               	retlw	105
   438     0627  3469               	retlw	105
   439     0628  3400               	retlw	0
   440     0629                     __end_of_message:
   441     0019                     _TXREG	set	25
   442     0018                     _RCSTA	set	24
   443     001B                     _CCPR2L	set	27
   444     001D                     _CCP2CONbits	set	29
   445     0012                     _T2CONbits	set	18
   446     0015                     _CCPR1L	set	21
   447     0017                     _CCP1CONbits	set	23
   448     0007                     _PORTC	set	7
   449     0006                     _PORTB	set	6
   450     001A                     _RCREG	set	26
   451     0018                     _RCSTAbits	set	24
   452     0008                     _PORTD	set	8
   453     0009                     _PORTE	set	9
   454     0006                     _PORTBbits	set	6
   455     000B                     _INTCONbits	set	11
   456     001E                     _ADRESH	set	30
   457     001F                     _ADCON0bits	set	31
   458     000C                     _PIR1bits	set	12
   459     000D                     _PIR2bits	set	13
   460     000B                     _INTCON	set	11
   461     00C4                     _CREN	set	196
   462     00C1                     _OERR	set	193
   463     0065                     _RCIF	set	101
   464     0032                     _RB2	set	50
   465     0031                     _RB1	set	49
   466     0098                     _TXSTA	set	152
   467     0099                     _SPBRG	set	153
   468     0092                     _PR2	set	146
   469     0087                     _TRISCbits	set	135
   470     008C                     _PIE1bits	set	140
   471     009F                     _ADCON1bits	set	159
   472     008F                     _OSCCONbits	set	143
   473     0095                     _WPUB	set	149
   474     0081                     _OPTION_REGbits	set	129
   475     0088                     _TRISD	set	136
   476     0086                     _TRISB	set	134
   477     0085                     _TRISA	set	133
   478     008F                     _OSCCON	set	143
   479     04C1                     _TRMT	set	1217
   480     010C                     _EEDATA	set	268
   481     010D                     _EEADR	set	269
   482     0189                     _ANSELH	set	393
   483     0188                     _ANSEL	set	392
   484     018D                     _EECON2	set	397
   485     018C                     _EECON1bits	set	396
   486     0629                     STR_1:
   487     0629  3431               	retlw	49	;'1'
   488     062A  342E               	retlw	46	;'.'
   489     062B  344C               	retlw	76	;'L'
   490     062C  3465               	retlw	101	;'e'
   491     062D  3465               	retlw	101	;'e'
   492     062E  3472               	retlw	114	;'r'
   493     062F  3420               	retlw	32	;' '
   494     0630  3470               	retlw	112	;'p'
   495     0631  346F               	retlw	111	;'o'
   496     0632  3474               	retlw	116	;'t'
   497     0633  3465               	retlw	101	;'e'
   498     0634  346E               	retlw	110	;'n'
   499     0635  3463               	retlw	99	;'c'
   500     0636  3469               	retlw	105	;'i'
   501     0637  346F               	retlw	111	;'o'
   502     0638  346D               	retlw	109	;'m'
   503     0639  3465               	retlw	101	;'e'
   504     063A  3474               	retlw	116	;'t'
   505     063B  3472               	retlw	114	;'r'
   506     063C  346F               	retlw	111	;'o'
   507     063D  340D               	retlw	13
   508     063E  340A               	retlw	10
   509     063F  3400               	retlw	0
   510     0640                     STR_4:
   511     0640  3425               	retlw	37	;'%'
   512     0641  3430               	retlw	48	;'0'
   513     0642  3433               	retlw	51	;'3'
   514     0643  3475               	retlw	117	;'u'
   515     0644  340D               	retlw	13
   516     0645  340A               	retlw	10
   517     0646  3400               	retlw	0
   518     063D                     
   519                           	psect	cinit
   520     0011                     start_initialization:	
   521                           ; #config settings
   522                           
   523     0011                     __initialization:
   524                           
   525                           ; Clear objects allocated to BANK0
   526     0011  1383               	bcf	3,7	;select IRP bank0
   527     0012  304D               	movlw	low __pbssBANK0
   528     0013  0084               	movwf	4
   529     0014  3061               	movlw	low (__pbssBANK0+20)
   530     0015  120A  158A  27C0  120A  118A  	fcall	clear_ram0
   531     001A                     end_of_initialization:	
   532                           ;End of C runtime variable initialization code
   533                           
   534     001A                     __end_of__initialization:
   535     001A  0183               	clrf	3
   536     001B  120A  118A  29A4   	ljmp	_main	;jump to C main() function
   537                           
   538                           	psect	bssBANK0
   539     004D                     __pbssBANK0:
   540     004D                     _val:
   541     004D                     	ds	4
   542     0051                     _periodo_ms:
   543     0051                     	ds	4
   544     0055                     _valpot:
   545     0055                     	ds	2
   546     0057                     _valadr:
   547     0057                     	ds	2
   548     0059                     _i:
   549     0059                     	ds	2
   550     005B                     _chn:
   551     005B                     	ds	2
   552     005D                     _chn2:
   553     005D                     	ds	2
   554     005F                     _chn1:
   555     005F                     	ds	2
   556                           
   557                           	psect	clrtext
   558     0FC0                     clear_ram0:	
   559                           ;	Called with FSR containing the base address, and
   560                           ;	W with the last address+1
   561                           
   562     0FC0  0064               	clrwdt	;clear the watchdog before getting into this loop
   563     0FC1                     clrloop0:
   564     0FC1  0180               	clrf	0	;clear RAM location pointed to by FSR
   565     0FC2  0A84               	incf	4,f	;increment pointer
   566     0FC3  0604               	xorwf	4,w	;XOR with final address
   567     0FC4  1903               	btfsc	3,2	;have we reached the end yet?
   568     0FC5  3400               	retlw	0	;all done for this memory range, return
   569     0FC6  0604               	xorwf	4,w	;XOR again to restore value
   570     0FC7  2FC1               	goto	clrloop0	;do the next byte
   571                           
   572                           	psect	cstackBANK1
   573     00A0                     __pcstackBANK1:
   574     00A0                     main@text:
   575                           
   576                           ; 9 bytes @ 0x0
   577     00A0                     	ds	9
   578     00A9                     main@c:
   579                           
   580                           ; 1 bytes @ 0x9
   581     00A9                     	ds	1
   582                           
   583                           	psect	cstackCOMMON
   584     0070                     __pcstackCOMMON:
   585     0070                     ?_UART_Data_Ready:
   586     0070                     ?_isdigit:	
   587                           ; 1 bit 
   588                           
   589     0070                     ?_setup:	
   590                           ; 1 bit 
   591                           
   592     0070                     ?_preguntas:	
   593                           ; 1 bytes @ 0x0
   594                           
   595     0070                     ?_UART_GetC:	
   596                           ; 1 bytes @ 0x0
   597                           
   598     0070                     ?_UART_PutC:	
   599                           ; 1 bytes @ 0x0
   600                           
   601     0070                     ?_readEEPROM:	
   602                           ; 1 bytes @ 0x0
   603                           
   604     0070                     ??_readEEPROM:	
   605                           ; 1 bytes @ 0x0
   606                           
   607     0070                     ?_writeEEPROM:	
   608                           ; 1 bytes @ 0x0
   609                           
   610     0070                     ?_isr:	
   611                           ; 1 bytes @ 0x0
   612                           
   613     0070                     ?_uart_read:	
   614                           ; 1 bytes @ 0x0
   615                           
   616     0070                     ?_main:	
   617                           ; 1 bytes @ 0x0
   618                           
   619     0070                     ?___xxtofl:	
   620                           ; 1 bytes @ 0x0
   621                           
   622     0070                     readEEPROM@address:	
   623                           ; 4 bytes @ 0x0
   624                           
   625     0070                     writeEEPROM@dataEE:	
   626                           ; 1 bytes @ 0x0
   627                           
   628     0070                     ___xxtofl@val:	
   629                           ; 1 bytes @ 0x0
   630                           
   631                           
   632                           ; 4 bytes @ 0x0
   633     0070                     	ds	1
   634     0071                     ??_writeEEPROM:
   635     0071                     writeEEPROM@address:	
   636                           ; 1 bytes @ 0x1
   637                           
   638                           
   639                           ; 1 bytes @ 0x1
   640     0071                     	ds	1
   641     0072                     writeEEPROM@INTCON_SAVE:
   642                           
   643                           ; 1 bytes @ 0x2
   644     0072                     	ds	2
   645     0074                     ??___xxtofl:
   646                           
   647                           ; 1 bytes @ 0x4
   648     0074                     	ds	4
   649     0078                     ___xxtofl@sign:
   650                           
   651                           ; 1 bytes @ 0x8
   652     0078                     	ds	1
   653     0079                     ___xxtofl@exp:
   654                           
   655                           ; 1 bytes @ 0x9
   656     0079                     	ds	1
   657     007A                     ___xxtofl@arg:
   658                           
   659                           ; 4 bytes @ 0xA
   660     007A                     	ds	4
   661                           
   662                           	psect	cstackBANK0
   663     0020                     __pcstackBANK0:
   664     0020                     ?_PWM_duty:
   665     0020                     PWM_duty@chn:	
   666                           ; 1 bytes @ 0x0
   667                           
   668                           
   669                           ; 2 bytes @ 0x0
   670     0020                     	ds	2
   671     0022                     PWM_duty@duty:
   672                           
   673                           ; 4 bytes @ 0x2
   674     0022                     	ds	4
   675     0026                     ??_PWM_duty:
   676                           
   677                           ; 1 bytes @ 0x6
   678     0026                     	ds	1
   679     0027                     ??_isr:
   680                           
   681                           ; 1 bytes @ 0x7
   682     0027                     	ds	6
   683     002D                     ??_setup:
   684     002D                     ??_UART_Data_Ready:	
   685                           ; 1 bytes @ 0xD
   686                           
   687     002D                     ??_UART_GetC:	
   688                           ; 1 bytes @ 0xD
   689                           
   690     002D                     ??_UART_PutC:	
   691                           ; 1 bytes @ 0xD
   692                           
   693     002D                     ??_isdigit:	
   694                           ; 1 bytes @ 0xD
   695                           
   696     002D                     ??_uart_read:	
   697                           ; 1 bytes @ 0xD
   698                           
   699     002D                     ?___wmul:	
   700                           ; 1 bytes @ 0xD
   701                           
   702     002D                     ?___lwdiv:	
   703                           ; 2 bytes @ 0xD
   704                           
   705     002D                     ?___lldiv:	
   706                           ; 2 bytes @ 0xD
   707                           
   708     002D                     ?___fltol:	
   709                           ; 4 bytes @ 0xD
   710                           
   711     002D                     UART_PutC@data:	
   712                           ; 4 bytes @ 0xD
   713                           
   714     002D                     _isdigit$1125:	
   715                           ; 1 bytes @ 0xD
   716                           
   717     002D                     ___wmul@multiplier:	
   718                           ; 1 bytes @ 0xD
   719                           
   720     002D                     ___lwdiv@divisor:	
   721                           ; 2 bytes @ 0xD
   722                           
   723     002D                     ___lldiv@divisor:	
   724                           ; 2 bytes @ 0xD
   725                           
   726     002D                     ___fltol@f1:	
   727                           ; 4 bytes @ 0xD
   728                           
   729                           
   730                           ; 4 bytes @ 0xD
   731     002D                     	ds	1
   732     002E                     ?_UART_Print:
   733     002E                     isdigit@c:	
   734                           ; 1 bytes @ 0xE
   735                           
   736     002E                     UART_Print@data:	
   737                           ; 1 bytes @ 0xE
   738                           
   739                           
   740                           ; 2 bytes @ 0xE
   741     002E                     	ds	1
   742     002F                     ___wmul@multiplicand:
   743     002F                     ___lwdiv@dividend:	
   744                           ; 2 bytes @ 0xF
   745                           
   746                           
   747                           ; 2 bytes @ 0xF
   748     002F                     	ds	1
   749     0030                     ??_UART_Print:
   750                           
   751                           ; 1 bytes @ 0x10
   752     0030                     	ds	1
   753     0031                     ??___wmul:
   754     0031                     ??___fltol:	
   755                           ; 1 bytes @ 0x11
   756                           
   757     0031                     ??___lwdiv:	
   758                           ; 1 bytes @ 0x11
   759                           
   760     0031                     ___wmul@product:	
   761                           ; 1 bytes @ 0x11
   762                           
   763     0031                     ___lldiv@dividend:	
   764                           ; 2 bytes @ 0x11
   765                           
   766                           
   767                           ; 4 bytes @ 0x11
   768     0031                     	ds	1
   769     0032                     UART_Print@i:
   770     0032                     ___lwdiv@counter:	
   771                           ; 1 bytes @ 0x12
   772                           
   773                           
   774                           ; 1 bytes @ 0x12
   775     0032                     	ds	1
   776     0033                     ??_preguntas:
   777     0033                     ___lwdiv@quotient:	
   778                           ; 1 bytes @ 0x13
   779                           
   780                           
   781                           ; 2 bytes @ 0x13
   782     0033                     	ds	2
   783     0035                     ??___lldiv:
   784     0035                     ?___lwmod:	
   785                           ; 1 bytes @ 0x15
   786                           
   787     0035                     ___fltol@sign1:	
   788                           ; 2 bytes @ 0x15
   789                           
   790     0035                     ___lwmod@divisor:	
   791                           ; 1 bytes @ 0x15
   792                           
   793                           
   794                           ; 2 bytes @ 0x15
   795     0035                     	ds	1
   796     0036                     ___fltol@exp1:
   797     0036                     ___lldiv@quotient:	
   798                           ; 1 bytes @ 0x16
   799                           
   800                           
   801                           ; 4 bytes @ 0x16
   802     0036                     	ds	1
   803     0037                     ?_PWM_init:
   804     0037                     PWM_init@chn1:	
   805                           ; 1 bytes @ 0x17
   806                           
   807     0037                     ___lwmod@dividend:	
   808                           ; 2 bytes @ 0x17
   809                           
   810                           
   811                           ; 2 bytes @ 0x17
   812     0037                     	ds	2
   813     0039                     ??___lwmod:
   814     0039                     PWM_init@chn2:	
   815                           ; 1 bytes @ 0x19
   816                           
   817                           
   818                           ; 2 bytes @ 0x19
   819     0039                     	ds	1
   820     003A                     ___lldiv@counter:
   821     003A                     ___lwmod@counter:	
   822                           ; 1 bytes @ 0x1A
   823                           
   824                           
   825                           ; 1 bytes @ 0x1A
   826     003A                     	ds	1
   827     003B                     ?_UART_Init:
   828     003B                     ?_sprintf:	
   829                           ; 1 bytes @ 0x1B
   830                           
   831     003B                     sprintf@f:	
   832                           ; 2 bytes @ 0x1B
   833                           
   834     003B                     PWM_init@periodo_ms:	
   835                           ; 1 bytes @ 0x1B
   836                           
   837     003B                     UART_Init@baud_rate:	
   838                           ; 4 bytes @ 0x1B
   839                           
   840                           
   841                           ; 4 bytes @ 0x1B
   842     003B                     	ds	3
   843     003E                     ??_sprintf:
   844                           
   845                           ; 1 bytes @ 0x1E
   846     003E                     	ds	1
   847     003F                     ??_PWM_init:
   848     003F                     ??_UART_Init:	
   849                           ; 1 bytes @ 0x1F
   850                           
   851                           
   852                           ; 1 bytes @ 0x1F
   853     003F                     	ds	2
   854     0041                     sprintf@ap:
   855                           
   856                           ; 1 bytes @ 0x21
   857     0041                     	ds	1
   858     0042                     sprintf@flag:
   859                           
   860                           ; 1 bytes @ 0x22
   861     0042                     	ds	1
   862     0043                     UART_Init@n:
   863     0043                     sprintf@val:	
   864                           ; 2 bytes @ 0x23
   865                           
   866                           
   867                           ; 2 bytes @ 0x23
   868     0043                     	ds	2
   869     0045                     sprintf@prec:
   870                           
   871                           ; 1 bytes @ 0x25
   872     0045                     	ds	1
   873     0046                     sprintf@sp:
   874                           
   875                           ; 1 bytes @ 0x26
   876     0046                     	ds	1
   877     0047                     sprintf@width:
   878                           
   879                           ; 2 bytes @ 0x27
   880     0047                     	ds	2
   881     0049                     sprintf@c:
   882                           
   883                           ; 1 bytes @ 0x29
   884     0049                     	ds	1
   885     004A                     ??_main:
   886                           
   887                           ; 1 bytes @ 0x2A
   888     004A                     	ds	3
   889                           
   890                           	psect	maintext
   891     01A4                     __pmaintext:	
   892 ;;
   893 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   894 ;;
   895 ;; *************** function _main *****************
   896 ;; Defined at:
   897 ;;		line 150 in file "Kart_main.c"
   898 ;; Parameters:    Size  Location     Type
   899 ;;		None
   900 ;; Auto vars:     Size  Location     Type
   901 ;;  c               1    9[BANK1 ] unsigned char 
   902 ;;  text            9    0[BANK1 ] unsigned char [9]
   903 ;; Return value:  Size  Location     Type
   904 ;;                  1    wreg      void 
   905 ;; Registers used:
   906 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   907 ;; Tracked objects:
   908 ;;		On entry : B00/0
   909 ;;		On exit  : 0/0
   910 ;;		Unchanged: 0/0
   911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   912 ;;      Params:         0       0       0       0       0
   913 ;;      Locals:         0       0      10       0       0
   914 ;;      Temps:          0       3       0       0       0
   915 ;;      Totals:         0       3      10       0       0
   916 ;;Total ram usage:       13 bytes
   917 ;; Hardware stack levels required when called: 5
   918 ;; This function calls:
   919 ;;		_PWM_init
   920 ;;		_UART_Data_Ready
   921 ;;		_UART_GetC
   922 ;;		_UART_Init
   923 ;;		_UART_Print
   924 ;;		_UART_PutC
   925 ;;		_preguntas
   926 ;;		_setup
   927 ;;		_sprintf
   928 ;;		_uart_read
   929 ;; This function is called by:
   930 ;;		Startup code after reset
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934     01A4                     _main:	
   935                           ;psect for function _main
   936                           
   937     01A4                     l2486:	
   938                           ;incstack = 0
   939                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   940                           
   941                           
   942                           ;Kart_main.c: 152:     setup();
   943     01A4  120A  118A  270E  120A  118A  	fcall	_setup
   944     01A9                     l2488:
   945                           
   946                           ;Kart_main.c: 153:     OSCCON = 0x70;
   947     01A9  3070               	movlw	112
   948     01AA  1683               	bsf	3,5	;RP0=1, select bank1
   949     01AB  1303               	bcf	3,6	;RP1=0, select bank1
   950     01AC  008F               	movwf	15	;volatile
   951     01AD                     l2490:
   952                           
   953                           ;Kart_main.c: 154:      PWM_init (0,0,255);
   954     01AD  3000               	movlw	0
   955     01AE  1283               	bcf	3,5	;RP0=0, select bank0
   956     01AF  1303               	bcf	3,6	;RP1=0, select bank0
   957     01B0  00B7               	movwf	PWM_init@chn1
   958     01B1  00B8               	movwf	PWM_init@chn1+1
   959     01B2  3000               	movlw	0
   960     01B3  00B9               	movwf	PWM_init@chn2
   961     01B4  00BA               	movwf	PWM_init@chn2+1
   962     01B5  3043               	movlw	67
   963     01B6  00BE               	movwf	PWM_init@periodo_ms+3
   964     01B7  307F               	movlw	127
   965     01B8  00BD               	movwf	PWM_init@periodo_ms+2
   966     01B9  3000               	movlw	0
   967     01BA  00BC               	movwf	PWM_init@periodo_ms+1
   968     01BB  3000               	movlw	0
   969     01BC  00BB               	movwf	PWM_init@periodo_ms
   970     01BD  120A  118A  268D  120A  118A  	fcall	_PWM_init
   971     01C2                     l2492:
   972                           
   973                           ;Kart_main.c: 155:     ADCON0bits.GO =1;
   974     01C2  1283               	bcf	3,5	;RP0=0, select bank0
   975     01C3  1303               	bcf	3,6	;RP1=0, select bank0
   976     01C4  149F               	bsf	31,1	;volatile
   977     01C5                     l2494:
   978                           
   979                           ;Kart_main.c: 156:     UART_Init(9600);
   980     01C5  3000               	movlw	0
   981     01C6  00BE               	movwf	UART_Init@baud_rate+3
   982     01C7  3000               	movlw	0
   983     01C8  00BD               	movwf	UART_Init@baud_rate+2
   984     01C9  3025               	movlw	37
   985     01CA  00BC               	movwf	UART_Init@baud_rate+1
   986     01CB  3080               	movlw	128
   987     01CC  00BB               	movwf	UART_Init@baud_rate
   988     01CD  120A  118A  2465  120A  118A  	fcall	_UART_Init
   989     01D2                     l2496:
   990                           
   991                           ;Kart_main.c: 158:   _delay((unsigned long)((2000)*(4000000/4000.0)));
   992     01D2  300B               	movlw	11
   993     01D3  1283               	bcf	3,5	;RP0=0, select bank0
   994     01D4  1303               	bcf	3,6	;RP1=0, select bank0
   995     01D5  00CC               	movwf	??_main+2
   996     01D6  3026               	movlw	38
   997     01D7  00CB               	movwf	??_main+1
   998     01D8  305D               	movlw	93
   999     01D9  00CA               	movwf	??_main
  1000     01DA                     u2467:
  1001     01DA  0BCA               	decfsz	??_main,f
  1002     01DB  29DA               	goto	u2467
  1003     01DC  0BCB               	decfsz	??_main+1,f
  1004     01DD  29DA               	goto	u2467
  1005     01DE  0BCC               	decfsz	??_main+2,f
  1006     01DF  29DA               	goto	u2467
  1007     01E0                     l2498:
  1008                           
  1009                           ;Kart_main.c: 160:   UART_Print("1.Leer potenciometro\r\n");
  1010     01E0  301A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1011     01E1  1283               	bcf	3,5	;RP0=0, select bank0
  1012     01E2  1303               	bcf	3,6	;RP1=0, select bank0
  1013     01E3  00AE               	movwf	UART_Print@data
  1014     01E4  3080               	movlw	128
  1015     01E5  00AF               	movwf	UART_Print@data+1
  1016     01E6  120A  118A  2746  120A  118A  	fcall	_UART_Print
  1017     01EB                     l2500:
  1018                           
  1019                           ;Kart_main.c: 162:   _delay((unsigned long)((1000)*(4000000/4000.0)));
  1020     01EB  3006               	movlw	6
  1021     01EC  1283               	bcf	3,5	;RP0=0, select bank0
  1022     01ED  1303               	bcf	3,6	;RP1=0, select bank0
  1023     01EE  00CC               	movwf	??_main+2
  1024     01EF  3013               	movlw	19
  1025     01F0  00CB               	movwf	??_main+1
  1026     01F1  30AD               	movlw	173
  1027     01F2  00CA               	movwf	??_main
  1028     01F3                     u2477:
  1029     01F3  0BCA               	decfsz	??_main,f
  1030     01F4  29F3               	goto	u2477
  1031     01F5  0BCB               	decfsz	??_main+1,f
  1032     01F6  29F3               	goto	u2477
  1033     01F7  0BCC               	decfsz	??_main+2,f
  1034     01F8  29F3               	goto	u2477
  1035     01F9                     l2502:
  1036                           
  1037                           ;Kart_main.c: 164:   UART_Print(message);
  1038     01F9  300B               	movlw	(low ((_message-__stringbase)| (0+32768)))& (0+255)
  1039     01FA  1283               	bcf	3,5	;RP0=0, select bank0
  1040     01FB  1303               	bcf	3,6	;RP1=0, select bank0
  1041     01FC  00AE               	movwf	UART_Print@data
  1042     01FD  3080               	movlw	128
  1043     01FE  00AF               	movwf	UART_Print@data+1
  1044     01FF  120A  118A  2746  120A  118A  	fcall	_UART_Print
  1045     0204                     l2504:
  1046                           
  1047                           ;Kart_main.c: 166:   _delay((unsigned long)((1000)*(4000000/4000.0)));
  1048     0204  3006               	movlw	6
  1049     0205  1283               	bcf	3,5	;RP0=0, select bank0
  1050     0206  1303               	bcf	3,6	;RP1=0, select bank0
  1051     0207  00CC               	movwf	??_main+2
  1052     0208  3013               	movlw	19
  1053     0209  00CB               	movwf	??_main+1
  1054     020A  30AD               	movlw	173
  1055     020B  00CA               	movwf	??_main
  1056     020C                     u2487:
  1057     020C  0BCA               	decfsz	??_main,f
  1058     020D  2A0C               	goto	u2487
  1059     020E  0BCB               	decfsz	??_main+1,f
  1060     020F  2A0C               	goto	u2487
  1061     0210  0BCC               	decfsz	??_main+2,f
  1062     0211  2A0C               	goto	u2487
  1063     0212                     l2506:
  1064                           
  1065                           ;Kart_main.c: 168:   UART_Print("\r\n");
  1066     0212  302E               	movlw	(low (((STR_1+20)-__stringbase)| (0+32768)))& (0+255)
  1067     0213  1283               	bcf	3,5	;RP0=0, select bank0
  1068     0214  1303               	bcf	3,6	;RP1=0, select bank0
  1069     0215  00AE               	movwf	UART_Print@data
  1070     0216  3080               	movlw	128
  1071     0217  00AF               	movwf	UART_Print@data+1
  1072     0218  120A  118A  2746  120A  118A  	fcall	_UART_Print
  1073     021D                     l2508:
  1074                           
  1075                           ;Kart_main.c: 169:  ADCON0bits.GO =1;
  1076     021D  1283               	bcf	3,5	;RP0=0, select bank0
  1077     021E  1303               	bcf	3,6	;RP1=0, select bank0
  1078     021F  149F               	bsf	31,1	;volatile
  1079     0220                     l2510:
  1080                           
  1081                           ;Kart_main.c: 170:  char text[9];;Kart_main.c: 171:     i=0;
  1082     0220  01D9               	clrf	_i
  1083     0221  01DA               	clrf	_i+1
  1084     0222                     l2512:
  1085                           
  1086                           ;Kart_main.c: 174:     {;Kart_main.c: 176:        if (ADCON0bits.GO ==0){
  1087     0222  1283               	bcf	3,5	;RP0=0, select bank0
  1088     0223  1303               	bcf	3,6	;RP1=0, select bank0
  1089     0224  189F               	btfsc	31,1	;volatile
  1090     0225  2A27               	goto	u2431
  1091     0226  2A28               	goto	u2430
  1092     0227                     u2431:
  1093     0227  2AB4               	goto	l2544
  1094     0228                     u2430:
  1095     0228                     l2514:
  1096                           
  1097                           ;Kart_main.c: 177:            for (i=0;i<=2;i++){
  1098     0228  01D9               	clrf	_i
  1099     0229  01DA               	clrf	_i+1
  1100     022A                     l2520:
  1101                           
  1102                           ;Kart_main.c: 178:            ADCON0bits.CHS = i;
  1103     022A  1283               	bcf	3,5	;RP0=0, select bank0
  1104     022B  1303               	bcf	3,6	;RP1=0, select bank0
  1105     022C  0859               	movf	_i,w
  1106     022D  00CA               	movwf	??_main
  1107     022E  0DCA               	rlf	??_main,f
  1108     022F  0DCA               	rlf	??_main,f
  1109     0230  081F               	movf	31,w	;volatile
  1110     0231  064A               	xorwf	??_main,w
  1111     0232  39C3               	andlw	-61
  1112     0233  064A               	xorwf	??_main,w
  1113     0234  009F               	movwf	31	;volatile
  1114     0235                     l2522:
  1115                           
  1116                           ;Kart_main.c: 179:            ADCON0bits.GO =1;
  1117     0235  149F               	bsf	31,1	;volatile
  1118     0236                     l2524:
  1119                           
  1120                           ;Kart_main.c: 181:            }
  1121     0236  3001               	movlw	1
  1122     0237  07D9               	addwf	_i,f
  1123     0238  1803               	skipnc
  1124     0239  0ADA               	incf	_i+1,f
  1125     023A  3000               	movlw	0
  1126     023B  07DA               	addwf	_i+1,f
  1127     023C                     l2526:
  1128     023C  085A               	movf	_i+1,w
  1129     023D  3A80               	xorlw	128
  1130     023E  00FF               	movwf	btemp+1
  1131     023F  3080               	movlw	128
  1132     0240  027F               	subwf	btemp+1,w
  1133     0241  1D03               	skipz
  1134     0242  2A45               	goto	u2445
  1135     0243  3003               	movlw	3
  1136     0244  0259               	subwf	_i,w
  1137     0245                     u2445:
  1138     0245  1C03               	skipc
  1139     0246  2A48               	goto	u2441
  1140     0247  2A49               	goto	u2440
  1141     0248                     u2441:
  1142     0248  2A2A               	goto	l2520
  1143     0249                     u2440:
  1144     0249  2AB4               	goto	l2544
  1145     024A                     l2528:
  1146                           
  1147                           ;Kart_main.c: 191:                UART_Print ("\r\n");
  1148     024A  302E               	movlw	(low (((STR_1+20)-__stringbase)| (0+32768)))& (0+255)
  1149     024B  00AE               	movwf	UART_Print@data
  1150     024C  3080               	movlw	128
  1151     024D  00AF               	movwf	UART_Print@data+1
  1152     024E  120A  118A  2746  120A  118A  	fcall	_UART_Print
  1153                           
  1154                           ;Kart_main.c: 192:             sprintf(text, "%03u\r\n", 10);
  1155     0253  3031               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1156     0254  1283               	bcf	3,5	;RP0=0, select bank0
  1157     0255  1303               	bcf	3,6	;RP1=0, select bank0
  1158     0256  00BB               	movwf	sprintf@f
  1159     0257  300A               	movlw	10
  1160     0258  00BC               	movwf	?_sprintf+1
  1161     0259  3000               	movlw	0
  1162     025A  00BD               	movwf	?_sprintf+2
  1163     025B  30A0               	movlw	(low (main@text| 0))& (0+255)
  1164     025C  120A  118A  201E  120A  118A  	fcall	_sprintf
  1165                           
  1166                           ;Kart_main.c: 193:             UART_Print(text);
  1167     0261  30A0               	movlw	(low (main@text| 0))& (0+255)
  1168     0262  1283               	bcf	3,5	;RP0=0, select bank0
  1169     0263  1303               	bcf	3,6	;RP1=0, select bank0
  1170     0264  00AE               	movwf	UART_Print@data
  1171     0265  3000               	movlw	0
  1172     0266  00AF               	movwf	UART_Print@data+1
  1173     0267  120A  118A  2746  120A  118A  	fcall	_UART_Print
  1174                           
  1175                           ;Kart_main.c: 196:               preguntas();
  1176     026C  120A  118A  27C2  120A  118A  	fcall	_preguntas
  1177     0271                     l2530:
  1178                           
  1179                           ;Kart_main.c: 197:              RCREG ='0';
  1180     0271  3030               	movlw	48
  1181     0272  1283               	bcf	3,5	;RP0=0, select bank0
  1182     0273  1303               	bcf	3,6	;RP1=0, select bank0
  1183     0274  009A               	movwf	26	;volatile
  1184                           
  1185                           ;Kart_main.c: 199:              break;
  1186     0275  2ACA               	goto	l2546
  1187     0276                     l2532:
  1188                           
  1189                           ;Kart_main.c: 201:                _delay((unsigned long)((9200000)*(4000000/4000000.0)))
      +                          ;
  1190     0276  302F               	movlw	47
  1191     0277  1283               	bcf	3,5	;RP0=0, select bank0
  1192     0278  1303               	bcf	3,6	;RP1=0, select bank0
  1193     0279  00CC               	movwf	??_main+2
  1194     027A  30AC               	movlw	172
  1195     027B  00CB               	movwf	??_main+1
  1196     027C  30EB               	movlw	235
  1197     027D  00CA               	movwf	??_main
  1198     027E                     u2497:
  1199     027E  0BCA               	decfsz	??_main,f
  1200     027F  2A7E               	goto	u2497
  1201     0280  0BCB               	decfsz	??_main+1,f
  1202     0281  2A7E               	goto	u2497
  1203     0282  0BCC               	decfsz	??_main+2,f
  1204     0283  2A7E               	goto	u2497
  1205     0284  2A85               	nop2
  1206     0285                     l2534:
  1207                           
  1208                           ;Kart_main.c: 202:                UART_Print ("\r\n");
  1209     0285  302E               	movlw	(low (((STR_1+20)-__stringbase)| (0+32768)))& (0+255)
  1210     0286  1283               	bcf	3,5	;RP0=0, select bank0
  1211     0287  1303               	bcf	3,6	;RP1=0, select bank0
  1212     0288  00AE               	movwf	UART_Print@data
  1213     0289  3080               	movlw	128
  1214     028A  00AF               	movwf	UART_Print@data+1
  1215     028B  120A  118A  2746  120A  118A  	fcall	_UART_Print
  1216     0290                     l2536:
  1217                           
  1218                           ;Kart_main.c: 203:                UART_Print(uart_read());
  1219     0290  120A  158A  27ED  120A  118A  	fcall	_uart_read
  1220     0295  1283               	bcf	3,5	;RP0=0, select bank0
  1221     0296  1303               	bcf	3,6	;RP1=0, select bank0
  1222     0297  00AE               	movwf	UART_Print@data
  1223     0298  3080               	movlw	128
  1224     0299  00AF               	movwf	UART_Print@data+1
  1225     029A  120A  118A  2746  120A  118A  	fcall	_UART_Print
  1226     029F                     l2538:
  1227                           
  1228                           ;Kart_main.c: 204:                UART_Print ("\r\n");
  1229     029F  302E               	movlw	(low (((STR_1+20)-__stringbase)| (0+32768)))& (0+255)
  1230     02A0  1283               	bcf	3,5	;RP0=0, select bank0
  1231     02A1  1303               	bcf	3,6	;RP1=0, select bank0
  1232     02A2  00AE               	movwf	UART_Print@data
  1233     02A3  3080               	movlw	128
  1234     02A4  00AF               	movwf	UART_Print@data+1
  1235     02A5  120A  118A  2746  120A  118A  	fcall	_UART_Print
  1236     02AA                     l2540:
  1237                           
  1238                           ;Kart_main.c: 205:                preguntas();
  1239     02AA  120A  118A  27C2  120A  118A  	fcall	_preguntas
  1240                           
  1241                           ;Kart_main.c: 206:                RCREG ='0';
  1242     02AF  3030               	movlw	48
  1243     02B0  1283               	bcf	3,5	;RP0=0, select bank0
  1244     02B1  1303               	bcf	3,6	;RP1=0, select bank0
  1245     02B2  009A               	movwf	26	;volatile
  1246                           
  1247                           ;Kart_main.c: 208:                break;
  1248     02B3  2ACA               	goto	l2546
  1249     02B4                     l2544:
  1250     02B4  120A  158A  27ED  120A  118A  	fcall	_uart_read
  1251     02B9  1283               	bcf	3,5	;RP0=0, select bank0
  1252     02BA  1303               	bcf	3,6	;RP1=0, select bank0
  1253     02BB  00CA               	movwf	??_main
  1254     02BC  01CB               	clrf	??_main+1
  1255                           
  1256                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1257                           ; Switch size 1, requested type "simple"
  1258                           ; Number of cases is 1, Range of values is 0 to 0
  1259                           ; switch strategies available:
  1260                           ; Name         Instructions Cycles
  1261                           ; simple_byte            4     3 (average)
  1262                           ; direct_byte           11     8 (fixed)
  1263                           ; jumptable            260     6 (fixed)
  1264                           ;	Chosen strategy is simple_byte
  1265     02BD  084B               	movf	??_main+1,w
  1266     02BE  3A00               	xorlw	0	; case 0
  1267     02BF  1903               	skipnz
  1268     02C0  2AC2               	goto	l2616
  1269     02C1  2ACA               	goto	l2546
  1270     02C2                     l2616:
  1271                           
  1272                           ; Switch size 1, requested type "simple"
  1273                           ; Number of cases is 2, Range of values is 49 to 50
  1274                           ; switch strategies available:
  1275                           ; Name         Instructions Cycles
  1276                           ; simple_byte            7     4 (average)
  1277                           ; direct_byte           17    11 (fixed)
  1278                           ; jumptable            263     9 (fixed)
  1279                           ;	Chosen strategy is simple_byte
  1280     02C2  084A               	movf	??_main,w
  1281     02C3  3A31               	xorlw	49	; case 49
  1282     02C4  1903               	skipnz
  1283     02C5  2A4A               	goto	l2528
  1284     02C6  3A03               	xorlw	3	; case 50
  1285     02C7  1903               	skipnz
  1286     02C8  2A76               	goto	l2532
  1287     02C9  2ACA               	goto	l2546
  1288     02CA                     l2546:
  1289                           
  1290                           ;Kart_main.c: 212:     if ( UART_Data_Ready() )
  1291     02CA  120A  158A  27C8  120A  118A  	fcall	_UART_Data_Ready
  1292     02CF  1C03               	btfss	3,0
  1293     02D0  2AD2               	goto	u2451
  1294     02D1  2AD3               	goto	u2450
  1295     02D2                     u2451:
  1296     02D2  2A22               	goto	l2512
  1297     02D3                     u2450:
  1298     02D3                     l2548:
  1299                           
  1300                           ;Kart_main.c: 213:     {;Kart_main.c: 214:       uint8_t c = UART_GetC();
  1301     02D3  120A  158A  27DF  120A  118A  	fcall	_UART_GetC
  1302     02D8  1683               	bsf	3,5	;RP0=1, select bank1
  1303     02D9  1303               	bcf	3,6	;RP1=0, select bank1
  1304     02DA  00A9               	movwf	main@c^(0+128)
  1305     02DB                     l2550:
  1306                           
  1307                           ;Kart_main.c: 215:       UART_PutC(c);
  1308     02DB  0829               	movf	main@c^(0+128),w
  1309     02DC  120A  118A  27EF  120A  118A  	fcall	_UART_PutC
  1310     02E1  2A22               	goto	l2512
  1311     02E2  120A  118A  280E   	ljmp	start
  1312     02E5                     __end_of_main:
  1313                           
  1314                           	psect	text1
  1315     0FED                     __ptext1:	
  1316 ;; *************** function _uart_read *****************
  1317 ;; Defined at:
  1318 ;;		line 132 in file "Kart_main.c"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;		None
  1321 ;; Auto vars:     Size  Location     Type
  1322 ;;		None
  1323 ;; Return value:  Size  Location     Type
  1324 ;;                  1    wreg      unsigned char 
  1325 ;; Registers used:
  1326 ;;		wreg
  1327 ;; Tracked objects:
  1328 ;;		On entry : 0/0
  1329 ;;		On exit  : 0/0
  1330 ;;		Unchanged: 0/0
  1331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1332 ;;      Params:         0       0       0       0       0
  1333 ;;      Locals:         0       0       0       0       0
  1334 ;;      Temps:          0       0       0       0       0
  1335 ;;      Totals:         0       0       0       0       0
  1336 ;;Total ram usage:        0 bytes
  1337 ;; Hardware stack levels used: 1
  1338 ;; Hardware stack levels required when called: 2
  1339 ;; This function calls:
  1340 ;;		Nothing
  1341 ;; This function is called by:
  1342 ;;		_main
  1343 ;; This function uses a non-reentrant model
  1344 ;;
  1345                           
  1346     0FED                     _uart_read:	
  1347                           ;psect for function _uart_read
  1348                           
  1349     0FED                     l2262:	
  1350                           ;incstack = 0
  1351                           ; Regs used in _uart_read: [wreg]
  1352                           
  1353                           
  1354                           ;Kart_main.c: 133:  if(PIR1bits.RCIF== 0){
  1355     0FED  1283               	bcf	3,5	;RP0=0, select bank0
  1356     0FEE  1303               	bcf	3,6	;RP1=0, select bank0
  1357     0FEF  1A8C               	btfsc	12,5	;volatile
  1358     0FF0  2FF2               	goto	u2191
  1359     0FF1  2FF3               	goto	u2190
  1360     0FF2                     u2191:
  1361     0FF2  2FFE               	goto	l2274
  1362     0FF3                     u2190:
  1363     0FF3                     l2264:
  1364                           
  1365                           ;Kart_main.c: 134:      if (RCSTAbits.OERR){
  1366     0FF3  1C98               	btfss	24,1	;volatile
  1367     0FF4  2FF6               	goto	u2201
  1368     0FF5  2FF7               	goto	u2200
  1369     0FF6                     u2201:
  1370     0FF6  2FFC               	goto	l2268
  1371     0FF7                     u2200:
  1372     0FF7                     l2266:
  1373                           
  1374                           ;Kart_main.c: 135:          RCSTAbits.CREN =0;
  1375     0FF7  1218               	bcf	24,4	;volatile
  1376                           
  1377                           ;Kart_main.c: 136:          __nop();
  1378     0FF8  0000               	nop
  1379                           
  1380                           ;Kart_main.c: 137:          RCSTAbits.CREN =1;
  1381     0FF9  1283               	bcf	3,5	;RP0=0, select bank0
  1382     0FFA  1303               	bcf	3,6	;RP1=0, select bank0
  1383     0FFB  1618               	bsf	24,4	;volatile
  1384     0FFC                     l2268:
  1385                           
  1386                           ;Kart_main.c: 139:      return RCREG;
  1387     0FFC  081A               	movf	26,w	;volatile
  1388     0FFD  2FFF               	goto	l136
  1389     0FFE                     l2274:
  1390                           
  1391                           ;Kart_main.c: 142:      return 0;
  1392     0FFE  3000               	movlw	0
  1393     0FFF                     l136:
  1394     0FFF  0008               	return
  1395     1000                     __end_of_uart_read:
  1396                           
  1397                           	psect	text2
  1398     001E                     __ptext2:	
  1399 ;; *************** function _sprintf *****************
  1400 ;; Defined at:
  1401 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;  sp              1    wreg     PTR unsigned char 
  1404 ;;		 -> main@text(9), 
  1405 ;;  f               1   27[BANK0 ] PTR const unsigned char 
  1406 ;;		 -> STR_4(7), 
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;  sp              1   38[BANK0 ] PTR unsigned char 
  1409 ;;		 -> main@text(9), 
  1410 ;;  tmpval          4    0        struct .
  1411 ;;  width           2   39[BANK0 ] int 
  1412 ;;  val             2   35[BANK0 ] unsigned int 
  1413 ;;  cp              2    0        PTR const unsigned char 
  1414 ;;  len             2    0        unsigned int 
  1415 ;;  c               1   41[BANK0 ] unsigned char 
  1416 ;;  prec            1   37[BANK0 ] char 
  1417 ;;  flag            1   34[BANK0 ] unsigned char 
  1418 ;;  ap              1   33[BANK0 ] PTR void [1]
  1419 ;;		 -> ?_sprintf(2), 
  1420 ;; Return value:  Size  Location     Type
  1421 ;;                  2   27[BANK0 ] int 
  1422 ;; Registers used:
  1423 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1429 ;;      Params:         0       3       0       0       0
  1430 ;;      Locals:         0       9       0       0       0
  1431 ;;      Temps:          0       3       0       0       0
  1432 ;;      Totals:         0      15       0       0       0
  1433 ;;Total ram usage:       15 bytes
  1434 ;; Hardware stack levels used: 1
  1435 ;; Hardware stack levels required when called: 3
  1436 ;; This function calls:
  1437 ;;		___lwdiv
  1438 ;;		___lwmod
  1439 ;;		___wmul
  1440 ;;		_isdigit
  1441 ;; This function is called by:
  1442 ;;		_main
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446     001E                     _sprintf:	
  1447                           ;psect for function _sprintf
  1448                           
  1449                           
  1450                           ;incstack = 0
  1451                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1452                           ;sprintf@sp stored from wreg
  1453     001E  1283               	bcf	3,5	;RP0=0, select bank0
  1454     001F  1303               	bcf	3,6	;RP1=0, select bank0
  1455     0020  00C6               	movwf	sprintf@sp
  1456     0021                     l2370:
  1457                           
  1458                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  1459     0021  303C               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1460     0022  00C1               	movwf	sprintf@ap
  1461                           
  1462                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1463     0023  298F               	goto	l2454
  1464     0024                     l2372:
  1465                           
  1466                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1467     0024  3025               	movlw	37
  1468     0025  0649               	xorwf	sprintf@c,w
  1469     0026  1903               	btfsc	3,2
  1470     0027  2829               	goto	u2271
  1471     0028  282A               	goto	u2270
  1472     0029                     u2271:
  1473     0029  2834               	goto	l2378
  1474     002A                     u2270:
  1475     002A                     l2374:
  1476                           
  1477                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1478     002A  0846               	movf	sprintf@sp,w
  1479     002B  0084               	movwf	4
  1480     002C  0849               	movf	sprintf@c,w
  1481     002D  1383               	bcf	3,7	;select IRP bank0
  1482     002E  0080               	movwf	0
  1483     002F                     l2376:
  1484     002F  3001               	movlw	1
  1485     0030  00BE               	movwf	??_sprintf
  1486     0031  083E               	movf	??_sprintf,w
  1487     0032  07C6               	addwf	sprintf@sp,f
  1488                           
  1489                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1490     0033  298F               	goto	l2454
  1491     0034                     l2378:
  1492                           
  1493                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1494     0034  01C7               	clrf	sprintf@width
  1495     0035  01C8               	clrf	sprintf@width+1
  1496                           
  1497                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1498     0036  01C2               	clrf	sprintf@flag
  1499     0037  283D               	goto	l2384
  1500     0038                     l347:	
  1501                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 596:    case '0':
  1502                           
  1503                           
  1504                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  1505     0038  1542               	bsf	sprintf@flag,2
  1506     0039                     l2380:
  1507                           
  1508                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 598:     f++;
  1509     0039  3001               	movlw	1
  1510     003A  00BE               	movwf	??_sprintf
  1511     003B  083E               	movf	??_sprintf,w
  1512     003C  07BB               	addwf	sprintf@f,f
  1513     003D                     l2384:	
  1514                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  1515                           
  1516     003D  083B               	movf	sprintf@f,w
  1517     003E  0084               	movwf	4
  1518     003F  120A  118A  260A  120A  118A  	fcall	stringdir
  1519     0044  00BE               	movwf	??_sprintf
  1520     0045  01BF               	clrf	??_sprintf+1
  1521                           
  1522                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1523                           ; Switch size 1, requested type "simple"
  1524                           ; Number of cases is 1, Range of values is 0 to 0
  1525                           ; switch strategies available:
  1526                           ; Name         Instructions Cycles
  1527                           ; simple_byte            4     3 (average)
  1528                           ; direct_byte           11     8 (fixed)
  1529                           ; jumptable            260     6 (fixed)
  1530                           ;	Chosen strategy is simple_byte
  1531     0046  083F               	movf	??_sprintf+1,w
  1532     0047  3A00               	xorlw	0	; case 0
  1533     0048  1903               	skipnz
  1534     0049  284B               	goto	l2618
  1535     004A  2850               	goto	l2386
  1536     004B                     l2618:
  1537                           
  1538                           ; Switch size 1, requested type "simple"
  1539                           ; Number of cases is 1, Range of values is 48 to 48
  1540                           ; switch strategies available:
  1541                           ; Name         Instructions Cycles
  1542                           ; simple_byte            4     3 (average)
  1543                           ; direct_byte           14    11 (fixed)
  1544                           ; jumptable            263     9 (fixed)
  1545                           ;	Chosen strategy is simple_byte
  1546     004B  083E               	movf	??_sprintf,w
  1547     004C  3A30               	xorlw	48	; case 48
  1548     004D  1903               	skipnz
  1549     004E  2838               	goto	l347
  1550     004F  2850               	goto	l2386
  1551     0050                     l2386:
  1552                           
  1553                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1554     0050  083B               	movf	sprintf@f,w
  1555     0051  0084               	movwf	4
  1556     0052  120A  118A  260A  120A  118A  	fcall	stringdir
  1557     0057  120A  118A  25E5  120A  118A  	fcall	_isdigit
  1558     005C  1C03               	btfss	3,0
  1559     005D  285F               	goto	u2281
  1560     005E  2860               	goto	u2280
  1561     005F                     u2281:
  1562     005F  28A6               	goto	l2402
  1563     0060                     u2280:
  1564     0060                     l2388:
  1565                           
  1566                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1567     0060  1283               	bcf	3,5	;RP0=0, select bank0
  1568     0061  1303               	bcf	3,6	;RP1=0, select bank0
  1569     0062  01C7               	clrf	sprintf@width
  1570     0063  01C8               	clrf	sprintf@width+1
  1571     0064                     l2390:
  1572                           
  1573                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1574     0064  300A               	movlw	10
  1575     0065  1283               	bcf	3,5	;RP0=0, select bank0
  1576     0066  1303               	bcf	3,6	;RP1=0, select bank0
  1577     0067  00AD               	movwf	___wmul@multiplier
  1578     0068  3000               	movlw	0
  1579     0069  00AE               	movwf	___wmul@multiplier+1
  1580     006A  0848               	movf	sprintf@width+1,w
  1581     006B  00B0               	movwf	___wmul@multiplicand+1
  1582     006C  0847               	movf	sprintf@width,w
  1583     006D  00AF               	movwf	___wmul@multiplicand
  1584     006E  120A  118A  277B  120A  118A  	fcall	___wmul
  1585     0073  1283               	bcf	3,5	;RP0=0, select bank0
  1586     0074  1303               	bcf	3,6	;RP1=0, select bank0
  1587     0075  082E               	movf	?___wmul+1,w
  1588     0076  00C8               	movwf	sprintf@width+1
  1589     0077  082D               	movf	?___wmul,w
  1590     0078  00C7               	movwf	sprintf@width
  1591     0079                     l2392:
  1592                           
  1593                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1594     0079  083B               	movf	sprintf@f,w
  1595     007A  0084               	movwf	4
  1596     007B  120A  118A  260A  120A  118A  	fcall	stringdir
  1597     0080  3ED0               	addlw	208
  1598     0081  00BE               	movwf	??_sprintf
  1599     0082  30FF               	movlw	255
  1600     0083  1803               	skipnc
  1601     0084  3000               	movlw	0
  1602     0085  00BF               	movwf	??_sprintf+1
  1603     0086  083E               	movf	??_sprintf,w
  1604     0087  07C7               	addwf	sprintf@width,f
  1605     0088  1803               	skipnc
  1606     0089  0AC8               	incf	sprintf@width+1,f
  1607     008A  083F               	movf	??_sprintf+1,w
  1608     008B  07C8               	addwf	sprintf@width+1,f
  1609     008C                     l2394:
  1610     008C  3001               	movlw	1
  1611     008D  00BE               	movwf	??_sprintf
  1612     008E  083E               	movf	??_sprintf,w
  1613     008F  07BB               	addwf	sprintf@f,f
  1614     0090                     l2396:
  1615                           
  1616                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1617     0090  083B               	movf	sprintf@f,w
  1618     0091  0084               	movwf	4
  1619     0092  120A  118A  260A  120A  118A  	fcall	stringdir
  1620     0097  120A  118A  25E5  120A  118A  	fcall	_isdigit
  1621     009C  1803               	btfsc	3,0
  1622     009D  289F               	goto	u2291
  1623     009E  28A0               	goto	u2290
  1624     009F                     u2291:
  1625     009F  2864               	goto	l2390
  1626     00A0                     u2290:
  1627     00A0  28A6               	goto	l2402
  1628     00A1                     l2398:
  1629                           
  1630                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1631     00A1  30C0               	movlw	192
  1632     00A2  00BE               	movwf	??_sprintf
  1633     00A3  083E               	movf	??_sprintf,w
  1634     00A4  04C2               	iorwf	sprintf@flag,f
  1635                           
  1636                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  1637     00A5  28C2               	goto	l2404
  1638     00A6                     l2402:
  1639     00A6  3001               	movlw	1
  1640     00A7  1283               	bcf	3,5	;RP0=0, select bank0
  1641     00A8  1303               	bcf	3,6	;RP1=0, select bank0
  1642     00A9  07BB               	addwf	sprintf@f,f
  1643     00AA  30FF               	movlw	-1
  1644     00AB  073B               	addwf	sprintf@f,w
  1645     00AC  0084               	movwf	4
  1646     00AD  120A  118A  260A  120A  118A  	fcall	stringdir
  1647     00B2  00C9               	movwf	sprintf@c
  1648     00B3  00BE               	movwf	??_sprintf
  1649     00B4  01BF               	clrf	??_sprintf+1
  1650                           
  1651                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1652                           ; Switch size 1, requested type "simple"
  1653                           ; Number of cases is 1, Range of values is 0 to 0
  1654                           ; switch strategies available:
  1655                           ; Name         Instructions Cycles
  1656                           ; simple_byte            4     3 (average)
  1657                           ; direct_byte           11     8 (fixed)
  1658                           ; jumptable            260     6 (fixed)
  1659                           ;	Chosen strategy is simple_byte
  1660     00B5  083F               	movf	??_sprintf+1,w
  1661     00B6  3A00               	xorlw	0	; case 0
  1662     00B7  1903               	skipnz
  1663     00B8  28BA               	goto	l2620
  1664     00B9  298F               	goto	l2454
  1665     00BA                     l2620:
  1666                           
  1667                           ; Switch size 1, requested type "simple"
  1668                           ; Number of cases is 2, Range of values is 0 to 117
  1669                           ; switch strategies available:
  1670                           ; Name         Instructions Cycles
  1671                           ; simple_byte            7     4 (average)
  1672                           ; jumptable            260     6 (fixed)
  1673                           ;	Chosen strategy is simple_byte
  1674     00BA  083E               	movf	??_sprintf,w
  1675     00BB  3A00               	xorlw	0	; case 0
  1676     00BC  1903               	skipnz
  1677     00BD  299F               	goto	l2456
  1678     00BE  3A75               	xorlw	117	; case 117
  1679     00BF  1903               	skipnz
  1680     00C0  28A1               	goto	l2398
  1681     00C1  298F               	goto	l2454
  1682     00C2                     l2404:
  1683                           
  1684                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1685     00C2  0841               	movf	sprintf@ap,w
  1686     00C3  0084               	movwf	4
  1687     00C4  1383               	bcf	3,7	;select IRP bank0
  1688     00C5  0800               	movf	0,w
  1689     00C6  00C3               	movwf	sprintf@val
  1690     00C7  0A84               	incf	4,f
  1691     00C8  0800               	movf	0,w
  1692     00C9  00C4               	movwf	sprintf@val+1
  1693     00CA                     l2406:
  1694     00CA  3002               	movlw	2
  1695     00CB  00BE               	movwf	??_sprintf
  1696     00CC  083E               	movf	??_sprintf,w
  1697     00CD  07C1               	addwf	sprintf@ap,f
  1698     00CE                     l2408:
  1699                           
  1700                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1701     00CE  01C9               	clrf	sprintf@c
  1702     00CF  0AC9               	incf	sprintf@c,f
  1703     00D0                     l2414:
  1704                           
  1705                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1706     00D0  0849               	movf	sprintf@c,w
  1707     00D1  00BE               	movwf	??_sprintf
  1708     00D2  073E               	addwf	??_sprintf,w
  1709     00D3  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1710     00D4  0084               	movwf	4
  1711     00D5  120A  118A  260A  120A  118A  	fcall	stringdir
  1712     00DA  00BF               	movwf	??_sprintf+1
  1713     00DB  120A  118A  260A  120A  118A  	fcall	stringdir
  1714     00E0  00C0               	movwf	??_sprintf+2
  1715     00E1  0840               	movf	??_sprintf+2,w
  1716     00E2  0244               	subwf	sprintf@val+1,w
  1717     00E3  1D03               	skipz
  1718     00E4  28E7               	goto	u2305
  1719     00E5  083F               	movf	??_sprintf+1,w
  1720     00E6  0243               	subwf	sprintf@val,w
  1721     00E7                     u2305:
  1722     00E7  1803               	skipnc
  1723     00E8  28EA               	goto	u2301
  1724     00E9  28EB               	goto	u2300
  1725     00EA                     u2301:
  1726     00EA  28EC               	goto	l2418
  1727     00EB                     u2300:
  1728     00EB  28F6               	goto	l2420
  1729     00EC                     l2418:
  1730     00EC  3001               	movlw	1
  1731     00ED  00BE               	movwf	??_sprintf
  1732     00EE  083E               	movf	??_sprintf,w
  1733     00EF  07C9               	addwf	sprintf@c,f
  1734     00F0  3005               	movlw	5
  1735     00F1  0649               	xorwf	sprintf@c,w
  1736     00F2  1D03               	btfss	3,2
  1737     00F3  28F5               	goto	u2311
  1738     00F4  28F6               	goto	u2310
  1739     00F5                     u2311:
  1740     00F5  28D0               	goto	l2414
  1741     00F6                     u2310:
  1742     00F6                     l2420:
  1743                           
  1744                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  1745     00F6  0848               	movf	sprintf@width+1,w
  1746     00F7  3A80               	xorlw	128
  1747     00F8  3C80               	sublw	128
  1748     00F9  1D03               	skipz
  1749     00FA  28FD               	goto	u2325
  1750     00FB  0847               	movf	sprintf@width,w
  1751     00FC  0249               	subwf	sprintf@c,w
  1752     00FD                     u2325:
  1753     00FD  1803               	skipnc
  1754     00FE  2900               	goto	u2321
  1755     00FF  2901               	goto	u2320
  1756     0100                     u2321:
  1757     0100  290D               	goto	l2424
  1758     0101                     u2320:
  1759     0101                     l2422:
  1760                           
  1761                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  1762     0101  1283               	bcf	3,5	;RP0=0, select bank0
  1763     0102  1303               	bcf	3,6	;RP1=0, select bank0
  1764     0103  0849               	movf	sprintf@c,w
  1765     0104  00BE               	movwf	??_sprintf
  1766     0105  01BF               	clrf	??_sprintf+1
  1767     0106  083E               	movf	??_sprintf,w
  1768     0107  02C7               	subwf	sprintf@width,f
  1769     0108  083F               	movf	??_sprintf+1,w
  1770     0109  1C03               	skipc
  1771     010A  03C8               	decf	sprintf@width+1,f
  1772     010B  02C8               	subwf	sprintf@width+1,f
  1773     010C  2911               	goto	l2426
  1774     010D                     l2424:
  1775                           
  1776                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  1777     010D  1283               	bcf	3,5	;RP0=0, select bank0
  1778     010E  1303               	bcf	3,6	;RP1=0, select bank0
  1779     010F  01C7               	clrf	sprintf@width
  1780     0110  01C8               	clrf	sprintf@width+1
  1781     0111                     l2426:
  1782                           
  1783                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  1784     0111  1D42               	btfss	sprintf@flag,2
  1785     0112  2914               	goto	u2331
  1786     0113  2915               	goto	u2330
  1787     0114                     u2331:
  1788     0114  2931               	goto	l2436
  1789     0115                     u2330:
  1790     0115                     l2428:
  1791                           
  1792                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  1793     0115  0847               	movf	sprintf@width,w
  1794     0116  0448               	iorwf	sprintf@width+1,w
  1795     0117  1903               	btfsc	3,2
  1796     0118  291A               	goto	u2341
  1797     0119  291B               	goto	u2340
  1798     011A                     u2341:
  1799     011A  294C               	goto	l2444
  1800     011B                     u2340:
  1801     011B                     l2430:
  1802                           
  1803                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  1804     011B  0846               	movf	sprintf@sp,w
  1805     011C  0084               	movwf	4
  1806     011D  3030               	movlw	48
  1807     011E  1383               	bcf	3,7	;select IRP bank0
  1808     011F  0080               	movwf	0
  1809     0120                     l2432:
  1810     0120  3001               	movlw	1
  1811     0121  00BE               	movwf	??_sprintf
  1812     0122  083E               	movf	??_sprintf,w
  1813     0123  07C6               	addwf	sprintf@sp,f
  1814     0124                     l2434:
  1815     0124  30FF               	movlw	255
  1816     0125  07C7               	addwf	sprintf@width,f
  1817     0126  1803               	skipnc
  1818     0127  0AC8               	incf	sprintf@width+1,f
  1819     0128  30FF               	movlw	255
  1820     0129  07C8               	addwf	sprintf@width+1,f
  1821     012A  0847               	movf	sprintf@width,w
  1822     012B  0448               	iorwf	sprintf@width+1,w
  1823     012C  1D03               	btfss	3,2
  1824     012D  292F               	goto	u2351
  1825     012E  2930               	goto	u2350
  1826     012F                     u2351:
  1827     012F  291B               	goto	l2430
  1828     0130                     u2350:
  1829     0130  294C               	goto	l2444
  1830     0131                     l2436:
  1831                           
  1832                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1450:    if(width
  1833     0131  0847               	movf	sprintf@width,w
  1834     0132  0448               	iorwf	sprintf@width+1,w
  1835     0133  1903               	btfsc	3,2
  1836     0134  2936               	goto	u2361
  1837     0135  2937               	goto	u2360
  1838     0136                     u2361:
  1839     0136  294C               	goto	l2444
  1840     0137                     u2360:
  1841     0137                     l2438:
  1842                           
  1843                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  1844     0137  0846               	movf	sprintf@sp,w
  1845     0138  0084               	movwf	4
  1846     0139  3020               	movlw	32
  1847     013A  1383               	bcf	3,7	;select IRP bank0
  1848     013B  0080               	movwf	0
  1849     013C                     l2440:
  1850     013C  3001               	movlw	1
  1851     013D  00BE               	movwf	??_sprintf
  1852     013E  083E               	movf	??_sprintf,w
  1853     013F  07C6               	addwf	sprintf@sp,f
  1854     0140                     l2442:
  1855     0140  30FF               	movlw	255
  1856     0141  07C7               	addwf	sprintf@width,f
  1857     0142  1803               	skipnc
  1858     0143  0AC8               	incf	sprintf@width+1,f
  1859     0144  30FF               	movlw	255
  1860     0145  07C8               	addwf	sprintf@width+1,f
  1861     0146  0847               	movf	sprintf@width,w
  1862     0147  0448               	iorwf	sprintf@width+1,w
  1863     0148  1D03               	btfss	3,2
  1864     0149  294B               	goto	u2371
  1865     014A  294C               	goto	u2370
  1866     014B                     u2371:
  1867     014B  2937               	goto	l2438
  1868     014C                     u2370:
  1869     014C                     l2444:
  1870                           
  1871                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1872     014C  0849               	movf	sprintf@c,w
  1873     014D  00C5               	movwf	sprintf@prec
  1874                           
  1875                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1876     014E  2986               	goto	l2452
  1877     014F                     l2446:
  1878                           
  1879                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1880     014F  300A               	movlw	10
  1881     0150  00B5               	movwf	___lwmod@divisor
  1882     0151  3000               	movlw	0
  1883     0152  00B6               	movwf	___lwmod@divisor+1
  1884     0153  0845               	movf	sprintf@prec,w
  1885     0154  00BE               	movwf	??_sprintf
  1886     0155  073E               	addwf	??_sprintf,w
  1887     0156  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1888     0157  0084               	movwf	4
  1889     0158  120A  118A  260A  120A  118A  	fcall	stringdir
  1890     015D  00AD               	movwf	___lwdiv@divisor
  1891     015E  120A  118A  260A  120A  118A  	fcall	stringdir
  1892     0163  00AE               	movwf	___lwdiv@divisor+1
  1893     0164  0844               	movf	sprintf@val+1,w
  1894     0165  00B0               	movwf	___lwdiv@dividend+1
  1895     0166  0843               	movf	sprintf@val,w
  1896     0167  00AF               	movwf	___lwdiv@dividend
  1897     0168  120A  118A  2647  120A  118A  	fcall	___lwdiv
  1898     016D  1283               	bcf	3,5	;RP0=0, select bank0
  1899     016E  1303               	bcf	3,6	;RP1=0, select bank0
  1900     016F  082E               	movf	?___lwdiv+1,w
  1901     0170  00B8               	movwf	___lwmod@dividend+1
  1902     0171  082D               	movf	?___lwdiv,w
  1903     0172  00B7               	movwf	___lwmod@dividend
  1904     0173  120A  118A  26D2  120A  118A  	fcall	___lwmod
  1905     0178  1283               	bcf	3,5	;RP0=0, select bank0
  1906     0179  1303               	bcf	3,6	;RP1=0, select bank0
  1907     017A  0835               	movf	?___lwmod,w
  1908     017B  3E30               	addlw	48
  1909     017C  00C9               	movwf	sprintf@c
  1910     017D                     l2448:
  1911                           
  1912                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1913     017D  0846               	movf	sprintf@sp,w
  1914     017E  0084               	movwf	4
  1915     017F  0849               	movf	sprintf@c,w
  1916     0180  1383               	bcf	3,7	;select IRP bank0
  1917     0181  0080               	movwf	0
  1918     0182                     l2450:
  1919     0182  3001               	movlw	1
  1920     0183  00BE               	movwf	??_sprintf
  1921     0184  083E               	movf	??_sprintf,w
  1922     0185  07C6               	addwf	sprintf@sp,f
  1923     0186                     l2452:
  1924                           
  1925                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1926     0186  30FF               	movlw	255
  1927     0187  00BE               	movwf	??_sprintf
  1928     0188  083E               	movf	??_sprintf,w
  1929     0189  07C5               	addwf	sprintf@prec,f
  1930     018A  0A45               	incf	sprintf@prec,w
  1931     018B  1D03               	btfss	3,2
  1932     018C  298E               	goto	u2381
  1933     018D  298F               	goto	u2380
  1934     018E                     u2381:
  1935     018E  294F               	goto	l2446
  1936     018F                     u2380:
  1937     018F                     l2454:
  1938                           
  1939                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1940     018F  3001               	movlw	1
  1941     0190  07BB               	addwf	sprintf@f,f
  1942     0191  30FF               	movlw	-1
  1943     0192  073B               	addwf	sprintf@f,w
  1944     0193  0084               	movwf	4
  1945     0194  120A  118A  260A  120A  118A  	fcall	stringdir
  1946     0199  00C9               	movwf	sprintf@c
  1947     019A  0849               	movf	sprintf@c,w
  1948     019B  1D03               	btfss	3,2
  1949     019C  299E               	goto	u2391
  1950     019D  299F               	goto	u2390
  1951     019E                     u2391:
  1952     019E  2824               	goto	l2372
  1953     019F                     u2390:
  1954     019F                     l2456:
  1955                           
  1956                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1957     019F  0846               	movf	sprintf@sp,w
  1958     01A0  0084               	movwf	4
  1959     01A1  1383               	bcf	3,7	;select IRP bank0
  1960     01A2  0180               	clrf	0
  1961     01A3                     l377:
  1962     01A3  0008               	return
  1963     01A4                     __end_of_sprintf:
  1964                           
  1965                           	psect	text3
  1966     05E5                     __ptext3:	
  1967 ;; *************** function _isdigit *****************
  1968 ;; Defined at:
  1969 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\isdigit.c"
  1970 ;; Parameters:    Size  Location     Type
  1971 ;;  c               1    wreg     unsigned char 
  1972 ;; Auto vars:     Size  Location     Type
  1973 ;;  c               1   14[BANK0 ] unsigned char 
  1974 ;; Return value:  Size  Location     Type
  1975 ;;		None               void
  1976 ;; Registers used:
  1977 ;;		wreg, status,2, status,0
  1978 ;; Tracked objects:
  1979 ;;		On entry : 0/0
  1980 ;;		On exit  : 0/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1983 ;;      Params:         0       0       0       0       0
  1984 ;;      Locals:         0       2       0       0       0
  1985 ;;      Temps:          0       0       0       0       0
  1986 ;;      Totals:         0       2       0       0       0
  1987 ;;Total ram usage:        2 bytes
  1988 ;; Hardware stack levels used: 1
  1989 ;; Hardware stack levels required when called: 2
  1990 ;; This function calls:
  1991 ;;		Nothing
  1992 ;; This function is called by:
  1993 ;;		_sprintf
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997     05E5                     _isdigit:	
  1998                           ;psect for function _isdigit
  1999                           
  2000                           
  2001                           ;incstack = 0
  2002                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2003                           ;isdigit@c stored from wreg
  2004     05E5  1283               	bcf	3,5	;RP0=0, select bank0
  2005     05E6  1303               	bcf	3,6	;RP1=0, select bank0
  2006     05E7  00AE               	movwf	isdigit@c
  2007     05E8                     l2128:
  2008     05E8  01AD               	clrf	_isdigit$1125
  2009     05E9                     l2130:
  2010     05E9  303A               	movlw	58
  2011     05EA  022E               	subwf	isdigit@c,w
  2012     05EB  1803               	skipnc
  2013     05EC  2DEE               	goto	u1831
  2014     05ED  2DEF               	goto	u1830
  2015     05EE                     u1831:
  2016     05EE  2DF7               	goto	l2136
  2017     05EF                     u1830:
  2018     05EF                     l2132:
  2019     05EF  3030               	movlw	48
  2020     05F0  022E               	subwf	isdigit@c,w
  2021     05F1  1C03               	skipc
  2022     05F2  2DF4               	goto	u1841
  2023     05F3  2DF5               	goto	u1840
  2024     05F4                     u1841:
  2025     05F4  2DF7               	goto	l2136
  2026     05F5                     u1840:
  2027     05F5                     l2134:
  2028     05F5  01AD               	clrf	_isdigit$1125
  2029     05F6  0AAD               	incf	_isdigit$1125,f
  2030     05F7                     l2136:
  2031     05F7  0C2D               	rrf	_isdigit$1125,w
  2032     05F8                     l834:
  2033     05F8  0008               	return
  2034     05F9                     __end_of_isdigit:
  2035                           
  2036                           	psect	text4
  2037     077B                     __ptext4:	
  2038 ;; *************** function ___wmul *****************
  2039 ;; Defined at:
  2040 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;  multiplier      2   13[BANK0 ] unsigned int 
  2043 ;;  multiplicand    2   15[BANK0 ] unsigned int 
  2044 ;; Auto vars:     Size  Location     Type
  2045 ;;  product         2   17[BANK0 ] unsigned int 
  2046 ;; Return value:  Size  Location     Type
  2047 ;;                  2   13[BANK0 ] unsigned int 
  2048 ;; Registers used:
  2049 ;;		wreg, status,2, status,0
  2050 ;; Tracked objects:
  2051 ;;		On entry : 0/0
  2052 ;;		On exit  : 0/0
  2053 ;;		Unchanged: 0/0
  2054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2055 ;;      Params:         0       4       0       0       0
  2056 ;;      Locals:         0       2       0       0       0
  2057 ;;      Temps:          0       0       0       0       0
  2058 ;;      Totals:         0       6       0       0       0
  2059 ;;Total ram usage:        6 bytes
  2060 ;; Hardware stack levels used: 1
  2061 ;; Hardware stack levels required when called: 2
  2062 ;; This function calls:
  2063 ;;		Nothing
  2064 ;; This function is called by:
  2065 ;;		_sprintf
  2066 ;; This function uses a non-reentrant model
  2067 ;;
  2068                           
  2069     077B                     ___wmul:	
  2070                           ;psect for function ___wmul
  2071                           
  2072     077B                     l2140:	
  2073                           ;incstack = 0
  2074                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2075                           
  2076     077B  1283               	bcf	3,5	;RP0=0, select bank0
  2077     077C  1303               	bcf	3,6	;RP1=0, select bank0
  2078     077D  01B1               	clrf	___wmul@product
  2079     077E  01B2               	clrf	___wmul@product+1
  2080     077F                     l2142:
  2081     077F  1C2D               	btfss	___wmul@multiplier,0
  2082     0780  2F82               	goto	u1851
  2083     0781  2F83               	goto	u1850
  2084     0782                     u1851:
  2085     0782  2F89               	goto	l381
  2086     0783                     u1850:
  2087     0783                     l2144:
  2088     0783  082F               	movf	___wmul@multiplicand,w
  2089     0784  07B1               	addwf	___wmul@product,f
  2090     0785  1803               	skipnc
  2091     0786  0AB2               	incf	___wmul@product+1,f
  2092     0787  0830               	movf	___wmul@multiplicand+1,w
  2093     0788  07B2               	addwf	___wmul@product+1,f
  2094     0789                     l381:
  2095     0789  3001               	movlw	1
  2096     078A                     u1865:
  2097     078A  1003               	clrc
  2098     078B  0DAF               	rlf	___wmul@multiplicand,f
  2099     078C  0DB0               	rlf	___wmul@multiplicand+1,f
  2100     078D  3EFF               	addlw	-1
  2101     078E  1D03               	skipz
  2102     078F  2F8A               	goto	u1865
  2103     0790                     l2146:
  2104     0790  3001               	movlw	1
  2105     0791                     u1875:
  2106     0791  1003               	clrc
  2107     0792  0CAE               	rrf	___wmul@multiplier+1,f
  2108     0793  0CAD               	rrf	___wmul@multiplier,f
  2109     0794  3EFF               	addlw	-1
  2110     0795  1D03               	skipz
  2111     0796  2F91               	goto	u1875
  2112     0797                     l2148:
  2113     0797  082D               	movf	___wmul@multiplier,w
  2114     0798  042E               	iorwf	___wmul@multiplier+1,w
  2115     0799  1D03               	btfss	3,2
  2116     079A  2F9C               	goto	u1881
  2117     079B  2F9D               	goto	u1880
  2118     079C                     u1881:
  2119     079C  2F7F               	goto	l2142
  2120     079D                     u1880:
  2121     079D                     l2150:
  2122     079D  0832               	movf	___wmul@product+1,w
  2123     079E  00AE               	movwf	?___wmul+1
  2124     079F  0831               	movf	___wmul@product,w
  2125     07A0  00AD               	movwf	?___wmul
  2126     07A1                     l383:
  2127     07A1  0008               	return
  2128     07A2                     __end_of___wmul:
  2129                           
  2130                           	psect	text5
  2131     06D2                     __ptext5:	
  2132 ;; *************** function ___lwmod *****************
  2133 ;; Defined at:
  2134 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;  divisor         2   21[BANK0 ] unsigned int 
  2137 ;;  dividend        2   23[BANK0 ] unsigned int 
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;  counter         1   26[BANK0 ] unsigned char 
  2140 ;; Return value:  Size  Location     Type
  2141 ;;                  2   21[BANK0 ] unsigned int 
  2142 ;; Registers used:
  2143 ;;		wreg, status,2, status,0
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2149 ;;      Params:         0       4       0       0       0
  2150 ;;      Locals:         0       1       0       0       0
  2151 ;;      Temps:          0       1       0       0       0
  2152 ;;      Totals:         0       6       0       0       0
  2153 ;;Total ram usage:        6 bytes
  2154 ;; Hardware stack levels used: 1
  2155 ;; Hardware stack levels required when called: 2
  2156 ;; This function calls:
  2157 ;;		Nothing
  2158 ;; This function is called by:
  2159 ;;		_sprintf
  2160 ;; This function uses a non-reentrant model
  2161 ;;
  2162                           
  2163     06D2                     ___lwmod:	
  2164                           ;psect for function ___lwmod
  2165                           
  2166     06D2                     l2240:	
  2167                           ;incstack = 0
  2168                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2169                           
  2170     06D2  1283               	bcf	3,5	;RP0=0, select bank0
  2171     06D3  1303               	bcf	3,6	;RP1=0, select bank0
  2172     06D4  0835               	movf	___lwmod@divisor,w
  2173     06D5  0436               	iorwf	___lwmod@divisor+1,w
  2174     06D6  1903               	btfsc	3,2
  2175     06D7  2ED9               	goto	u2131
  2176     06D8  2EDA               	goto	u2130
  2177     06D9                     u2131:
  2178     06D9  2F09               	goto	l2258
  2179     06DA                     u2130:
  2180     06DA                     l2242:
  2181     06DA  01BA               	clrf	___lwmod@counter
  2182     06DB  0ABA               	incf	___lwmod@counter,f
  2183     06DC  2EE8               	goto	l2248
  2184     06DD                     l2244:
  2185     06DD  3001               	movlw	1
  2186     06DE                     u2145:
  2187     06DE  1003               	clrc
  2188     06DF  0DB5               	rlf	___lwmod@divisor,f
  2189     06E0  0DB6               	rlf	___lwmod@divisor+1,f
  2190     06E1  3EFF               	addlw	-1
  2191     06E2  1D03               	skipz
  2192     06E3  2EDE               	goto	u2145
  2193     06E4                     l2246:
  2194     06E4  3001               	movlw	1
  2195     06E5  00B9               	movwf	??___lwmod
  2196     06E6  0839               	movf	??___lwmod,w
  2197     06E7  07BA               	addwf	___lwmod@counter,f
  2198     06E8                     l2248:
  2199     06E8  1FB6               	btfss	___lwmod@divisor+1,7
  2200     06E9  2EEB               	goto	u2151
  2201     06EA  2EEC               	goto	u2150
  2202     06EB                     u2151:
  2203     06EB  2EDD               	goto	l2244
  2204     06EC                     u2150:
  2205     06EC                     l2250:
  2206     06EC  0836               	movf	___lwmod@divisor+1,w
  2207     06ED  0238               	subwf	___lwmod@dividend+1,w
  2208     06EE  1D03               	skipz
  2209     06EF  2EF2               	goto	u2165
  2210     06F0  0835               	movf	___lwmod@divisor,w
  2211     06F1  0237               	subwf	___lwmod@dividend,w
  2212     06F2                     u2165:
  2213     06F2  1C03               	skipc
  2214     06F3  2EF5               	goto	u2161
  2215     06F4  2EF6               	goto	u2160
  2216     06F5                     u2161:
  2217     06F5  2EFC               	goto	l2254
  2218     06F6                     u2160:
  2219     06F6                     l2252:
  2220     06F6  0835               	movf	___lwmod@divisor,w
  2221     06F7  02B7               	subwf	___lwmod@dividend,f
  2222     06F8  0836               	movf	___lwmod@divisor+1,w
  2223     06F9  1C03               	skipc
  2224     06FA  03B8               	decf	___lwmod@dividend+1,f
  2225     06FB  02B8               	subwf	___lwmod@dividend+1,f
  2226     06FC                     l2254:
  2227     06FC  3001               	movlw	1
  2228     06FD                     u2175:
  2229     06FD  1003               	clrc
  2230     06FE  0CB6               	rrf	___lwmod@divisor+1,f
  2231     06FF  0CB5               	rrf	___lwmod@divisor,f
  2232     0700  3EFF               	addlw	-1
  2233     0701  1D03               	skipz
  2234     0702  2EFD               	goto	u2175
  2235     0703                     l2256:
  2236     0703  3001               	movlw	1
  2237     0704  02BA               	subwf	___lwmod@counter,f
  2238     0705  1D03               	btfss	3,2
  2239     0706  2F08               	goto	u2181
  2240     0707  2F09               	goto	u2180
  2241     0708                     u2181:
  2242     0708  2EEC               	goto	l2250
  2243     0709                     u2180:
  2244     0709                     l2258:
  2245     0709  0838               	movf	___lwmod@dividend+1,w
  2246     070A  00B6               	movwf	?___lwmod+1
  2247     070B  0837               	movf	___lwmod@dividend,w
  2248     070C  00B5               	movwf	?___lwmod
  2249     070D                     l663:
  2250     070D  0008               	return
  2251     070E                     __end_of___lwmod:
  2252                           
  2253                           	psect	text6
  2254     0647                     __ptext6:	
  2255 ;; *************** function ___lwdiv *****************
  2256 ;; Defined at:
  2257 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;  divisor         2   13[BANK0 ] unsigned int 
  2260 ;;  dividend        2   15[BANK0 ] unsigned int 
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;  quotient        2   19[BANK0 ] unsigned int 
  2263 ;;  counter         1   18[BANK0 ] unsigned char 
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  2   13[BANK0 ] unsigned int 
  2266 ;; Registers used:
  2267 ;;		wreg, status,2, status,0
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2273 ;;      Params:         0       4       0       0       0
  2274 ;;      Locals:         0       3       0       0       0
  2275 ;;      Temps:          0       1       0       0       0
  2276 ;;      Totals:         0       8       0       0       0
  2277 ;;Total ram usage:        8 bytes
  2278 ;; Hardware stack levels used: 1
  2279 ;; Hardware stack levels required when called: 2
  2280 ;; This function calls:
  2281 ;;		Nothing
  2282 ;; This function is called by:
  2283 ;;		_sprintf
  2284 ;; This function uses a non-reentrant model
  2285 ;;
  2286                           
  2287     0647                     ___lwdiv:	
  2288                           ;psect for function ___lwdiv
  2289                           
  2290     0647                     l2214:	
  2291                           ;incstack = 0
  2292                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2293                           
  2294     0647  1283               	bcf	3,5	;RP0=0, select bank0
  2295     0648  1303               	bcf	3,6	;RP1=0, select bank0
  2296     0649  01B3               	clrf	___lwdiv@quotient
  2297     064A  01B4               	clrf	___lwdiv@quotient+1
  2298     064B                     l2216:
  2299     064B  082D               	movf	___lwdiv@divisor,w
  2300     064C  042E               	iorwf	___lwdiv@divisor+1,w
  2301     064D  1903               	btfsc	3,2
  2302     064E  2E50               	goto	u2061
  2303     064F  2E51               	goto	u2060
  2304     0650                     u2061:
  2305     0650  2E88               	goto	l2236
  2306     0651                     u2060:
  2307     0651                     l2218:
  2308     0651  01B2               	clrf	___lwdiv@counter
  2309     0652  0AB2               	incf	___lwdiv@counter,f
  2310     0653  2E5F               	goto	l2224
  2311     0654                     l2220:
  2312     0654  3001               	movlw	1
  2313     0655                     u2075:
  2314     0655  1003               	clrc
  2315     0656  0DAD               	rlf	___lwdiv@divisor,f
  2316     0657  0DAE               	rlf	___lwdiv@divisor+1,f
  2317     0658  3EFF               	addlw	-1
  2318     0659  1D03               	skipz
  2319     065A  2E55               	goto	u2075
  2320     065B                     l2222:
  2321     065B  3001               	movlw	1
  2322     065C  00B1               	movwf	??___lwdiv
  2323     065D  0831               	movf	??___lwdiv,w
  2324     065E  07B2               	addwf	___lwdiv@counter,f
  2325     065F                     l2224:
  2326     065F  1FAE               	btfss	___lwdiv@divisor+1,7
  2327     0660  2E62               	goto	u2081
  2328     0661  2E63               	goto	u2080
  2329     0662                     u2081:
  2330     0662  2E54               	goto	l2220
  2331     0663                     u2080:
  2332     0663                     l2226:
  2333     0663  3001               	movlw	1
  2334     0664                     u2095:
  2335     0664  1003               	clrc
  2336     0665  0DB3               	rlf	___lwdiv@quotient,f
  2337     0666  0DB4               	rlf	___lwdiv@quotient+1,f
  2338     0667  3EFF               	addlw	-1
  2339     0668  1D03               	skipz
  2340     0669  2E64               	goto	u2095
  2341     066A  082E               	movf	___lwdiv@divisor+1,w
  2342     066B  0230               	subwf	___lwdiv@dividend+1,w
  2343     066C  1D03               	skipz
  2344     066D  2E70               	goto	u2105
  2345     066E  082D               	movf	___lwdiv@divisor,w
  2346     066F  022F               	subwf	___lwdiv@dividend,w
  2347     0670                     u2105:
  2348     0670  1C03               	skipc
  2349     0671  2E73               	goto	u2101
  2350     0672  2E74               	goto	u2100
  2351     0673                     u2101:
  2352     0673  2E7B               	goto	l2232
  2353     0674                     u2100:
  2354     0674                     l2228:
  2355     0674  082D               	movf	___lwdiv@divisor,w
  2356     0675  02AF               	subwf	___lwdiv@dividend,f
  2357     0676  082E               	movf	___lwdiv@divisor+1,w
  2358     0677  1C03               	skipc
  2359     0678  03B0               	decf	___lwdiv@dividend+1,f
  2360     0679  02B0               	subwf	___lwdiv@dividend+1,f
  2361     067A                     l2230:
  2362     067A  1433               	bsf	___lwdiv@quotient,0
  2363     067B                     l2232:
  2364     067B  3001               	movlw	1
  2365     067C                     u2115:
  2366     067C  1003               	clrc
  2367     067D  0CAE               	rrf	___lwdiv@divisor+1,f
  2368     067E  0CAD               	rrf	___lwdiv@divisor,f
  2369     067F  3EFF               	addlw	-1
  2370     0680  1D03               	skipz
  2371     0681  2E7C               	goto	u2115
  2372     0682                     l2234:
  2373     0682  3001               	movlw	1
  2374     0683  02B2               	subwf	___lwdiv@counter,f
  2375     0684  1D03               	btfss	3,2
  2376     0685  2E87               	goto	u2121
  2377     0686  2E88               	goto	u2120
  2378     0687                     u2121:
  2379     0687  2E63               	goto	l2226
  2380     0688                     u2120:
  2381     0688                     l2236:
  2382     0688  0834               	movf	___lwdiv@quotient+1,w
  2383     0689  00AE               	movwf	?___lwdiv+1
  2384     068A  0833               	movf	___lwdiv@quotient,w
  2385     068B  00AD               	movwf	?___lwdiv
  2386     068C                     l653:
  2387     068C  0008               	return
  2388     068D                     __end_of___lwdiv:
  2389                           
  2390                           	psect	text7
  2391     070E                     __ptext7:	
  2392 ;; *************** function _setup *****************
  2393 ;; Defined at:
  2394 ;;		line 230 in file "Kart_main.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;		None
  2397 ;; Auto vars:     Size  Location     Type
  2398 ;;		None
  2399 ;; Return value:  Size  Location     Type
  2400 ;;                  1    wreg      void 
  2401 ;; Registers used:
  2402 ;;		wreg, status,2, status,0
  2403 ;; Tracked objects:
  2404 ;;		On entry : 0/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2408 ;;      Params:         0       0       0       0       0
  2409 ;;      Locals:         0       0       0       0       0
  2410 ;;      Temps:          0       1       0       0       0
  2411 ;;      Totals:         0       1       0       0       0
  2412 ;;Total ram usage:        1 bytes
  2413 ;; Hardware stack levels used: 1
  2414 ;; Hardware stack levels required when called: 2
  2415 ;; This function calls:
  2416 ;;		Nothing
  2417 ;; This function is called by:
  2418 ;;		_main
  2419 ;; This function uses a non-reentrant model
  2420 ;;
  2421                           
  2422     070E                     _setup:	
  2423                           ;psect for function _setup
  2424                           
  2425     070E                     l2278:	
  2426                           ;incstack = 0
  2427                           ; Regs used in _setup: [wreg+status,2+status,0]
  2428                           
  2429                           
  2430                           ;Kart_main.c: 231:     ANSEL = 0b00000011;
  2431     070E  3003               	movlw	3
  2432     070F  1683               	bsf	3,5	;RP0=1, select bank3
  2433     0710  1703               	bsf	3,6	;RP1=1, select bank3
  2434     0711  0088               	movwf	8	;volatile
  2435     0712                     l2280:
  2436                           
  2437                           ;Kart_main.c: 232:     ANSELH = 0;
  2438     0712  0189               	clrf	9	;volatile
  2439     0713                     l2282:
  2440                           
  2441                           ;Kart_main.c: 234:     TRISA = 0xFF;
  2442     0713  30FF               	movlw	255
  2443     0714  1683               	bsf	3,5	;RP0=1, select bank1
  2444     0715  1303               	bcf	3,6	;RP1=0, select bank1
  2445     0716  0085               	movwf	5	;volatile
  2446     0717                     l2284:
  2447                           
  2448                           ;Kart_main.c: 235:     TRISB = 0b11111111;
  2449     0717  30FF               	movlw	255
  2450     0718  0086               	movwf	6	;volatile
  2451     0719                     l2286:
  2452                           
  2453                           ;Kart_main.c: 236:     TRISD = 0;
  2454     0719  0188               	clrf	8	;volatile
  2455     071A                     l2288:
  2456                           
  2457                           ;Kart_main.c: 237:     OPTION_REGbits.nRBPU = 0;
  2458     071A  1381               	bcf	1,7	;volatile
  2459                           
  2460                           ;Kart_main.c: 238:     WPUB = 0b1111;
  2461     071B  300F               	movlw	15
  2462     071C  0095               	movwf	21	;volatile
  2463     071D                     l2290:
  2464                           
  2465                           ;Kart_main.c: 239:     PORTB = 0;
  2466     071D  1283               	bcf	3,5	;RP0=0, select bank0
  2467     071E  1303               	bcf	3,6	;RP1=0, select bank0
  2468     071F  0186               	clrf	6	;volatile
  2469     0720                     l2292:
  2470                           
  2471                           ;Kart_main.c: 240:     PORTC = 0;
  2472     0720  0187               	clrf	7	;volatile
  2473     0721                     l2294:
  2474                           
  2475                           ;Kart_main.c: 241:     PORTD = 0;
  2476     0721  0188               	clrf	8	;volatile
  2477     0722                     l2296:
  2478                           
  2479                           ;Kart_main.c: 242:     PORTE = 0;
  2480     0722  0189               	clrf	9	;volatile
  2481     0723                     l2298:
  2482                           
  2483                           ;Kart_main.c: 248:     OSCCONbits.IRCF = 0b0111;
  2484     0723  3070               	movlw	112
  2485     0724  1683               	bsf	3,5	;RP0=1, select bank1
  2486     0725  1303               	bcf	3,6	;RP1=0, select bank1
  2487     0726  048F               	iorwf	15,f	;volatile
  2488     0727                     l2300:
  2489                           
  2490                           ;Kart_main.c: 249:     OSCCONbits.SCS = 1;
  2491     0727  140F               	bsf	15,0	;volatile
  2492     0728                     l2302:
  2493                           
  2494                           ;Kart_main.c: 252:     ADCON1bits.ADFM = 0;
  2495     0728  139F               	bcf	31,7	;volatile
  2496     0729                     l2304:
  2497                           
  2498                           ;Kart_main.c: 253:     ADCON1bits.VCFG0 = 0;
  2499     0729  121F               	bcf	31,4	;volatile
  2500     072A                     l2306:
  2501                           
  2502                           ;Kart_main.c: 254:     ADCON1bits.VCFG1 = 0;
  2503     072A  129F               	bcf	31,5	;volatile
  2504     072B                     l2308:
  2505                           
  2506                           ;Kart_main.c: 256:     ADCON0bits.ADCS = 0b01;
  2507     072B  1283               	bcf	3,5	;RP0=0, select bank0
  2508     072C  1303               	bcf	3,6	;RP1=0, select bank0
  2509     072D  081F               	movf	31,w	;volatile
  2510     072E  393F               	andlw	-193
  2511     072F  3840               	iorlw	64
  2512     0730  009F               	movwf	31	;volatile
  2513     0731                     l2310:
  2514                           
  2515                           ;Kart_main.c: 257:     ADCON0bits.CHS = 0;
  2516     0731  30C3               	movlw	-61
  2517     0732  059F               	andwf	31,f	;volatile
  2518     0733                     l2312:
  2519                           
  2520                           ;Kart_main.c: 258:     ADCON0bits.ADON= 1;
  2521     0733  141F               	bsf	31,0	;volatile
  2522     0734                     l2314:
  2523                           
  2524                           ;Kart_main.c: 259:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  2525     0734  300F               	movlw	15
  2526     0735  1283               	bcf	3,5	;RP0=0, select bank0
  2527     0736  1303               	bcf	3,6	;RP1=0, select bank0
  2528     0737  00AD               	movwf	??_setup
  2529     0738                     u2507:
  2530     0738  0BAD               	decfsz	??_setup,f
  2531     0739  2F38               	goto	u2507
  2532     073A  2F3B               	nop2
  2533     073B                     l2316:
  2534                           
  2535                           ;Kart_main.c: 263:     PIR1bits.ADIF = 0;
  2536     073B  1283               	bcf	3,5	;RP0=0, select bank0
  2537     073C  1303               	bcf	3,6	;RP1=0, select bank0
  2538     073D  130C               	bcf	12,6	;volatile
  2539     073E                     l2318:
  2540                           
  2541                           ;Kart_main.c: 264:     PIE1bits.ADIE = 1;
  2542     073E  1683               	bsf	3,5	;RP0=1, select bank1
  2543     073F  1303               	bcf	3,6	;RP1=0, select bank1
  2544     0740  170C               	bsf	12,6	;volatile
  2545     0741                     l2320:
  2546                           
  2547                           ;Kart_main.c: 266:     INTCONbits.RBIE = 0;
  2548     0741  118B               	bcf	11,3	;volatile
  2549     0742                     l2322:
  2550                           
  2551                           ;Kart_main.c: 267:     INTCONbits.RBIF = 1;
  2552     0742  140B               	bsf	11,0	;volatile
  2553     0743                     l2324:
  2554                           
  2555                           ;Kart_main.c: 269:     INTCONbits.PEIE = 1;
  2556     0743  170B               	bsf	11,6	;volatile
  2557     0744                     l2326:
  2558                           
  2559                           ;Kart_main.c: 270:     INTCONbits.GIE = 1;
  2560     0744  178B               	bsf	11,7	;volatile
  2561     0745                     l156:
  2562     0745  0008               	return
  2563     0746                     __end_of_setup:
  2564                           
  2565                           	psect	text8
  2566     07C2                     __ptext8:	
  2567 ;; *************** function _preguntas *****************
  2568 ;; Defined at:
  2569 ;;		line 272 in file "Kart_main.c"
  2570 ;; Parameters:    Size  Location     Type
  2571 ;;		None
  2572 ;; Auto vars:     Size  Location     Type
  2573 ;;		None
  2574 ;; Return value:  Size  Location     Type
  2575 ;;                  1    wreg      void 
  2576 ;; Registers used:
  2577 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2578 ;; Tracked objects:
  2579 ;;		On entry : 0/0
  2580 ;;		On exit  : 0/0
  2581 ;;		Unchanged: 0/0
  2582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2583 ;;      Params:         0       0       0       0       0
  2584 ;;      Locals:         0       0       0       0       0
  2585 ;;      Temps:          0       0       0       0       0
  2586 ;;      Totals:         0       0       0       0       0
  2587 ;;Total ram usage:        0 bytes
  2588 ;; Hardware stack levels used: 1
  2589 ;; Hardware stack levels required when called: 4
  2590 ;; This function calls:
  2591 ;;		_UART_Print
  2592 ;; This function is called by:
  2593 ;;		_main
  2594 ;; This function uses a non-reentrant model
  2595 ;;
  2596                           
  2597     07C2                     _preguntas:	
  2598                           ;psect for function _preguntas
  2599                           
  2600     07C2                     l2468:	
  2601                           ;incstack = 0
  2602                           ; Regs used in _preguntas: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2603                           
  2604                           
  2605                           ;Kart_main.c: 274:     UART_Print ("1.Leer potenciometro\r\n");
  2606     07C2  301A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2607     07C3  1283               	bcf	3,5	;RP0=0, select bank0
  2608     07C4  1303               	bcf	3,6	;RP1=0, select bank0
  2609     07C5  00AE               	movwf	UART_Print@data
  2610     07C6  3080               	movlw	128
  2611     07C7  00AF               	movwf	UART_Print@data+1
  2612     07C8  120A  118A  2746  120A  118A  	fcall	_UART_Print
  2613                           
  2614                           ;Kart_main.c: 275:     UART_Print (message);
  2615     07CD  300B               	movlw	(low ((_message-__stringbase)| (0+32768)))& (0+255)
  2616     07CE  1283               	bcf	3,5	;RP0=0, select bank0
  2617     07CF  1303               	bcf	3,6	;RP1=0, select bank0
  2618     07D0  00AE               	movwf	UART_Print@data
  2619     07D1  3080               	movlw	128
  2620     07D2  00AF               	movwf	UART_Print@data+1
  2621     07D3  120A  118A  2746  120A  118A  	fcall	_UART_Print
  2622     07D8                     l159:
  2623     07D8  0008               	return
  2624     07D9                     __end_of_preguntas:
  2625                           
  2626                           	psect	text9
  2627     0746                     __ptext9:	
  2628 ;; *************** function _UART_Print *****************
  2629 ;; Defined at:
  2630 ;;		line 65 in file "USARTmodl.c"
  2631 ;; Parameters:    Size  Location     Type
  2632 ;;  data            2   14[BANK0 ] PTR const unsigned char 
  2633 ;;		 -> STR_7(23), STR_6(3), ROM(8192), STR_5(3), 
  2634 ;;		 -> main@text(9), STR_3(3), STR_2(3), message(15), 
  2635 ;;		 -> STR_1(23), 
  2636 ;; Auto vars:     Size  Location     Type
  2637 ;;  i               1   18[BANK0 ] unsigned char 
  2638 ;; Return value:  Size  Location     Type
  2639 ;;                  1    wreg      void 
  2640 ;; Registers used:
  2641 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2642 ;; Tracked objects:
  2643 ;;		On entry : 0/0
  2644 ;;		On exit  : 0/0
  2645 ;;		Unchanged: 0/0
  2646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2647 ;;      Params:         0       2       0       0       0
  2648 ;;      Locals:         0       1       0       0       0
  2649 ;;      Temps:          0       2       0       0       0
  2650 ;;      Totals:         0       5       0       0       0
  2651 ;;Total ram usage:        5 bytes
  2652 ;; Hardware stack levels used: 1
  2653 ;; Hardware stack levels required when called: 3
  2654 ;; This function calls:
  2655 ;;		_UART_PutC
  2656 ;; This function is called by:
  2657 ;;		_main
  2658 ;;		_preguntas
  2659 ;; This function uses a non-reentrant model
  2660 ;;
  2661                           
  2662     0746                     _UART_Print:	
  2663                           ;psect for function _UART_Print
  2664                           
  2665     0746                     l2120:	
  2666                           ;incstack = 0
  2667                           ; Regs used in _UART_Print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2668                           
  2669                           
  2670                           ;USARTmodl.c: 65: void UART_Print(const char *data);USARTmodl.c: 66: {;USARTmodl.c: 67: 
      +                            uint8_t i = 0;
  2671     0746  1283               	bcf	3,5	;RP0=0, select bank0
  2672     0747  1303               	bcf	3,6	;RP1=0, select bank0
  2673     0748  01B2               	clrf	UART_Print@i
  2674                           
  2675                           ;USARTmodl.c: 68:   while (data[i] != '\0')
  2676     0749  2F65               	goto	l2126
  2677     074A                     l2122:
  2678                           
  2679                           ;USARTmodl.c: 69:     UART_PutC (data[i++]);
  2680     074A  0832               	movf	UART_Print@i,w
  2681     074B  00B0               	movwf	??_UART_Print
  2682     074C  01B1               	clrf	??_UART_Print+1
  2683     074D  0830               	movf	??_UART_Print,w
  2684     074E  072E               	addwf	UART_Print@data,w
  2685     074F  0084               	movwf	4
  2686     0750  0831               	movf	??_UART_Print+1,w
  2687     0751  1803               	skipnc
  2688     0752  0A31               	incf	??_UART_Print+1,w
  2689     0753  072F               	addwf	UART_Print@data+1,w
  2690     0754  00FF               	movwf	btemp+1
  2691     0755  120A  118A  2600  120A  118A  	fcall	stringtab
  2692     075A  120A  118A  27EF  120A  118A  	fcall	_UART_PutC
  2693     075F                     l2124:
  2694     075F  3001               	movlw	1
  2695     0760  1283               	bcf	3,5	;RP0=0, select bank0
  2696     0761  1303               	bcf	3,6	;RP1=0, select bank0
  2697     0762  00B0               	movwf	??_UART_Print
  2698     0763  0830               	movf	??_UART_Print,w
  2699     0764  07B2               	addwf	UART_Print@i,f
  2700     0765                     l2126:
  2701                           
  2702                           ;USARTmodl.c: 68:   while (data[i] != '\0')
  2703     0765  0832               	movf	UART_Print@i,w
  2704     0766  00B0               	movwf	??_UART_Print
  2705     0767  01B1               	clrf	??_UART_Print+1
  2706     0768  0830               	movf	??_UART_Print,w
  2707     0769  072E               	addwf	UART_Print@data,w
  2708     076A  0084               	movwf	4
  2709     076B  0831               	movf	??_UART_Print+1,w
  2710     076C  1803               	skipnc
  2711     076D  0A31               	incf	??_UART_Print+1,w
  2712     076E  072F               	addwf	UART_Print@data+1,w
  2713     076F  00FF               	movwf	btemp+1
  2714     0770  120A  118A  2600  120A  118A  	fcall	stringtab
  2715     0775  3A00               	xorlw	0
  2716     0776  1D03               	skipz
  2717     0777  2F79               	goto	u1821
  2718     0778  2F7A               	goto	u1820
  2719     0779                     u1821:
  2720     0779  2F4A               	goto	l2122
  2721     077A                     u1820:
  2722     077A                     l249:
  2723     077A  0008               	return
  2724     077B                     __end_of_UART_Print:
  2725                           
  2726                           	psect	text10
  2727     07EF                     __ptext10:	
  2728 ;; *************** function _UART_PutC *****************
  2729 ;; Defined at:
  2730 ;;		line 59 in file "USARTmodl.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;  data            1    wreg     const unsigned char 
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;  data            1   13[BANK0 ] const unsigned char 
  2735 ;; Return value:  Size  Location     Type
  2736 ;;                  1    wreg      void 
  2737 ;; Registers used:
  2738 ;;		wreg
  2739 ;; Tracked objects:
  2740 ;;		On entry : 0/0
  2741 ;;		On exit  : 0/0
  2742 ;;		Unchanged: 0/0
  2743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2744 ;;      Params:         0       0       0       0       0
  2745 ;;      Locals:         0       1       0       0       0
  2746 ;;      Temps:          0       0       0       0       0
  2747 ;;      Totals:         0       1       0       0       0
  2748 ;;Total ram usage:        1 bytes
  2749 ;; Hardware stack levels used: 1
  2750 ;; Hardware stack levels required when called: 2
  2751 ;; This function calls:
  2752 ;;		Nothing
  2753 ;; This function is called by:
  2754 ;;		_main
  2755 ;;		_UART_Print
  2756 ;; This function uses a non-reentrant model
  2757 ;;
  2758                           
  2759     07EF                     _UART_PutC:	
  2760                           ;psect for function _UART_PutC
  2761                           
  2762                           
  2763                           ;incstack = 0
  2764                           ; Regs used in _UART_PutC: [wreg]
  2765                           ;UART_PutC@data stored from wreg
  2766     07EF  1283               	bcf	3,5	;RP0=0, select bank0
  2767     07F0  1303               	bcf	3,6	;RP1=0, select bank0
  2768     07F1  00AD               	movwf	UART_PutC@data
  2769     07F2                     l2116:
  2770     07F2                     l240:	
  2771                           ;USARTmodl.c: 59: void UART_PutC(const char data);USARTmodl.c: 60: {;USARTmodl.c: 61:   
      +                          while (TRMT == 0);
  2772                           
  2773     07F2  1683               	bsf	3,5	;RP0=1, select bank1
  2774     07F3  1303               	bcf	3,6	;RP1=0, select bank1
  2775     07F4  1C98               	btfss	24,1	;volatile
  2776     07F5  2FF7               	goto	u1811
  2777     07F6  2FF8               	goto	u1810
  2778     07F7                     u1811:
  2779     07F7  2FF2               	goto	l240
  2780     07F8                     u1810:
  2781     07F8                     l2118:
  2782                           
  2783                           ;USARTmodl.c: 62:   TXREG = data;
  2784     07F8  1283               	bcf	3,5	;RP0=0, select bank0
  2785     07F9  1303               	bcf	3,6	;RP1=0, select bank0
  2786     07FA  082D               	movf	UART_PutC@data,w
  2787     07FB  0099               	movwf	25	;volatile
  2788     07FC                     l243:
  2789     07FC  0008               	return
  2790     07FD                     __end_of_UART_PutC:
  2791                           
  2792                           	psect	text11
  2793     0465                     __ptext11:	
  2794 ;; *************** function _UART_Init *****************
  2795 ;; Defined at:
  2796 ;;		line 14 in file "USARTmodl.c"
  2797 ;; Parameters:    Size  Location     Type
  2798 ;;  baud_rate       4   27[BANK0 ] const unsigned long 
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;  n               2   35[BANK0 ] int 
  2801 ;; Return value:  Size  Location     Type
  2802 ;;                  1    wreg      void 
  2803 ;; Registers used:
  2804 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2805 ;; Tracked objects:
  2806 ;;		On entry : 0/0
  2807 ;;		On exit  : 0/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2810 ;;      Params:         0       4       0       0       0
  2811 ;;      Locals:         0       2       0       0       0
  2812 ;;      Temps:          0       4       0       0       0
  2813 ;;      Totals:         0      10       0       0       0
  2814 ;;Total ram usage:       10 bytes
  2815 ;; Hardware stack levels used: 1
  2816 ;; Hardware stack levels required when called: 3
  2817 ;; This function calls:
  2818 ;;		___lldiv
  2819 ;; This function is called by:
  2820 ;;		_main
  2821 ;; This function uses a non-reentrant model
  2822 ;;
  2823                           
  2824     0465                     _UART_Init:	
  2825                           ;psect for function _UART_Init
  2826                           
  2827     0465                     l2354:	
  2828                           ;incstack = 0
  2829                           ; Regs used in _UART_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2830                           
  2831                           
  2832                           ;USARTmodl.c: 14: void UART_Init(const uint32_t baud_rate);USARTmodl.c: 15: {;USARTmodl.
      +                          c: 16:   int16_t n = ( 8000000 / (16 * baud_rate) ) - 1;
  2833     0465  1283               	bcf	3,5	;RP0=0, select bank0
  2834     0466  1303               	bcf	3,6	;RP1=0, select bank0
  2835     0467  083B               	movf	UART_Init@baud_rate,w
  2836     0468  00BF               	movwf	??_UART_Init
  2837     0469  083C               	movf	UART_Init@baud_rate+1,w
  2838     046A  00C0               	movwf	??_UART_Init+1
  2839     046B  083D               	movf	UART_Init@baud_rate+2,w
  2840     046C  00C1               	movwf	??_UART_Init+2
  2841     046D  083E               	movf	UART_Init@baud_rate+3,w
  2842     046E  00C2               	movwf	??_UART_Init+3
  2843     046F  3004               	movlw	4
  2844     0470                     u2225:
  2845     0470  1003               	clrc
  2846     0471  0DBF               	rlf	??_UART_Init,f
  2847     0472  0DC0               	rlf	??_UART_Init+1,f
  2848     0473  0DC1               	rlf	??_UART_Init+2,f
  2849     0474  0DC2               	rlf	??_UART_Init+3,f
  2850     0475                     u2220:
  2851     0475  3EFF               	addlw	-1
  2852     0476  1D03               	skipz
  2853     0477  2C70               	goto	u2225
  2854     0478  0842               	movf	??_UART_Init+3,w
  2855     0479  00B0               	movwf	___lldiv@divisor+3
  2856     047A  0841               	movf	??_UART_Init+2,w
  2857     047B  00AF               	movwf	___lldiv@divisor+2
  2858     047C  0840               	movf	??_UART_Init+1,w
  2859     047D  00AE               	movwf	___lldiv@divisor+1
  2860     047E  083F               	movf	??_UART_Init,w
  2861     047F  00AD               	movwf	___lldiv@divisor
  2862     0480  3000               	movlw	0
  2863     0481  00B4               	movwf	___lldiv@dividend+3
  2864     0482  307A               	movlw	122
  2865     0483  00B3               	movwf	___lldiv@dividend+2
  2866     0484  3012               	movlw	18
  2867     0485  00B2               	movwf	___lldiv@dividend+1
  2868     0486  3000               	movlw	0
  2869     0487  00B1               	movwf	___lldiv@dividend
  2870     0488  120A  118A  257D  120A  118A  	fcall	___lldiv
  2871     048D  1283               	bcf	3,5	;RP0=0, select bank0
  2872     048E  1303               	bcf	3,6	;RP1=0, select bank0
  2873     048F  082D               	movf	?___lldiv,w
  2874     0490  3EFF               	addlw	255
  2875     0491  00C3               	movwf	UART_Init@n
  2876     0492  082E               	movf	?___lldiv+1,w
  2877     0493  1803               	skipnc
  2878     0494  3E01               	addlw	1
  2879     0495  3EFF               	addlw	255
  2880     0496  00C4               	movwf	UART_Init@n+1
  2881     0497                     l2356:
  2882                           
  2883                           ;USARTmodl.c: 18:   if (n < 0)
  2884     0497  1FC4               	btfss	UART_Init@n+1,7
  2885     0498  2C9A               	goto	u2231
  2886     0499  2C9B               	goto	u2230
  2887     049A                     u2231:
  2888     049A  2C9D               	goto	l2360
  2889     049B                     u2230:
  2890     049B                     l2358:
  2891                           
  2892                           ;USARTmodl.c: 19:     n = 0;
  2893     049B  01C3               	clrf	UART_Init@n
  2894     049C  01C4               	clrf	UART_Init@n+1
  2895     049D                     l2360:
  2896                           
  2897                           ;USARTmodl.c: 21:   if (n > 255)
  2898     049D  0844               	movf	UART_Init@n+1,w
  2899     049E  3A80               	xorlw	128
  2900     049F  00FF               	movwf	btemp+1
  2901     04A0  3081               	movlw	129
  2902     04A1  027F               	subwf	btemp+1,w
  2903     04A2  1D03               	skipz
  2904     04A3  2CA6               	goto	u2245
  2905     04A4  3000               	movlw	0
  2906     04A5  0243               	subwf	UART_Init@n,w
  2907     04A6                     u2245:
  2908     04A6  1C03               	skipc
  2909     04A7  2CA9               	goto	u2241
  2910     04A8  2CAA               	goto	u2240
  2911     04A9                     u2241:
  2912     04A9  2CF8               	goto	l2368
  2913     04AA                     u2240:
  2914     04AA                     l2362:
  2915                           
  2916                           ;USARTmodl.c: 22:   {;USARTmodl.c: 23:     n = ( 8000000 / (64 * baud_rate) ) - 1;
  2917     04AA  1283               	bcf	3,5	;RP0=0, select bank0
  2918     04AB  1303               	bcf	3,6	;RP1=0, select bank0
  2919     04AC  083B               	movf	UART_Init@baud_rate,w
  2920     04AD  00BF               	movwf	??_UART_Init
  2921     04AE  083C               	movf	UART_Init@baud_rate+1,w
  2922     04AF  00C0               	movwf	??_UART_Init+1
  2923     04B0  083D               	movf	UART_Init@baud_rate+2,w
  2924     04B1  00C1               	movwf	??_UART_Init+2
  2925     04B2  083E               	movf	UART_Init@baud_rate+3,w
  2926     04B3  00C2               	movwf	??_UART_Init+3
  2927     04B4  3006               	movlw	6
  2928     04B5                     u2255:
  2929     04B5  1003               	clrc
  2930     04B6  0DBF               	rlf	??_UART_Init,f
  2931     04B7  0DC0               	rlf	??_UART_Init+1,f
  2932     04B8  0DC1               	rlf	??_UART_Init+2,f
  2933     04B9  0DC2               	rlf	??_UART_Init+3,f
  2934     04BA                     u2250:
  2935     04BA  3EFF               	addlw	-1
  2936     04BB  1D03               	skipz
  2937     04BC  2CB5               	goto	u2255
  2938     04BD  0842               	movf	??_UART_Init+3,w
  2939     04BE  00B0               	movwf	___lldiv@divisor+3
  2940     04BF  0841               	movf	??_UART_Init+2,w
  2941     04C0  00AF               	movwf	___lldiv@divisor+2
  2942     04C1  0840               	movf	??_UART_Init+1,w
  2943     04C2  00AE               	movwf	___lldiv@divisor+1
  2944     04C3  083F               	movf	??_UART_Init,w
  2945     04C4  00AD               	movwf	___lldiv@divisor
  2946     04C5  3000               	movlw	0
  2947     04C6  00B4               	movwf	___lldiv@dividend+3
  2948     04C7  307A               	movlw	122
  2949     04C8  00B3               	movwf	___lldiv@dividend+2
  2950     04C9  3012               	movlw	18
  2951     04CA  00B2               	movwf	___lldiv@dividend+1
  2952     04CB  3000               	movlw	0
  2953     04CC  00B1               	movwf	___lldiv@dividend
  2954     04CD  120A  118A  257D  120A  118A  	fcall	___lldiv
  2955     04D2  1283               	bcf	3,5	;RP0=0, select bank0
  2956     04D3  1303               	bcf	3,6	;RP1=0, select bank0
  2957     04D4  082D               	movf	?___lldiv,w
  2958     04D5  3EFF               	addlw	255
  2959     04D6  00C3               	movwf	UART_Init@n
  2960     04D7  082E               	movf	?___lldiv+1,w
  2961     04D8  1803               	skipnc
  2962     04D9  3E01               	addlw	1
  2963     04DA  3EFF               	addlw	255
  2964     04DB  00C4               	movwf	UART_Init@n+1
  2965     04DC                     l2364:
  2966                           
  2967                           ;USARTmodl.c: 24:     if (n > 255)
  2968     04DC  0844               	movf	UART_Init@n+1,w
  2969     04DD  3A80               	xorlw	128
  2970     04DE  00FF               	movwf	btemp+1
  2971     04DF  3081               	movlw	129
  2972     04E0  027F               	subwf	btemp+1,w
  2973     04E1  1D03               	skipz
  2974     04E2  2CE5               	goto	u2265
  2975     04E3  3000               	movlw	0
  2976     04E4  0243               	subwf	UART_Init@n,w
  2977     04E5                     u2265:
  2978     04E5  1C03               	skipc
  2979     04E6  2CE8               	goto	u2261
  2980     04E7  2CE9               	goto	u2260
  2981     04E8                     u2261:
  2982     04E8  2CEF               	goto	l221
  2983     04E9                     u2260:
  2984     04E9                     l2366:
  2985                           
  2986                           ;USARTmodl.c: 25:       n = 255;
  2987     04E9  30FF               	movlw	255
  2988     04EA  1283               	bcf	3,5	;RP0=0, select bank0
  2989     04EB  1303               	bcf	3,6	;RP1=0, select bank0
  2990     04EC  00C3               	movwf	UART_Init@n
  2991     04ED  3000               	movlw	0
  2992     04EE  00C4               	movwf	UART_Init@n+1
  2993     04EF                     l221:
  2994                           
  2995                           ;USARTmodl.c: 26:     SPBRG = n;
  2996     04EF  1283               	bcf	3,5	;RP0=0, select bank0
  2997     04F0  1303               	bcf	3,6	;RP1=0, select bank0
  2998     04F1  0843               	movf	UART_Init@n,w
  2999     04F2  1683               	bsf	3,5	;RP0=1, select bank1
  3000     04F3  1303               	bcf	3,6	;RP1=0, select bank1
  3001     04F4  0099               	movwf	25	;volatile
  3002                           
  3003                           ;USARTmodl.c: 27:     TXSTA = 0x20;
  3004     04F5  3020               	movlw	32
  3005     04F6  0098               	movwf	24	;volatile
  3006                           
  3007                           ;USARTmodl.c: 28:   }
  3008     04F7  2D00               	goto	l222
  3009     04F8                     l2368:
  3010                           
  3011                           ;USARTmodl.c: 31:   {;USARTmodl.c: 32:     SPBRG = n;
  3012     04F8  1283               	bcf	3,5	;RP0=0, select bank0
  3013     04F9  1303               	bcf	3,6	;RP1=0, select bank0
  3014     04FA  0843               	movf	UART_Init@n,w
  3015     04FB  1683               	bsf	3,5	;RP0=1, select bank1
  3016     04FC  1303               	bcf	3,6	;RP1=0, select bank1
  3017     04FD  0099               	movwf	25	;volatile
  3018                           
  3019                           ;USARTmodl.c: 33:     TXSTA = 0x24;
  3020     04FE  3024               	movlw	36
  3021     04FF  0098               	movwf	24	;volatile
  3022     0500                     l222:	
  3023                           ;USARTmodl.c: 34:   }
  3024                           
  3025                           
  3026                           ;USARTmodl.c: 36:   RCSTA = 0x90;
  3027     0500  3090               	movlw	144
  3028     0501  1283               	bcf	3,5	;RP0=0, select bank0
  3029     0502  1303               	bcf	3,6	;RP1=0, select bank0
  3030     0503  0098               	movwf	24	;volatile
  3031     0504                     l223:
  3032     0504  0008               	return
  3033     0505                     __end_of_UART_Init:
  3034                           
  3035                           	psect	text12
  3036     057D                     __ptext12:	
  3037 ;; *************** function ___lldiv *****************
  3038 ;; Defined at:
  3039 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  3040 ;; Parameters:    Size  Location     Type
  3041 ;;  divisor         4   13[BANK0 ] unsigned long 
  3042 ;;  dividend        4   17[BANK0 ] unsigned long 
  3043 ;; Auto vars:     Size  Location     Type
  3044 ;;  quotient        4   22[BANK0 ] unsigned long 
  3045 ;;  counter         1   26[BANK0 ] unsigned char 
  3046 ;; Return value:  Size  Location     Type
  3047 ;;                  4   13[BANK0 ] unsigned long 
  3048 ;; Registers used:
  3049 ;;		wreg, status,2, status,0
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3055 ;;      Params:         0       8       0       0       0
  3056 ;;      Locals:         0       5       0       0       0
  3057 ;;      Temps:          0       1       0       0       0
  3058 ;;      Totals:         0      14       0       0       0
  3059 ;;Total ram usage:       14 bytes
  3060 ;; Hardware stack levels used: 1
  3061 ;; Hardware stack levels required when called: 2
  3062 ;; This function calls:
  3063 ;;		Nothing
  3064 ;; This function is called by:
  3065 ;;		_UART_Init
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069     057D                     ___lldiv:	
  3070                           ;psect for function ___lldiv
  3071                           
  3072     057D                     l2154:	
  3073                           ;incstack = 0
  3074                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3075                           
  3076     057D  3000               	movlw	0
  3077     057E  1283               	bcf	3,5	;RP0=0, select bank0
  3078     057F  1303               	bcf	3,6	;RP1=0, select bank0
  3079     0580  00B9               	movwf	___lldiv@quotient+3
  3080     0581  3000               	movlw	0
  3081     0582  00B8               	movwf	___lldiv@quotient+2
  3082     0583  3000               	movlw	0
  3083     0584  00B7               	movwf	___lldiv@quotient+1
  3084     0585  3000               	movlw	0
  3085     0586  00B6               	movwf	___lldiv@quotient
  3086     0587  0830               	movf	___lldiv@divisor+3,w
  3087     0588  042F               	iorwf	___lldiv@divisor+2,w
  3088     0589  042E               	iorwf	___lldiv@divisor+1,w
  3089     058A  042D               	iorwf	___lldiv@divisor,w
  3090     058B  1903               	skipnz
  3091     058C  2D8E               	goto	u1891
  3092     058D  2D8F               	goto	u1890
  3093     058E                     u1891:
  3094     058E  2DDC               	goto	l2174
  3095     058F                     u1890:
  3096     058F                     l2156:
  3097     058F  01BA               	clrf	___lldiv@counter
  3098     0590  0ABA               	incf	___lldiv@counter,f
  3099     0591  2D9F               	goto	l2160
  3100     0592                     l2158:
  3101     0592  3001               	movlw	1
  3102     0593  00B5               	movwf	??___lldiv
  3103     0594                     u1905:
  3104     0594  1003               	clrc
  3105     0595  0DAD               	rlf	___lldiv@divisor,f
  3106     0596  0DAE               	rlf	___lldiv@divisor+1,f
  3107     0597  0DAF               	rlf	___lldiv@divisor+2,f
  3108     0598  0DB0               	rlf	___lldiv@divisor+3,f
  3109     0599  0BB5               	decfsz	??___lldiv,f
  3110     059A  2D94               	goto	u1905
  3111     059B  3001               	movlw	1
  3112     059C  00B5               	movwf	??___lldiv
  3113     059D  0835               	movf	??___lldiv,w
  3114     059E  07BA               	addwf	___lldiv@counter,f
  3115     059F                     l2160:
  3116     059F  1FB0               	btfss	___lldiv@divisor+3,7
  3117     05A0  2DA2               	goto	u1911
  3118     05A1  2DA3               	goto	u1910
  3119     05A2                     u1911:
  3120     05A2  2D92               	goto	l2158
  3121     05A3                     u1910:
  3122     05A3                     l2162:
  3123     05A3  3001               	movlw	1
  3124     05A4  00B5               	movwf	??___lldiv
  3125     05A5                     u1925:
  3126     05A5  1003               	clrc
  3127     05A6  0DB6               	rlf	___lldiv@quotient,f
  3128     05A7  0DB7               	rlf	___lldiv@quotient+1,f
  3129     05A8  0DB8               	rlf	___lldiv@quotient+2,f
  3130     05A9  0DB9               	rlf	___lldiv@quotient+3,f
  3131     05AA  0BB5               	decfsz	??___lldiv,f
  3132     05AB  2DA5               	goto	u1925
  3133     05AC                     l2164:
  3134     05AC  0830               	movf	___lldiv@divisor+3,w
  3135     05AD  0234               	subwf	___lldiv@dividend+3,w
  3136     05AE  1D03               	skipz
  3137     05AF  2DBA               	goto	u1935
  3138     05B0  082F               	movf	___lldiv@divisor+2,w
  3139     05B1  0233               	subwf	___lldiv@dividend+2,w
  3140     05B2  1D03               	skipz
  3141     05B3  2DBA               	goto	u1935
  3142     05B4  082E               	movf	___lldiv@divisor+1,w
  3143     05B5  0232               	subwf	___lldiv@dividend+1,w
  3144     05B6  1D03               	skipz
  3145     05B7  2DBA               	goto	u1935
  3146     05B8  082D               	movf	___lldiv@divisor,w
  3147     05B9  0231               	subwf	___lldiv@dividend,w
  3148     05BA                     u1935:
  3149     05BA  1C03               	skipc
  3150     05BB  2DBD               	goto	u1931
  3151     05BC  2DBE               	goto	u1930
  3152     05BD                     u1931:
  3153     05BD  2DCD               	goto	l2170
  3154     05BE                     u1930:
  3155     05BE                     l2166:
  3156     05BE  082D               	movf	___lldiv@divisor,w
  3157     05BF  02B1               	subwf	___lldiv@dividend,f
  3158     05C0  082E               	movf	___lldiv@divisor+1,w
  3159     05C1  1C03               	skipc
  3160     05C2  0F2E               	incfsz	___lldiv@divisor+1,w
  3161     05C3  02B2               	subwf	___lldiv@dividend+1,f
  3162     05C4  082F               	movf	___lldiv@divisor+2,w
  3163     05C5  1C03               	skipc
  3164     05C6  0F2F               	incfsz	___lldiv@divisor+2,w
  3165     05C7  02B3               	subwf	___lldiv@dividend+2,f
  3166     05C8  0830               	movf	___lldiv@divisor+3,w
  3167     05C9  1C03               	skipc
  3168     05CA  0F30               	incfsz	___lldiv@divisor+3,w
  3169     05CB  02B4               	subwf	___lldiv@dividend+3,f
  3170     05CC                     l2168:
  3171     05CC  1436               	bsf	___lldiv@quotient,0
  3172     05CD                     l2170:
  3173     05CD  3001               	movlw	1
  3174     05CE                     u1945:
  3175     05CE  1003               	clrc
  3176     05CF  0CB0               	rrf	___lldiv@divisor+3,f
  3177     05D0  0CAF               	rrf	___lldiv@divisor+2,f
  3178     05D1  0CAE               	rrf	___lldiv@divisor+1,f
  3179     05D2  0CAD               	rrf	___lldiv@divisor,f
  3180     05D3  3EFF               	addlw	-1
  3181     05D4  1D03               	skipz
  3182     05D5  2DCE               	goto	u1945
  3183     05D6                     l2172:
  3184     05D6  3001               	movlw	1
  3185     05D7  02BA               	subwf	___lldiv@counter,f
  3186     05D8  1D03               	btfss	3,2
  3187     05D9  2DDB               	goto	u1951
  3188     05DA  2DDC               	goto	u1950
  3189     05DB                     u1951:
  3190     05DB  2DA3               	goto	l2162
  3191     05DC                     u1950:
  3192     05DC                     l2174:
  3193     05DC  0839               	movf	___lldiv@quotient+3,w
  3194     05DD  00B0               	movwf	?___lldiv+3
  3195     05DE  0838               	movf	___lldiv@quotient+2,w
  3196     05DF  00AF               	movwf	?___lldiv+2
  3197     05E0  0837               	movf	___lldiv@quotient+1,w
  3198     05E1  00AE               	movwf	?___lldiv+1
  3199     05E2  0836               	movf	___lldiv@quotient,w
  3200     05E3  00AD               	movwf	?___lldiv
  3201     05E4                     l417:
  3202     05E4  0008               	return
  3203     05E5                     __end_of___lldiv:
  3204                           
  3205                           	psect	text13
  3206     0FDF                     __ptext13:	
  3207 ;; *************** function _UART_GetC *****************
  3208 ;; Defined at:
  3209 ;;		line 46 in file "USARTmodl.c"
  3210 ;; Parameters:    Size  Location     Type
  3211 ;;		None
  3212 ;; Auto vars:     Size  Location     Type
  3213 ;;		None
  3214 ;; Return value:  Size  Location     Type
  3215 ;;                  1    wreg      unsigned char 
  3216 ;; Registers used:
  3217 ;;		wreg
  3218 ;; Tracked objects:
  3219 ;;		On entry : 0/0
  3220 ;;		On exit  : 0/0
  3221 ;;		Unchanged: 0/0
  3222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3223 ;;      Params:         0       0       0       0       0
  3224 ;;      Locals:         0       0       0       0       0
  3225 ;;      Temps:          0       0       0       0       0
  3226 ;;      Totals:         0       0       0       0       0
  3227 ;;Total ram usage:        0 bytes
  3228 ;; Hardware stack levels used: 1
  3229 ;; Hardware stack levels required when called: 2
  3230 ;; This function calls:
  3231 ;;		Nothing
  3232 ;; This function is called by:
  3233 ;;		_main
  3234 ;; This function uses a non-reentrant model
  3235 ;;
  3236                           
  3237     0FDF                     _UART_GetC:	
  3238                           ;psect for function _UART_GetC
  3239                           
  3240     0FDF                     l2478:	
  3241                           ;incstack = 0
  3242                           ; Regs used in _UART_GetC: [wreg]
  3243                           
  3244     0FDF                     l233:	
  3245                           ;USARTmodl.c: 48:   while (RCIF == 0) ;
  3246                           
  3247     0FDF  1283               	bcf	3,5	;RP0=0, select bank0
  3248     0FE0  1303               	bcf	3,6	;RP1=0, select bank0
  3249     0FE1  1E8C               	btfss	12,5	;volatile
  3250     0FE2  2FE4               	goto	u2411
  3251     0FE3  2FE5               	goto	u2410
  3252     0FE4                     u2411:
  3253     0FE4  2FDF               	goto	l233
  3254     0FE5                     u2410:
  3255     0FE5                     l235:
  3256                           
  3257                           ;USARTmodl.c: 49:   if (OERR)
  3258     0FE5  1C98               	btfss	24,1	;volatile
  3259     0FE6  2FE8               	goto	u2421
  3260     0FE7  2FE9               	goto	u2420
  3261     0FE8                     u2421:
  3262     0FE8  2FEB               	goto	l2482
  3263     0FE9                     u2420:
  3264     0FE9                     l2480:
  3265                           
  3266                           ;USARTmodl.c: 50:   {;USARTmodl.c: 51:     CREN = 0;
  3267     0FE9  1218               	bcf	24,4	;volatile
  3268                           
  3269                           ;USARTmodl.c: 52:     CREN = 1;
  3270     0FEA  1618               	bsf	24,4	;volatile
  3271     0FEB                     l2482:
  3272                           
  3273                           ;USARTmodl.c: 54:   return RCREG;
  3274     0FEB  081A               	movf	26,w	;volatile
  3275     0FEC                     l237:
  3276     0FEC  0008               	return
  3277     0FED                     __end_of_UART_GetC:
  3278                           
  3279                           	psect	text14
  3280     0FC8                     __ptext14:	
  3281 ;; *************** function _UART_Data_Ready *****************
  3282 ;; Defined at:
  3283 ;;		line 41 in file "USARTmodl.c"
  3284 ;; Parameters:    Size  Location     Type
  3285 ;;		None
  3286 ;; Auto vars:     Size  Location     Type
  3287 ;;		None
  3288 ;; Return value:  Size  Location     Type
  3289 ;;		None               void
  3290 ;; Registers used:
  3291 ;;		status,2, status,0
  3292 ;; Tracked objects:
  3293 ;;		On entry : 0/0
  3294 ;;		On exit  : 0/0
  3295 ;;		Unchanged: 0/0
  3296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3297 ;;      Params:         0       0       0       0       0
  3298 ;;      Locals:         0       0       0       0       0
  3299 ;;      Temps:          0       0       0       0       0
  3300 ;;      Totals:         0       0       0       0       0
  3301 ;;Total ram usage:        0 bytes
  3302 ;; Hardware stack levels used: 1
  3303 ;; Hardware stack levels required when called: 2
  3304 ;; This function calls:
  3305 ;;		Nothing
  3306 ;; This function is called by:
  3307 ;;		_main
  3308 ;; This function uses a non-reentrant model
  3309 ;;
  3310                           
  3311     0FC8                     _UART_Data_Ready:	
  3312                           ;psect for function _UART_Data_Ready
  3313                           
  3314     0FC8                     l2470:	
  3315                           ;incstack = 0
  3316                           ; Regs used in _UART_Data_Ready: [status]
  3317                           
  3318                           
  3319                           ;USARTmodl.c: 43:   return RCIF;
  3320     0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  3321     0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  3322     0FCA  1A8C               	btfsc	12,5	;volatile
  3323     0FCB  2FCD               	goto	u2401
  3324     0FCC  2FCE               	goto	u2400
  3325     0FCD                     u2401:
  3326     0FCD  2FD0               	goto	l2474
  3327     0FCE                     u2400:
  3328     0FCE                     l2472:
  3329     0FCE  1003               	clrc
  3330     0FCF  2FD1               	goto	l230
  3331     0FD0                     l2474:
  3332     0FD0  1403               	setc
  3333     0FD1                     l230:
  3334     0FD1  0008               	return
  3335     0FD2                     __end_of_UART_Data_Ready:
  3336                           
  3337                           	psect	text15
  3338     068D                     __ptext15:	
  3339 ;; *************** function _PWM_init *****************
  3340 ;; Defined at:
  3341 ;;		line 11 in file "PWM.c"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;  chn1            2   23[BANK0 ] int 
  3344 ;;  chn2            2   25[BANK0 ] int 
  3345 ;;  periodo_ms      4   27[BANK0 ] float 
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;		None
  3348 ;; Return value:  Size  Location     Type
  3349 ;;                  1    wreg      void 
  3350 ;; Registers used:
  3351 ;;		wreg, status,2, status,0, pclath, cstack
  3352 ;; Tracked objects:
  3353 ;;		On entry : 0/0
  3354 ;;		On exit  : 0/0
  3355 ;;		Unchanged: 0/0
  3356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3357 ;;      Params:         0       8       0       0       0
  3358 ;;      Locals:         0       0       0       0       0
  3359 ;;      Temps:          0       0       0       0       0
  3360 ;;      Totals:         0       8       0       0       0
  3361 ;;Total ram usage:        8 bytes
  3362 ;; Hardware stack levels used: 1
  3363 ;; Hardware stack levels required when called: 3
  3364 ;; This function calls:
  3365 ;;		___fltol
  3366 ;; This function is called by:
  3367 ;;		_main
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371     068D                     _PWM_init:	
  3372                           ;psect for function _PWM_init
  3373                           
  3374     068D                     l2328:	
  3375                           ;incstack = 0
  3376                           ; Regs used in _PWM_init: [wreg+status,2+status,0+pclath+cstack]
  3377                           
  3378                           
  3379                           ;PWM.c: 13:     TRISCbits.TRISC1 = chn2;
  3380     068D  1283               	bcf	3,5	;RP0=0, select bank0
  3381     068E  1303               	bcf	3,6	;RP1=0, select bank0
  3382     068F  0C39               	rrf	PWM_init@chn2,w
  3383     0690  1683               	bsf	3,5	;RP0=1, select bank1
  3384     0691  1303               	bcf	3,6	;RP1=0, select bank1
  3385     0692  1C03               	skipc
  3386     0693  1087               	bcf	7,1	;volatile
  3387     0694  1803               	skipnc
  3388     0695  1487               	bsf	7,1	;volatile
  3389                           
  3390                           ;PWM.c: 14:     TRISCbits.TRISC2 = chn1;
  3391     0696  1283               	bcf	3,5	;RP0=0, select bank0
  3392     0697  1303               	bcf	3,6	;RP1=0, select bank0
  3393     0698  0C37               	rrf	PWM_init@chn1,w
  3394     0699  1683               	bsf	3,5	;RP0=1, select bank1
  3395     069A  1303               	bcf	3,6	;RP1=0, select bank1
  3396     069B  1C03               	skipc
  3397     069C  1107               	bcf	7,2	;volatile
  3398     069D  1803               	skipnc
  3399     069E  1507               	bsf	7,2	;volatile
  3400     069F                     l2330:
  3401                           
  3402                           ;PWM.c: 16:     PR2 = periodo_ms;
  3403     069F  1283               	bcf	3,5	;RP0=0, select bank0
  3404     06A0  1303               	bcf	3,6	;RP1=0, select bank0
  3405     06A1  083E               	movf	PWM_init@periodo_ms+3,w
  3406     06A2  00B0               	movwf	___fltol@f1+3
  3407     06A3  083D               	movf	PWM_init@periodo_ms+2,w
  3408     06A4  00AF               	movwf	___fltol@f1+2
  3409     06A5  083C               	movf	PWM_init@periodo_ms+1,w
  3410     06A6  00AE               	movwf	___fltol@f1+1
  3411     06A7  083B               	movf	PWM_init@periodo_ms,w
  3412     06A8  00AD               	movwf	___fltol@f1
  3413     06A9  120A  118A  2505  120A  118A  	fcall	___fltol
  3414     06AE  1283               	bcf	3,5	;RP0=0, select bank0
  3415     06AF  1303               	bcf	3,6	;RP1=0, select bank0
  3416     06B0  082D               	movf	?___fltol,w
  3417     06B1  1683               	bsf	3,5	;RP0=1, select bank1
  3418     06B2  1303               	bcf	3,6	;RP1=0, select bank1
  3419     06B3  0092               	movwf	18	;volatile
  3420     06B4                     l2332:
  3421                           
  3422                           ;PWM.c: 17:     CCP1CONbits.P1M =0;
  3423     06B4  303F               	movlw	-193
  3424     06B5  1283               	bcf	3,5	;RP0=0, select bank0
  3425     06B6  1303               	bcf	3,6	;RP1=0, select bank0
  3426     06B7  0597               	andwf	23,f	;volatile
  3427     06B8                     l2334:
  3428                           
  3429                           ;PWM.c: 18:     CCP1CONbits.CCP1M =0b1100;
  3430     06B8  0817               	movf	23,w	;volatile
  3431     06B9  39F0               	andlw	-16
  3432     06BA  380C               	iorlw	12
  3433     06BB  0097               	movwf	23	;volatile
  3434     06BC                     l2336:
  3435                           
  3436                           ;PWM.c: 20:     CCPR1L = 0x0f;
  3437     06BC  300F               	movlw	15
  3438     06BD  0095               	movwf	21	;volatile
  3439     06BE                     l2338:
  3440                           
  3441                           ;PWM.c: 21:     CCP1CONbits.DC1B= 0;
  3442     06BE  30CF               	movlw	-49
  3443     06BF  0597               	andwf	23,f	;volatile
  3444     06C0                     l2340:
  3445                           
  3446                           ;PWM.c: 23:     PIR1bits.TMR2IF =0;
  3447     06C0  108C               	bcf	12,1	;volatile
  3448     06C1                     l2342:
  3449                           
  3450                           ;PWM.c: 24:     T2CONbits.T2CKPS = 0b11;
  3451     06C1  3003               	movlw	3
  3452     06C2  0492               	iorwf	18,f	;volatile
  3453     06C3                     l2344:
  3454                           
  3455                           ;PWM.c: 25:     T2CONbits.TMR2ON = 1;
  3456     06C3  1512               	bsf	18,2	;volatile
  3457     06C4                     l2346:
  3458                           
  3459                           ;PWM.c: 28:     CCP2CONbits.CCP2M = 0b1100;
  3460     06C4  081D               	movf	29,w	;volatile
  3461     06C5  39F0               	andlw	-16
  3462     06C6  380C               	iorlw	12
  3463     06C7  009D               	movwf	29	;volatile
  3464     06C8                     l2348:
  3465                           
  3466                           ;PWM.c: 29:     CCPR2L = 0x0f;
  3467     06C8  300F               	movlw	15
  3468     06C9  009B               	movwf	27	;volatile
  3469     06CA                     l2350:
  3470                           
  3471                           ;PWM.c: 30:     CCP2CONbits.DC2B0 = 0;
  3472     06CA  121D               	bcf	29,4	;volatile
  3473     06CB                     l2352:
  3474                           
  3475                           ;PWM.c: 31:     CCP2CONbits.DC2B1 = 0;
  3476     06CB  129D               	bcf	29,5	;volatile
  3477     06CC                     l188:	
  3478                           ;PWM.c: 34:     while (PIR1bits.TMR2IF == 0);
  3479                           
  3480     06CC  1C8C               	btfss	12,1	;volatile
  3481     06CD  2ECF               	goto	u2211
  3482     06CE  2ED0               	goto	u2210
  3483     06CF                     u2211:
  3484     06CF  2ECC               	goto	l188
  3485     06D0                     u2210:
  3486     06D0                     l190:
  3487                           
  3488                           ;PWM.c: 35:     PIR1bits.TMR2IF = 0;
  3489     06D0  108C               	bcf	12,1	;volatile
  3490     06D1                     l191:
  3491     06D1  0008               	return
  3492     06D2                     __end_of_PWM_init:
  3493                           
  3494                           	psect	text16
  3495     0505                     __ptext16:	
  3496 ;; *************** function ___fltol *****************
  3497 ;; Defined at:
  3498 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  3499 ;; Parameters:    Size  Location     Type
  3500 ;;  f1              4   13[BANK0 ] void 
  3501 ;; Auto vars:     Size  Location     Type
  3502 ;;  exp1            1   22[BANK0 ] unsigned char 
  3503 ;;  sign1           1   21[BANK0 ] unsigned char 
  3504 ;; Return value:  Size  Location     Type
  3505 ;;                  4   13[BANK0 ] long 
  3506 ;; Registers used:
  3507 ;;		wreg, status,2, status,0
  3508 ;; Tracked objects:
  3509 ;;		On entry : 0/0
  3510 ;;		On exit  : 0/0
  3511 ;;		Unchanged: 0/0
  3512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3513 ;;      Params:         0       4       0       0       0
  3514 ;;      Locals:         0       2       0       0       0
  3515 ;;      Temps:          0       4       0       0       0
  3516 ;;      Totals:         0      10       0       0       0
  3517 ;;Total ram usage:       10 bytes
  3518 ;; Hardware stack levels used: 1
  3519 ;; Hardware stack levels required when called: 2
  3520 ;; This function calls:
  3521 ;;		Nothing
  3522 ;; This function is called by:
  3523 ;;		_PWM_init
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526                           
  3527     0505                     ___fltol:	
  3528                           ;psect for function ___fltol
  3529                           
  3530     0505                     l2178:	
  3531                           ;incstack = 0
  3532                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3533                           
  3534     0505  1003               	clrc
  3535     0506  1283               	bcf	3,5	;RP0=0, select bank0
  3536     0507  1303               	bcf	3,6	;RP1=0, select bank0
  3537     0508  0D2F               	rlf	___fltol@f1+2,w
  3538     0509  0D30               	rlf	___fltol@f1+3,w
  3539     050A  00B6               	movwf	___fltol@exp1
  3540     050B  0836               	movf	___fltol@exp1,w
  3541     050C  1D03               	btfss	3,2
  3542     050D  2D0F               	goto	u1961
  3543     050E  2D10               	goto	u1960
  3544     050F                     u1961:
  3545     050F  2D19               	goto	l2184
  3546     0510                     u1960:
  3547     0510                     l2180:
  3548     0510  3000               	movlw	0
  3549     0511  00B0               	movwf	?___fltol+3
  3550     0512  3000               	movlw	0
  3551     0513  00AF               	movwf	?___fltol+2
  3552     0514  3000               	movlw	0
  3553     0515  00AE               	movwf	?___fltol+1
  3554     0516  3000               	movlw	0
  3555     0517  00AD               	movwf	?___fltol
  3556     0518  2D7C               	goto	l567
  3557     0519                     l2184:
  3558     0519  082D               	movf	___fltol@f1,w
  3559     051A  00B1               	movwf	??___fltol
  3560     051B  082E               	movf	___fltol@f1+1,w
  3561     051C  00B2               	movwf	??___fltol+1
  3562     051D  082F               	movf	___fltol@f1+2,w
  3563     051E  00B3               	movwf	??___fltol+2
  3564     051F  0830               	movf	___fltol@f1+3,w
  3565     0520  00B4               	movwf	??___fltol+3
  3566     0521  301F               	movlw	31
  3567     0522                     u1975:
  3568     0522  1003               	clrc
  3569     0523  0CB4               	rrf	??___fltol+3,f
  3570     0524  0CB3               	rrf	??___fltol+2,f
  3571     0525  0CB2               	rrf	??___fltol+1,f
  3572     0526  0CB1               	rrf	??___fltol,f
  3573     0527                     u1970:
  3574     0527  3EFF               	addlw	-1
  3575     0528  1D03               	skipz
  3576     0529  2D22               	goto	u1975
  3577     052A  0831               	movf	??___fltol,w
  3578     052B  00B5               	movwf	___fltol@sign1
  3579     052C                     l2186:
  3580     052C  17AF               	bsf	___fltol@f1+2,7
  3581     052D                     l2188:
  3582     052D  30FF               	movlw	255
  3583     052E  05AD               	andwf	___fltol@f1,f
  3584     052F  30FF               	movlw	255
  3585     0530  05AE               	andwf	___fltol@f1+1,f
  3586     0531  30FF               	movlw	255
  3587     0532  05AF               	andwf	___fltol@f1+2,f
  3588     0533  3000               	movlw	0
  3589     0534  05B0               	andwf	___fltol@f1+3,f
  3590     0535                     l2190:
  3591     0535  3096               	movlw	150
  3592     0536  02B6               	subwf	___fltol@exp1,f
  3593     0537                     l2192:
  3594     0537  1FB6               	btfss	___fltol@exp1,7
  3595     0538  2D3A               	goto	u1981
  3596     0539  2D3B               	goto	u1980
  3597     053A                     u1981:
  3598     053A  2D55               	goto	l2202
  3599     053B                     u1980:
  3600     053B                     l2194:
  3601     053B  0836               	movf	___fltol@exp1,w
  3602     053C  3A80               	xorlw	128
  3603     053D  3E97               	addlw	151
  3604     053E  1803               	skipnc
  3605     053F  2D41               	goto	u1991
  3606     0540  2D42               	goto	u1990
  3607     0541                     u1991:
  3608     0541  2D43               	goto	l2200
  3609     0542                     u1990:
  3610     0542  2D10               	goto	l2180
  3611     0543                     l2200:
  3612     0543  3001               	movlw	1
  3613     0544                     u2005:
  3614     0544  1003               	clrc
  3615     0545  0CB0               	rrf	___fltol@f1+3,f
  3616     0546  0CAF               	rrf	___fltol@f1+2,f
  3617     0547  0CAE               	rrf	___fltol@f1+1,f
  3618     0548  0CAD               	rrf	___fltol@f1,f
  3619     0549  3EFF               	addlw	-1
  3620     054A  1D03               	skipz
  3621     054B  2D44               	goto	u2005
  3622     054C  3001               	movlw	1
  3623     054D  00B1               	movwf	??___fltol
  3624     054E  0831               	movf	??___fltol,w
  3625     054F  07B6               	addwf	___fltol@exp1,f
  3626     0550  1D03               	btfss	3,2
  3627     0551  2D53               	goto	u2011
  3628     0552  2D54               	goto	u2010
  3629     0553                     u2011:
  3630     0553  2D43               	goto	l2200
  3631     0554                     u2010:
  3632     0554  2D6C               	goto	l2210
  3633     0555                     l2202:
  3634     0555  3020               	movlw	32
  3635     0556  0236               	subwf	___fltol@exp1,w
  3636     0557  1C03               	skipc
  3637     0558  2D5A               	goto	u2021
  3638     0559  2D5B               	goto	u2020
  3639     055A                     u2021:
  3640     055A  2D67               	goto	l574
  3641     055B                     u2020:
  3642     055B  2D10               	goto	l2180
  3643     055C                     l2208:
  3644     055C  3001               	movlw	1
  3645     055D  00B1               	movwf	??___fltol
  3646     055E                     u2035:
  3647     055E  1003               	clrc
  3648     055F  0DAD               	rlf	___fltol@f1,f
  3649     0560  0DAE               	rlf	___fltol@f1+1,f
  3650     0561  0DAF               	rlf	___fltol@f1+2,f
  3651     0562  0DB0               	rlf	___fltol@f1+3,f
  3652     0563  0BB1               	decfsz	??___fltol,f
  3653     0564  2D5E               	goto	u2035
  3654     0565  3001               	movlw	1
  3655     0566  02B6               	subwf	___fltol@exp1,f
  3656     0567                     l574:
  3657     0567  0836               	movf	___fltol@exp1,w
  3658     0568  1D03               	btfss	3,2
  3659     0569  2D6B               	goto	u2041
  3660     056A  2D6C               	goto	u2040
  3661     056B                     u2041:
  3662     056B  2D5C               	goto	l2208
  3663     056C                     u2040:
  3664     056C                     l2210:
  3665     056C  0835               	movf	___fltol@sign1,w
  3666     056D  1903               	btfsc	3,2
  3667     056E  2D70               	goto	u2051
  3668     056F  2D71               	goto	u2050
  3669     0570                     u2051:
  3670     0570  2D7C               	goto	l577
  3671     0571                     u2050:
  3672     0571                     l2212:
  3673     0571  09AD               	comf	___fltol@f1,f
  3674     0572  09AE               	comf	___fltol@f1+1,f
  3675     0573  09AF               	comf	___fltol@f1+2,f
  3676     0574  09B0               	comf	___fltol@f1+3,f
  3677     0575  0AAD               	incf	___fltol@f1,f
  3678     0576  1903               	skipnz
  3679     0577  0AAE               	incf	___fltol@f1+1,f
  3680     0578  1903               	skipnz
  3681     0579  0AAF               	incf	___fltol@f1+2,f
  3682     057A  1903               	skipnz
  3683     057B  0AB0               	incf	___fltol@f1+3,f
  3684     057C                     l577:
  3685     057C                     l567:
  3686     057C  0008               	return
  3687     057D                     __end_of___fltol:
  3688                           
  3689                           	psect	text17
  3690     02E5                     __ptext17:	
  3691 ;; *************** function _isr *****************
  3692 ;; Defined at:
  3693 ;;		line 85 in file "Kart_main.c"
  3694 ;; Parameters:    Size  Location     Type
  3695 ;;		None
  3696 ;; Auto vars:     Size  Location     Type
  3697 ;;		None
  3698 ;; Return value:  Size  Location     Type
  3699 ;;                  1    wreg      void 
  3700 ;; Registers used:
  3701 ;;		wreg, status,2, status,0, pclath, cstack
  3702 ;; Tracked objects:
  3703 ;;		On entry : 0/0
  3704 ;;		On exit  : 0/0
  3705 ;;		Unchanged: 0/0
  3706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3707 ;;      Params:         0       0       0       0       0
  3708 ;;      Locals:         0       0       0       0       0
  3709 ;;      Temps:          0       6       0       0       0
  3710 ;;      Totals:         0       6       0       0       0
  3711 ;;Total ram usage:        6 bytes
  3712 ;; Hardware stack levels used: 1
  3713 ;; Hardware stack levels required when called: 1
  3714 ;; This function calls:
  3715 ;;		_PWM_duty
  3716 ;;		___xxtofl
  3717 ;;		_readEEPROM
  3718 ;;		_writeEEPROM
  3719 ;; This function is called by:
  3720 ;;		Interrupt level 1
  3721 ;; This function uses a non-reentrant model
  3722 ;;
  3723                           
  3724     02E5                     _isr:	
  3725                           ;psect for function _isr
  3726                           
  3727     02E5                     i1l1950:
  3728                           
  3729                           ;Kart_main.c: 87:    if(PIR1bits.ADIF){
  3730     02E5  1F0C               	btfss	12,6	;volatile
  3731     02E6  2AE8               	goto	u169_21
  3732     02E7  2AE9               	goto	u169_20
  3733     02E8                     u169_21:
  3734     02E8  2B7A               	goto	i1l1968
  3735     02E9                     u169_20:
  3736     02E9                     i1l1952:
  3737                           
  3738                           ;Kart_main.c: 89:        if (ADCON0bits.CHS ==1){
  3739     02E9  0C1F               	rrf	31,w	;volatile
  3740     02EA  00A7               	movwf	??_isr
  3741     02EB  0C27               	rrf	??_isr,w
  3742     02EC  390F               	andlw	15
  3743     02ED  3A01               	xorlw	1
  3744     02EE  1D03               	skipz
  3745     02EF  2AF1               	goto	u170_21
  3746     02F0  2AF2               	goto	u170_20
  3747     02F1                     u170_21:
  3748     02F1  2B18               	goto	i1l1956
  3749     02F2                     u170_20:
  3750     02F2                     i1l1954:
  3751                           
  3752                           ;Kart_main.c: 90:              PWM_duty(0,ADRESH);
  3753     02F2  3000               	movlw	0
  3754     02F3  00A0               	movwf	PWM_duty@chn
  3755     02F4  00A1               	movwf	PWM_duty@chn+1
  3756     02F5  081E               	movf	30,w	;volatile
  3757     02F6  00A7               	movwf	??_isr
  3758     02F7  01A8               	clrf	??_isr+1
  3759     02F8  01A9               	clrf	??_isr+2
  3760     02F9  01AA               	clrf	??_isr+3
  3761     02FA  082A               	movf	??_isr+3,w
  3762     02FB  00F3               	movwf	___xxtofl@val+3
  3763     02FC  0829               	movf	??_isr+2,w
  3764     02FD  00F2               	movwf	___xxtofl@val+2
  3765     02FE  0828               	movf	??_isr+1,w
  3766     02FF  00F1               	movwf	___xxtofl@val+1
  3767     0300  0827               	movf	??_isr,w
  3768     0301  00F0               	movwf	___xxtofl@val
  3769     0302  3000               	movlw	0
  3770     0303  120A  118A  23AD  120A  118A  	fcall	___xxtofl
  3771     0308  0873               	movf	?___xxtofl+3,w
  3772     0309  1283               	bcf	3,5	;RP0=0, select bank0
  3773     030A  1303               	bcf	3,6	;RP1=0, select bank0
  3774     030B  00A5               	movwf	PWM_duty@duty+3
  3775     030C  0872               	movf	?___xxtofl+2,w
  3776     030D  00A4               	movwf	PWM_duty@duty+2
  3777     030E  0871               	movf	?___xxtofl+1,w
  3778     030F  00A3               	movwf	PWM_duty@duty+1
  3779     0310  0870               	movf	?___xxtofl,w
  3780     0311  00A2               	movwf	PWM_duty@duty
  3781     0312  120A  118A  27D9  120A  118A  	fcall	_PWM_duty
  3782                           
  3783                           ;Kart_main.c: 93:         }
  3784     0317  2B77               	goto	i1l1966
  3785     0318                     i1l1956:
  3786     0318  0C1F               	rrf	31,w	;volatile
  3787     0319  00A7               	movwf	??_isr
  3788     031A  0C27               	rrf	??_isr,w
  3789     031B  390F               	andlw	15
  3790     031C  3A00               	xorlw	0
  3791     031D  1D03               	skipz
  3792     031E  2B20               	goto	u171_21
  3793     031F  2B21               	goto	u171_20
  3794     0320                     u171_21:
  3795     0320  2B51               	goto	i1l1962
  3796     0321                     u171_20:
  3797     0321                     i1l1958:
  3798                           
  3799                           ;Kart_main.c: 95:             PWM_duty(1 ,ADRESH);
  3800     0321  3001               	movlw	1
  3801     0322  00A0               	movwf	PWM_duty@chn
  3802     0323  3000               	movlw	0
  3803     0324  00A1               	movwf	PWM_duty@chn+1
  3804     0325  081E               	movf	30,w	;volatile
  3805     0326  00A7               	movwf	??_isr
  3806     0327  01A8               	clrf	??_isr+1
  3807     0328  01A9               	clrf	??_isr+2
  3808     0329  01AA               	clrf	??_isr+3
  3809     032A  082A               	movf	??_isr+3,w
  3810     032B  00F3               	movwf	___xxtofl@val+3
  3811     032C  0829               	movf	??_isr+2,w
  3812     032D  00F2               	movwf	___xxtofl@val+2
  3813     032E  0828               	movf	??_isr+1,w
  3814     032F  00F1               	movwf	___xxtofl@val+1
  3815     0330  0827               	movf	??_isr,w
  3816     0331  00F0               	movwf	___xxtofl@val
  3817     0332  3000               	movlw	0
  3818     0333  120A  118A  23AD  120A  118A  	fcall	___xxtofl
  3819     0338  0873               	movf	?___xxtofl+3,w
  3820     0339  1283               	bcf	3,5	;RP0=0, select bank0
  3821     033A  1303               	bcf	3,6	;RP1=0, select bank0
  3822     033B  00A5               	movwf	PWM_duty@duty+3
  3823     033C  0872               	movf	?___xxtofl+2,w
  3824     033D  00A4               	movwf	PWM_duty@duty+2
  3825     033E  0871               	movf	?___xxtofl+1,w
  3826     033F  00A3               	movwf	PWM_duty@duty+1
  3827     0340  0870               	movf	?___xxtofl,w
  3828     0341  00A2               	movwf	PWM_duty@duty
  3829     0342  120A  118A  27D9  120A  118A  	fcall	_PWM_duty
  3830     0347                     i1l1960:
  3831                           
  3832                           ;Kart_main.c: 96:              valpot = ADRESH;
  3833     0347  1283               	bcf	3,5	;RP0=0, select bank0
  3834     0348  1303               	bcf	3,6	;RP1=0, select bank0
  3835     0349  081E               	movf	30,w	;volatile
  3836     034A  00A7               	movwf	??_isr
  3837     034B  01A8               	clrf	??_isr+1
  3838     034C  0827               	movf	??_isr,w
  3839     034D  00D5               	movwf	_valpot
  3840     034E  0828               	movf	??_isr+1,w
  3841     034F  00D6               	movwf	_valpot+1
  3842                           
  3843                           ;Kart_main.c: 97:         }
  3844     0350  2B77               	goto	i1l1966
  3845     0351                     i1l1962:
  3846     0351  0C1F               	rrf	31,w	;volatile
  3847     0352  00A7               	movwf	??_isr
  3848     0353  0C27               	rrf	??_isr,w
  3849     0354  390F               	andlw	15
  3850     0355  3A02               	xorlw	2
  3851     0356  1D03               	skipz
  3852     0357  2B59               	goto	u172_21
  3853     0358  2B5A               	goto	u172_20
  3854     0359                     u172_21:
  3855     0359  2B77               	goto	i1l1966
  3856     035A                     u172_20:
  3857     035A                     i1l1964:
  3858                           
  3859                           ;Kart_main.c: 99:             val = ADRESH;
  3860     035A  081E               	movf	30,w	;volatile
  3861     035B  00A7               	movwf	??_isr
  3862     035C  01A8               	clrf	??_isr+1
  3863     035D  01A9               	clrf	??_isr+2
  3864     035E  01AA               	clrf	??_isr+3
  3865     035F  082A               	movf	??_isr+3,w
  3866     0360  00F3               	movwf	___xxtofl@val+3
  3867     0361  0829               	movf	??_isr+2,w
  3868     0362  00F2               	movwf	___xxtofl@val+2
  3869     0363  0828               	movf	??_isr+1,w
  3870     0364  00F1               	movwf	___xxtofl@val+1
  3871     0365  0827               	movf	??_isr,w
  3872     0366  00F0               	movwf	___xxtofl@val
  3873     0367  3000               	movlw	0
  3874     0368  120A  118A  23AD  120A  118A  	fcall	___xxtofl
  3875     036D  0873               	movf	?___xxtofl+3,w
  3876     036E  1283               	bcf	3,5	;RP0=0, select bank0
  3877     036F  1303               	bcf	3,6	;RP1=0, select bank0
  3878     0370  00D0               	movwf	_val+3
  3879     0371  0872               	movf	?___xxtofl+2,w
  3880     0372  00CF               	movwf	_val+2
  3881     0373  0871               	movf	?___xxtofl+1,w
  3882     0374  00CE               	movwf	_val+1
  3883     0375  0870               	movf	?___xxtofl,w
  3884     0376  00CD               	movwf	_val
  3885     0377                     i1l1966:
  3886                           
  3887                           ;Kart_main.c: 100:             PIR1bits.ADIF =0;
  3888     0377  1283               	bcf	3,5	;RP0=0, select bank0
  3889     0378  1303               	bcf	3,6	;RP1=0, select bank0
  3890     0379  130C               	bcf	12,6	;volatile
  3891     037A                     i1l1968:
  3892                           
  3893                           ;Kart_main.c: 103:    if (INTCONbits.RBIF ){
  3894     037A  1C0B               	btfss	11,0	;volatile
  3895     037B  2B7D               	goto	u173_21
  3896     037C  2B7E               	goto	u173_20
  3897     037D                     u173_21:
  3898     037D  2BA6               	goto	i1l131
  3899     037E                     u173_20:
  3900     037E                     i1l1970:
  3901                           
  3902                           ;Kart_main.c: 112:         if (!PORTBbits.RB1){
  3903     037E  1886               	btfsc	6,1	;volatile
  3904     037F  2B81               	goto	u174_21
  3905     0380  2B82               	goto	u174_20
  3906     0381                     u174_21:
  3907     0381  2B8A               	goto	i1l1976
  3908     0382                     u174_20:
  3909     0382                     i1l124:
  3910     0382  1C86               	btfss	6,1	;volatile
  3911     0383  2B85               	goto	u175_21
  3912     0384  2B86               	goto	u175_20
  3913     0385                     u175_21:
  3914     0385  2B82               	goto	i1l124
  3915     0386                     u175_20:
  3916     0386                     i1l1974:
  3917                           
  3918                           ;Kart_main.c: 114:                 PORTE ++;
  3919     0386  3001               	movlw	1
  3920     0387  00A7               	movwf	??_isr
  3921     0388  0827               	movf	??_isr,w
  3922     0389  0789               	addwf	9,f	;volatile
  3923     038A                     i1l1976:
  3924                           
  3925                           ;Kart_main.c: 119:     if (!PORTBbits.RB2){
  3926     038A  1906               	btfsc	6,2	;volatile
  3927     038B  2B8D               	goto	u176_21
  3928     038C  2B8E               	goto	u176_20
  3929     038D                     u176_21:
  3930     038D  2BA6               	goto	i1l131
  3931     038E                     u176_20:
  3932     038E  2BA2               	goto	i1l1984
  3933     038F                     i1l1980:
  3934                           
  3935                           ;Kart_main.c: 122:                 writeEEPROM(valadr, valpot);
  3936     038F  0855               	movf	_valpot,w
  3937     0390  00F0               	movwf	writeEEPROM@dataEE
  3938     0391  0857               	movf	_valadr,w
  3939     0392  120A  118A  27A2  120A  118A  	fcall	_writeEEPROM
  3940     0397                     i1l1982:
  3941                           
  3942                           ;Kart_main.c: 123:                 PORTD = readEEPROM(valadr);
  3943     0397  1283               	bcf	3,5	;RP0=0, select bank0
  3944     0398  1303               	bcf	3,6	;RP1=0, select bank0
  3945     0399  0857               	movf	_valadr,w
  3946     039A  120A  158A  27D2  120A  118A  	fcall	_readEEPROM
  3947     039F  1283               	bcf	3,5	;RP0=0, select bank0
  3948     03A0  1303               	bcf	3,6	;RP1=0, select bank0
  3949     03A1  0088               	movwf	8	;volatile
  3950     03A2                     i1l1984:
  3951                           
  3952                           ;Kart_main.c: 120:             while (!RB2){
  3953     03A2  1D06               	btfss	6,2	;volatile
  3954     03A3  2BA5               	goto	u177_21
  3955     03A4  2BA6               	goto	u177_20
  3956     03A5                     u177_21:
  3957     03A5  2B8F               	goto	i1l1980
  3958     03A6                     u177_20:
  3959     03A6                     i1l131:
  3960     03A6  082C               	movf	??_isr+5,w
  3961     03A7  008A               	movwf	10
  3962     03A8  0E2B               	swapf	??_isr+4,w
  3963     03A9  0083               	movwf	3
  3964     03AA  0EFE               	swapf	btemp,f
  3965     03AB  0E7E               	swapf	btemp,w
  3966     03AC  0009               	retfie
  3967     03AD                     __end_of_isr:
  3968                           
  3969                           	psect	intentry
  3970     0004                     __pintentry:	
  3971                           ;incstack = 0
  3972                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  3973                           
  3974     0004                     interrupt_function:
  3975     007E                     saved_w	set	btemp
  3976     0004  00FE               	movwf	btemp
  3977     0005  0E03               	swapf	3,w
  3978     0006  1283               	bcf	3,5	;RP0=0, select bank0
  3979     0007  1303               	bcf	3,6	;RP1=0, select bank0
  3980     0008  00AB               	movwf	??_isr+4
  3981     0009  080A               	movf	10,w
  3982     000A  00AC               	movwf	??_isr+5
  3983     000B  120A  118A  2AE5   	ljmp	_isr
  3984                           
  3985                           	psect	text18
  3986     07A2                     __ptext18:	
  3987 ;; *************** function _writeEEPROM *****************
  3988 ;; Defined at:
  3989 ;;		line 60 in file "Kart_main.c"
  3990 ;; Parameters:    Size  Location     Type
  3991 ;;  address         1    wreg     unsigned char 
  3992 ;;  dataEE          1    0[COMMON] unsigned char 
  3993 ;; Auto vars:     Size  Location     Type
  3994 ;;  address         1    1[COMMON] unsigned char 
  3995 ;;  INTCON_SAVE     1    2[COMMON] unsigned char 
  3996 ;; Return value:  Size  Location     Type
  3997 ;;                  1    wreg      void 
  3998 ;; Registers used:
  3999 ;;		wreg, status,2
  4000 ;; Tracked objects:
  4001 ;;		On entry : 0/0
  4002 ;;		On exit  : 0/0
  4003 ;;		Unchanged: 0/0
  4004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4005 ;;      Params:         1       0       0       0       0
  4006 ;;      Locals:         2       0       0       0       0
  4007 ;;      Temps:          0       0       0       0       0
  4008 ;;      Totals:         3       0       0       0       0
  4009 ;;Total ram usage:        3 bytes
  4010 ;; Hardware stack levels used: 1
  4011 ;; This function calls:
  4012 ;;		Nothing
  4013 ;; This function is called by:
  4014 ;;		_isr
  4015 ;; This function uses a non-reentrant model
  4016 ;;
  4017                           
  4018     07A2                     _writeEEPROM:	
  4019                           ;psect for function _writeEEPROM
  4020                           
  4021                           
  4022                           ;incstack = 0
  4023                           ; Regs used in _writeEEPROM: [wreg+status,2]
  4024                           ;writeEEPROM@address stored from wreg
  4025     07A2  00F1               	movwf	writeEEPROM@address
  4026     07A3                     i1l1658:
  4027                           
  4028                           ;Kart_main.c: 60: void writeEEPROM(unsigned char address, unsigned char dataEE);Kart_mai
      +                          n.c: 61: {;Kart_main.c: 62:   unsigned char INTCON_SAVE;;Kart_main.c: 63:   EEADR = addr
      +                          ess;
  4029     07A3  0871               	movf	writeEEPROM@address,w
  4030     07A4  1283               	bcf	3,5	;RP0=0, select bank2
  4031     07A5  1703               	bsf	3,6	;RP1=1, select bank2
  4032     07A6  008D               	movwf	13	;volatile
  4033                           
  4034                           ;Kart_main.c: 64:   EEDATA = dataEE;
  4035     07A7  0870               	movf	writeEEPROM@dataEE,w
  4036     07A8  008C               	movwf	12	;volatile
  4037     07A9                     i1l1660:
  4038                           
  4039                           ;Kart_main.c: 65:   EECON1bits.EEPGD = 0;
  4040     07A9  1683               	bsf	3,5	;RP0=1, select bank3
  4041     07AA  1703               	bsf	3,6	;RP1=1, select bank3
  4042     07AB  138C               	bcf	12,7	;volsfr
  4043     07AC                     i1l1662:
  4044                           
  4045                           ;Kart_main.c: 66:   EECON1bits.WREN = 1;
  4046     07AC  150C               	bsf	12,2	;volsfr
  4047                           
  4048                           ;Kart_main.c: 67:   INTCON_SAVE=INTCON;
  4049     07AD  080B               	movf	11,w	;volatile
  4050     07AE  00F2               	movwf	writeEEPROM@INTCON_SAVE
  4051     07AF                     i1l1664:
  4052                           
  4053                           ;Kart_main.c: 68:   INTCON=0;
  4054     07AF  018B               	clrf	11	;volatile
  4055     07B0                     i1l1666:
  4056                           
  4057                           ;Kart_main.c: 69:   EECON2=0x55;
  4058     07B0  3055               	movlw	85
  4059     07B1  008D               	movwf	13	;volsfr
  4060     07B2                     i1l1668:
  4061                           
  4062                           ;Kart_main.c: 70:   EECON2=0xAA;
  4063     07B2  30AA               	movlw	170
  4064     07B3  008D               	movwf	13	;volsfr
  4065     07B4                     i1l1670:
  4066                           
  4067                           ;Kart_main.c: 71:   EECON1bits.WR = 1;
  4068     07B4  148C               	bsf	12,1	;volsfr
  4069     07B5                     i1l1672:
  4070                           
  4071                           ;Kart_main.c: 72:   INTCON = INTCON_SAVE;
  4072     07B5  0872               	movf	writeEEPROM@INTCON_SAVE,w
  4073     07B6  008B               	movwf	11	;volatile
  4074     07B7                     i1l1674:
  4075                           
  4076                           ;Kart_main.c: 73:   EECON1bits.WREN = 0;
  4077     07B7  110C               	bcf	12,2	;volsfr
  4078                           
  4079                           ;Kart_main.c: 74:   while(PIR2bits.EEIF == 0)
  4080     07B8  2FBA               	goto	i1l108
  4081     07B9                     i1l109:
  4082                           
  4083                           ;Kart_main.c: 75:   {;Kart_main.c: 76:     __nop();
  4084     07B9  0000               	nop
  4085     07BA                     i1l108:	
  4086                           ;Kart_main.c: 77:   }
  4087                           
  4088                           
  4089                           ;Kart_main.c: 74:   while(PIR2bits.EEIF == 0)
  4090     07BA  1283               	bcf	3,5	;RP0=0, select bank0
  4091     07BB  1303               	bcf	3,6	;RP1=0, select bank0
  4092     07BC  1E0D               	btfss	13,4	;volatile
  4093     07BD  2FBF               	goto	u129_21
  4094     07BE  2FC0               	goto	u129_20
  4095     07BF                     u129_21:
  4096     07BF  2FB9               	goto	i1l109
  4097     07C0                     u129_20:
  4098     07C0                     i1l110:
  4099                           
  4100                           ;Kart_main.c: 78:   PIR2bits.EEIF = 0;
  4101     07C0  120D               	bcf	13,4	;volatile
  4102     07C1                     i1l111:
  4103     07C1  0008               	return
  4104     07C2                     __end_of_writeEEPROM:
  4105                           
  4106                           	psect	text19
  4107     0FD2                     __ptext19:	
  4108 ;; *************** function _readEEPROM *****************
  4109 ;; Defined at:
  4110 ;;		line 51 in file "Kart_main.c"
  4111 ;; Parameters:    Size  Location     Type
  4112 ;;  address         1    wreg     unsigned char 
  4113 ;; Auto vars:     Size  Location     Type
  4114 ;;  address         1    0[COMMON] unsigned char 
  4115 ;; Return value:  Size  Location     Type
  4116 ;;                  1    wreg      unsigned char 
  4117 ;; Registers used:
  4118 ;;		wreg
  4119 ;; Tracked objects:
  4120 ;;		On entry : 0/0
  4121 ;;		On exit  : 0/0
  4122 ;;		Unchanged: 0/0
  4123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4124 ;;      Params:         0       0       0       0       0
  4125 ;;      Locals:         1       0       0       0       0
  4126 ;;      Temps:          0       0       0       0       0
  4127 ;;      Totals:         1       0       0       0       0
  4128 ;;Total ram usage:        1 bytes
  4129 ;; Hardware stack levels used: 1
  4130 ;; This function calls:
  4131 ;;		Nothing
  4132 ;; This function is called by:
  4133 ;;		_isr
  4134 ;; This function uses a non-reentrant model
  4135 ;;
  4136                           
  4137     0FD2                     _readEEPROM:	
  4138                           ;psect for function _readEEPROM
  4139                           
  4140                           
  4141                           ;incstack = 0
  4142                           ; Regs used in _readEEPROM: [wreg]
  4143                           ;readEEPROM@address stored from wreg
  4144     0FD2  00F0               	movwf	readEEPROM@address
  4145     0FD3                     i1l1650:
  4146                           
  4147                           ;Kart_main.c: 51: unsigned char readEEPROM(unsigned char address);Kart_main.c: 52: {;Kar
      +                          t_main.c: 54:   EEADR = address;
  4148     0FD3  0870               	movf	readEEPROM@address,w
  4149     0FD4  1283               	bcf	3,5	;RP0=0, select bank2
  4150     0FD5  1703               	bsf	3,6	;RP1=1, select bank2
  4151     0FD6  008D               	movwf	13	;volatile
  4152     0FD7                     i1l1652:
  4153                           
  4154                           ;Kart_main.c: 55:   EECON1bits.EEPGD = 0;
  4155     0FD7  1683               	bsf	3,5	;RP0=1, select bank3
  4156     0FD8  1703               	bsf	3,6	;RP1=1, select bank3
  4157     0FD9  138C               	bcf	12,7	;volsfr
  4158     0FDA                     i1l1654:
  4159                           
  4160                           ;Kart_main.c: 56:   EECON1bits.RD = 1;
  4161     0FDA  140C               	bsf	12,0	;volsfr
  4162                           
  4163                           ;Kart_main.c: 57:   return EEDATA;
  4164     0FDB  1283               	bcf	3,5	;RP0=0, select bank2
  4165     0FDC  1703               	bsf	3,6	;RP1=1, select bank2
  4166     0FDD  080C               	movf	12,w	;volatile
  4167     0FDE                     i1l105:
  4168     0FDE  0008               	return
  4169     0FDF                     __end_of_readEEPROM:
  4170                           
  4171                           	psect	text20
  4172     03AD                     __ptext20:	
  4173 ;; *************** function ___xxtofl *****************
  4174 ;; Defined at:
  4175 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  4176 ;; Parameters:    Size  Location     Type
  4177 ;;  sign            1    wreg     unsigned char 
  4178 ;;  val             4    0[COMMON] long 
  4179 ;; Auto vars:     Size  Location     Type
  4180 ;;  sign            1    8[COMMON] unsigned char 
  4181 ;;  arg             4   10[COMMON] unsigned long 
  4182 ;;  exp             1    9[COMMON] unsigned char 
  4183 ;; Return value:  Size  Location     Type
  4184 ;;                  4    0[COMMON] unsigned char 
  4185 ;; Registers used:
  4186 ;;		wreg, status,2, status,0
  4187 ;; Tracked objects:
  4188 ;;		On entry : 0/0
  4189 ;;		On exit  : 0/0
  4190 ;;		Unchanged: 0/0
  4191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4192 ;;      Params:         4       0       0       0       0
  4193 ;;      Locals:         6       0       0       0       0
  4194 ;;      Temps:          4       0       0       0       0
  4195 ;;      Totals:        14       0       0       0       0
  4196 ;;Total ram usage:       14 bytes
  4197 ;; Hardware stack levels used: 1
  4198 ;; This function calls:
  4199 ;;		Nothing
  4200 ;; This function is called by:
  4201 ;;		_isr
  4202 ;; This function uses a non-reentrant model
  4203 ;;
  4204                           
  4205     03AD                     ___xxtofl:	
  4206                           ;psect for function ___xxtofl
  4207                           
  4208                           
  4209                           ;incstack = 0
  4210                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4211                           ;___xxtofl@sign stored from wreg
  4212     03AD  00F8               	movwf	___xxtofl@sign
  4213     03AE                     i1l1906:
  4214     03AE  0878               	movf	___xxtofl@sign,w
  4215     03AF  1903               	btfsc	3,2
  4216     03B0  2BB2               	goto	u155_21
  4217     03B1  2BB3               	goto	u155_20
  4218     03B2                     u155_21:
  4219     03B2  2BC7               	goto	i1l1912
  4220     03B3                     u155_20:
  4221     03B3                     i1l1908:
  4222     03B3  1FF3               	btfss	___xxtofl@val+3,7
  4223     03B4  2BB6               	goto	u156_21
  4224     03B5  2BB7               	goto	u156_20
  4225     03B6                     u156_21:
  4226     03B6  2BC7               	goto	i1l1912
  4227     03B7                     u156_20:
  4228     03B7                     i1l1910:
  4229     03B7  0970               	comf	___xxtofl@val,w
  4230     03B8  00FA               	movwf	___xxtofl@arg
  4231     03B9  0971               	comf	___xxtofl@val+1,w
  4232     03BA  00FB               	movwf	___xxtofl@arg+1
  4233     03BB  0972               	comf	___xxtofl@val+2,w
  4234     03BC  00FC               	movwf	___xxtofl@arg+2
  4235     03BD  0973               	comf	___xxtofl@val+3,w
  4236     03BE  00FD               	movwf	___xxtofl@arg+3
  4237     03BF  0AFA               	incf	___xxtofl@arg,f
  4238     03C0  1903               	skipnz
  4239     03C1  0AFB               	incf	___xxtofl@arg+1,f
  4240     03C2  1903               	skipnz
  4241     03C3  0AFC               	incf	___xxtofl@arg+2,f
  4242     03C4  1903               	skipnz
  4243     03C5  0AFD               	incf	___xxtofl@arg+3,f
  4244     03C6  2BCF               	goto	i1l814
  4245     03C7                     i1l1912:
  4246     03C7  0873               	movf	___xxtofl@val+3,w
  4247     03C8  00FD               	movwf	___xxtofl@arg+3
  4248     03C9  0872               	movf	___xxtofl@val+2,w
  4249     03CA  00FC               	movwf	___xxtofl@arg+2
  4250     03CB  0871               	movf	___xxtofl@val+1,w
  4251     03CC  00FB               	movwf	___xxtofl@arg+1
  4252     03CD  0870               	movf	___xxtofl@val,w
  4253     03CE  00FA               	movwf	___xxtofl@arg
  4254     03CF                     i1l814:
  4255     03CF  0873               	movf	___xxtofl@val+3,w
  4256     03D0  0472               	iorwf	___xxtofl@val+2,w
  4257     03D1  0471               	iorwf	___xxtofl@val+1,w
  4258     03D2  0470               	iorwf	___xxtofl@val,w
  4259     03D3  1D03               	skipz
  4260     03D4  2BD6               	goto	u157_21
  4261     03D5  2BD7               	goto	u157_20
  4262     03D6                     u157_21:
  4263     03D6  2BE0               	goto	i1l1918
  4264     03D7                     u157_20:
  4265     03D7                     i1l1914:
  4266     03D7  3000               	movlw	0
  4267     03D8  00F3               	movwf	?___xxtofl+3
  4268     03D9  3000               	movlw	0
  4269     03DA  00F2               	movwf	?___xxtofl+2
  4270     03DB  3000               	movlw	0
  4271     03DC  00F1               	movwf	?___xxtofl+1
  4272     03DD  3000               	movlw	0
  4273     03DE  00F0               	movwf	?___xxtofl
  4274     03DF  2C64               	goto	i1l816
  4275     03E0                     i1l1918:
  4276     03E0  3096               	movlw	150
  4277     03E1  00F9               	movwf	___xxtofl@exp
  4278     03E2  2BF0               	goto	i1l1922
  4279     03E3                     i1l1920:
  4280     03E3  3001               	movlw	1
  4281     03E4  00F4               	movwf	??___xxtofl
  4282     03E5  0874               	movf	??___xxtofl,w
  4283     03E6  07F9               	addwf	___xxtofl@exp,f
  4284     03E7  3001               	movlw	1
  4285     03E8                     u158_25:
  4286     03E8  1003               	clrc
  4287     03E9  0CFD               	rrf	___xxtofl@arg+3,f
  4288     03EA  0CFC               	rrf	___xxtofl@arg+2,f
  4289     03EB  0CFB               	rrf	___xxtofl@arg+1,f
  4290     03EC  0CFA               	rrf	___xxtofl@arg,f
  4291     03ED  3EFF               	addlw	-1
  4292     03EE  1D03               	skipz
  4293     03EF  2BE8               	goto	u158_25
  4294     03F0                     i1l1922:
  4295     03F0  30FE               	movlw	254
  4296     03F1  057D               	andwf	___xxtofl@arg+3,w
  4297     03F2  1D03               	btfss	3,2
  4298     03F3  2BF5               	goto	u159_21
  4299     03F4  2BF6               	goto	u159_20
  4300     03F5                     u159_21:
  4301     03F5  2BE3               	goto	i1l1920
  4302     03F6                     u159_20:
  4303     03F6  2C12               	goto	i1l820
  4304     03F7                     i1l1924:
  4305     03F7  3001               	movlw	1
  4306     03F8  00F4               	movwf	??___xxtofl
  4307     03F9  0874               	movf	??___xxtofl,w
  4308     03FA  07F9               	addwf	___xxtofl@exp,f
  4309     03FB                     i1l1926:
  4310     03FB  3001               	movlw	1
  4311     03FC  07FA               	addwf	___xxtofl@arg,f
  4312     03FD  3000               	movlw	0
  4313     03FE  1803               	skipnc
  4314     03FF  3001               	movlw	1
  4315     0400  07FB               	addwf	___xxtofl@arg+1,f
  4316     0401  3000               	movlw	0
  4317     0402  1803               	skipnc
  4318     0403  3001               	movlw	1
  4319     0404  07FC               	addwf	___xxtofl@arg+2,f
  4320     0405  3000               	movlw	0
  4321     0406  1803               	skipnc
  4322     0407  3001               	movlw	1
  4323     0408  07FD               	addwf	___xxtofl@arg+3,f
  4324     0409                     i1l1928:
  4325     0409  3001               	movlw	1
  4326     040A                     u160_25:
  4327     040A  1003               	clrc
  4328     040B  0CFD               	rrf	___xxtofl@arg+3,f
  4329     040C  0CFC               	rrf	___xxtofl@arg+2,f
  4330     040D  0CFB               	rrf	___xxtofl@arg+1,f
  4331     040E  0CFA               	rrf	___xxtofl@arg,f
  4332     040F  3EFF               	addlw	-1
  4333     0410  1D03               	skipz
  4334     0411  2C0A               	goto	u160_25
  4335     0412                     i1l820:
  4336     0412  30FF               	movlw	255
  4337     0413  057D               	andwf	___xxtofl@arg+3,w
  4338     0414  1D03               	btfss	3,2
  4339     0415  2C17               	goto	u161_21
  4340     0416  2C18               	goto	u161_20
  4341     0417                     u161_21:
  4342     0417  2BF7               	goto	i1l1924
  4343     0418                     u161_20:
  4344     0418  2C24               	goto	i1l1932
  4345     0419                     i1l1930:
  4346     0419  3001               	movlw	1
  4347     041A  02F9               	subwf	___xxtofl@exp,f
  4348     041B  3001               	movlw	1
  4349     041C  00F4               	movwf	??___xxtofl
  4350     041D                     u162_25:
  4351     041D  1003               	clrc
  4352     041E  0DFA               	rlf	___xxtofl@arg,f
  4353     041F  0DFB               	rlf	___xxtofl@arg+1,f
  4354     0420  0DFC               	rlf	___xxtofl@arg+2,f
  4355     0421  0DFD               	rlf	___xxtofl@arg+3,f
  4356     0422  0BF4               	decfsz	??___xxtofl,f
  4357     0423  2C1D               	goto	u162_25
  4358     0424                     i1l1932:
  4359     0424  1BFC               	btfsc	___xxtofl@arg+2,7
  4360     0425  2C27               	goto	u163_21
  4361     0426  2C28               	goto	u163_20
  4362     0427                     u163_21:
  4363     0427  2C2E               	goto	i1l827
  4364     0428                     u163_20:
  4365     0428                     i1l1934:
  4366     0428  3002               	movlw	2
  4367     0429  0279               	subwf	___xxtofl@exp,w
  4368     042A  1803               	skipnc
  4369     042B  2C2D               	goto	u164_21
  4370     042C  2C2E               	goto	u164_20
  4371     042D                     u164_21:
  4372     042D  2C19               	goto	i1l1930
  4373     042E                     u164_20:
  4374     042E                     i1l827:
  4375     042E  1879               	btfsc	___xxtofl@exp,0
  4376     042F  2C31               	goto	u165_21
  4377     0430  2C32               	goto	u165_20
  4378     0431                     u165_21:
  4379     0431  2C3A               	goto	i1l828
  4380     0432                     u165_20:
  4381     0432                     i1l1936:
  4382     0432  30FF               	movlw	255
  4383     0433  05FA               	andwf	___xxtofl@arg,f
  4384     0434  30FF               	movlw	255
  4385     0435  05FB               	andwf	___xxtofl@arg+1,f
  4386     0436  307F               	movlw	127
  4387     0437  05FC               	andwf	___xxtofl@arg+2,f
  4388     0438  30FF               	movlw	255
  4389     0439  05FD               	andwf	___xxtofl@arg+3,f
  4390     043A                     i1l828:
  4391     043A  1003               	clrc
  4392     043B  0CF9               	rrf	___xxtofl@exp,f
  4393     043C                     i1l1938:
  4394     043C  0879               	movf	___xxtofl@exp,w
  4395     043D  00F4               	movwf	??___xxtofl
  4396     043E  01F5               	clrf	??___xxtofl+1
  4397     043F  01F6               	clrf	??___xxtofl+2
  4398     0440  01F7               	clrf	??___xxtofl+3
  4399     0441  3018               	movlw	24
  4400     0442                     u166_25:
  4401     0442  1003               	clrc
  4402     0443  0DF4               	rlf	??___xxtofl,f
  4403     0444  0DF5               	rlf	??___xxtofl+1,f
  4404     0445  0DF6               	rlf	??___xxtofl+2,f
  4405     0446  0DF7               	rlf	??___xxtofl+3,f
  4406     0447                     u166_20:
  4407     0447  3EFF               	addlw	-1
  4408     0448  1D03               	skipz
  4409     0449  2C42               	goto	u166_25
  4410     044A  0874               	movf	??___xxtofl,w
  4411     044B  04FA               	iorwf	___xxtofl@arg,f
  4412     044C  0875               	movf	??___xxtofl+1,w
  4413     044D  04FB               	iorwf	___xxtofl@arg+1,f
  4414     044E  0876               	movf	??___xxtofl+2,w
  4415     044F  04FC               	iorwf	___xxtofl@arg+2,f
  4416     0450  0877               	movf	??___xxtofl+3,w
  4417     0451  04FD               	iorwf	___xxtofl@arg+3,f
  4418     0452                     i1l1940:
  4419     0452  0878               	movf	___xxtofl@sign,w
  4420     0453  1903               	btfsc	3,2
  4421     0454  2C56               	goto	u167_21
  4422     0455  2C57               	goto	u167_20
  4423     0456                     u167_21:
  4424     0456  2C5C               	goto	i1l1946
  4425     0457                     u167_20:
  4426     0457                     i1l1942:
  4427     0457  1FF3               	btfss	___xxtofl@val+3,7
  4428     0458  2C5A               	goto	u168_21
  4429     0459  2C5B               	goto	u168_20
  4430     045A                     u168_21:
  4431     045A  2C5C               	goto	i1l1946
  4432     045B                     u168_20:
  4433     045B                     i1l1944:
  4434     045B  17FD               	bsf	___xxtofl@arg+3,7
  4435     045C                     i1l1946:
  4436     045C  087D               	movf	___xxtofl@arg+3,w
  4437     045D  00F3               	movwf	?___xxtofl+3
  4438     045E  087C               	movf	___xxtofl@arg+2,w
  4439     045F  00F2               	movwf	?___xxtofl+2
  4440     0460  087B               	movf	___xxtofl@arg+1,w
  4441     0461  00F1               	movwf	?___xxtofl+1
  4442     0462  087A               	movf	___xxtofl@arg,w
  4443     0463  00F0               	movwf	?___xxtofl
  4444     0464                     i1l816:
  4445     0464  0008               	return
  4446     0465                     __end_of___xxtofl:
  4447                           
  4448                           	psect	text21
  4449     07D9                     __ptext21:	
  4450 ;; *************** function _PWM_duty *****************
  4451 ;; Defined at:
  4452 ;;		line 46 in file "PWM.c"
  4453 ;; Parameters:    Size  Location     Type
  4454 ;;  chn             2    0[BANK0 ] int 
  4455 ;;  duty            4    2[BANK0 ] float 
  4456 ;; Auto vars:     Size  Location     Type
  4457 ;;		None
  4458 ;; Return value:  Size  Location     Type
  4459 ;;                  1    wreg      void 
  4460 ;; Registers used:
  4461 ;;		wreg, status,2, status,0
  4462 ;; Tracked objects:
  4463 ;;		On entry : 0/0
  4464 ;;		On exit  : 0/0
  4465 ;;		Unchanged: 0/0
  4466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4467 ;;      Params:         0       6       0       0       0
  4468 ;;      Locals:         0       0       0       0       0
  4469 ;;      Temps:          0       1       0       0       0
  4470 ;;      Totals:         0       7       0       0       0
  4471 ;;Total ram usage:        7 bytes
  4472 ;; Hardware stack levels used: 1
  4473 ;; This function calls:
  4474 ;;		Nothing
  4475 ;; This function is called by:
  4476 ;;		_isr
  4477 ;; This function uses a non-reentrant model
  4478 ;;
  4479                           
  4480     07D9                     _PWM_duty:	
  4481                           ;psect for function _PWM_duty
  4482                           
  4483     07D9                     i1l1676:	
  4484                           ;incstack = 0
  4485                           ; Regs used in _PWM_duty: [wreg+status,2+status,0]
  4486                           
  4487                           
  4488                           ;PWM.c: 47:       if (chn==0)
  4489     07D9  1283               	bcf	3,5	;RP0=0, select bank0
  4490     07DA  1303               	bcf	3,6	;RP1=0, select bank0
  4491     07DB  0820               	movf	PWM_duty@chn,w
  4492     07DC  0421               	iorwf	PWM_duty@chn+1,w
  4493     07DD  1D03               	btfss	3,2
  4494     07DE  2FE0               	goto	u130_21
  4495     07DF  2FE1               	goto	u130_20
  4496     07E0                     u130_21:
  4497     07E0  2FE8               	goto	i1l1680
  4498     07E1                     u130_20:
  4499     07E1                     i1l1678:
  4500                           
  4501                           ;PWM.c: 48:           CCPR1L = (ADRESH>>1)+128;
  4502     07E1  081E               	movf	30,w	;volatile
  4503     07E2  00A6               	movwf	??_PWM_duty
  4504     07E3  1003               	clrc
  4505     07E4  0C26               	rrf	??_PWM_duty,w
  4506     07E5  3E80               	addlw	128
  4507     07E6  0095               	movwf	21	;volatile
  4508     07E7  2FEE               	goto	i1l196
  4509     07E8                     i1l1680:
  4510                           
  4511                           ;PWM.c: 51:           CCPR2L = (ADRESH>>1)+128;
  4512     07E8  081E               	movf	30,w	;volatile
  4513     07E9  00A6               	movwf	??_PWM_duty
  4514     07EA  1003               	clrc
  4515     07EB  0C26               	rrf	??_PWM_duty,w
  4516     07EC  3E80               	addlw	128
  4517     07ED  009B               	movwf	27	;volatile
  4518     07EE                     i1l196:
  4519     07EE  0008               	return
  4520     07EF                     __end_of_PWM_duty:
  4521     007E                     btemp	set	126	;btemp
  4522     007E                     wtemp0	set	126
  4523                           
  4524                           	psect	idloc
  4525                           
  4526                           ;Config register IDLOC0 @ 0x2000
  4527                           ;	unspecified, using default values
  4528     2000                     	org	8192
  4529     2000  3FFF               	dw	16383
  4530                           
  4531                           ;Config register IDLOC1 @ 0x2001
  4532                           ;	unspecified, using default values
  4533     2001                     	org	8193
  4534     2001  3FFF               	dw	16383
  4535                           
  4536                           ;Config register IDLOC2 @ 0x2002
  4537                           ;	unspecified, using default values
  4538     2002                     	org	8194
  4539     2002  3FFF               	dw	16383
  4540                           
  4541                           ;Config register IDLOC3 @ 0x2003
  4542                           ;	unspecified, using default values
  4543     2003                     	org	8195
  4544     2003  3FFF               	dw	16383
  4545                           
  4546                           	psect	config
  4547                           
  4548                           ;Config register CONFIG1 @ 0x2007
  4549                           ;	Oscillator Selection bits
  4550                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  4551                           ;	Watchdog Timer Enable bit
  4552                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4553                           ;	Power-up Timer Enable bit
  4554                           ;	PWRTE = OFF, PWRT disabled
  4555                           ;	RE3/MCLR pin function select bit
  4556                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4557                           ;	Code Protection bit
  4558                           ;	CP = OFF, Program memory code protection is disabled
  4559                           ;	Data Code Protection bit
  4560                           ;	CPD = OFF, Data memory code protection is disabled
  4561                           ;	Brown Out Reset Selection bits
  4562                           ;	BOREN = OFF, BOR disabled
  4563                           ;	Internal External Switchover bit
  4564                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4565                           ;	Fail-Safe Clock Monitor Enabled bit
  4566                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  4567                           ;	Low Voltage Programming Enable bit
  4568                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  4569                           ;	In-Circuit Debugger Mode bit
  4570                           ;	DEBUG = 0x1, unprogrammed default
  4571     2007                     	org	8199
  4572     2007  38D5               	dw	14549
  4573                           
  4574                           ;Config register CONFIG2 @ 0x2008
  4575                           ;	Brown-out Reset Selection bit
  4576                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4577                           ;	Flash Program Memory Self Write Enable bits
  4578                           ;	WRT = OFF, Write protection off
  4579     2008                     	org	8200
  4580     2008  3FFF               	dw	16383

Data Sizes:
    Strings     30
    Constant    25
    Data        0
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     45      65
    BANK1            80     10      10
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_4(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 9
		 -> main@text(BANK1[9]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UART_Print@data	PTR const unsigned char  size(2) Largest target is 8192
		 -> STR_7(CODE[23]), STR_6(CODE[3]), ROM(CODE[8192]), STR_5(CODE[3]), 
		 -> main@text(BANK1[9]), STR_3(CODE[3]), STR_2(CODE[3]), message(CODE[15]), 
		 -> STR_1(CODE[23]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___xxtofl
    _PWM_duty->___xxtofl

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _preguntas->_UART_Print
    _UART_Print->_UART_PutC
    _UART_Init->___lldiv
    _PWM_init->___fltol

Critical Paths under _isr in BANK0

    _isr->_PWM_duty

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0    6433
                                             42 BANK0      3     3      0
                                              0 BANK1     10    10      0
                           _PWM_init
                    _UART_Data_Ready
                          _UART_GetC
                          _UART_Init
                         _UART_Print
                          _UART_PutC
                          _preguntas
                              _setup
                            _sprintf
                          _uart_read
 ---------------------------------------------------------------------------------
 (1) _uart_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    20      3    2438
                                             27 BANK0     15    12      3
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                             13 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                             13 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                             21 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                             13 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                             13 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _preguntas                                            0     0      0    1061
                         _UART_Print
 ---------------------------------------------------------------------------------
 (2) _UART_Print                                           5     3      2    1061
                                             14 BANK0      5     3      2
                          _UART_PutC
                          _uart_read (ARG)
 ---------------------------------------------------------------------------------
 (3) _UART_PutC                                            1     1      0      31
                                             13 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           10     6      4     920
                                             27 BANK0     10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     601
                                             13 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _UART_GetC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Data_Ready                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_init                                             8     0      8     790
                                             23 BANK0      8     0      8
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     427
                                             13 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  6     6      0    1041
                                              7 BANK0      6     6      0
                           _PWM_duty
                           ___xxtofl
                         _readEEPROM
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (5) _writeEEPROM                                          3     2      1     143
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (5) _readEEPROM                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (5) _PWM_duty                                             7     1      6     326
                                              0 BANK0      7     1      6
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM_init
     ___fltol
   _UART_Data_Ready
   _UART_GetC
   _UART_Init
     ___lldiv
   _UART_Print
     _UART_PutC
     _uart_read (ARG)
   _UART_PutC
   _preguntas
     _UART_Print
   _setup
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
   _uart_read

 _isr (ROOT)
   _PWM_duty
     ___xxtofl (ARG)
   ___xxtofl
   _readEEPROM
   _writeEEPROM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      59       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2D      41       5       81.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      A       A       7       12.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      59      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon May 15 16:26:47 2023

                      _i 0059                        pc 0002                       fsr 0004  
    ___wmul@multiplicand 002F                      l221 04EF                      l230 0FD1  
                    l222 0500                      l223 0504                      l240 07F2  
                    l136 0FFF                      l233 0FDF                      l235 0FE5  
                    l243 07FC                      l156 0745                      l237 0FEC  
                    l190 06D0                      l191 06D1                      l159 07D8  
                    l417 05E4                      l249 077A                      l347 0038  
                    l188 06CC                      l381 0789                      l383 07A1  
                    l377 01A3                      l653 068C                      l574 0567  
                    l567 057C                      l663 070D                      l577 057C  
                    l834 05F8                      _RB1 0031                      _RB2 0032  
                    _PR2 0092                      _chn 005B                      _isr 02E5  
                    _val 004D                      fsr0 0004                      indf 0000  
           ___fltol@exp1 0036                     l2200 0543                     l2120 0746  
                   l2210 056C                     l2202 0555                     l2122 074A  
                   l2130 05E9                     l2212 0571                     l2116 07F2  
                   l2124 075F                     l2300 0727                     l2220 0654  
                   l2140 077B                     l2132 05EF                     l2118 07F8  
                   l2126 0765                     l2310 0731                     l2302 0728  
                   l2230 067A                     l2222 065B                     l2214 0647  
                   l2150 079D                     l2142 077F                     l2134 05F5  
                   l2208 055C                     l2160 059F                     l2320 0741  
                   l2312 0733                     l2304 0729                     l2232 067B  
                   l2224 065F                     l2216 064B                     l2240 06D2  
                   l2144 0783                     l2136 05F7                     l2128 05E8  
                   l2330 069F                     l2170 05CD                     l2162 05A3  
                   l2154 057D                     l2322 0742                     l2314 0734  
                   l2306 072A                     l2234 0682                     l2226 0663  
                   l2218 0651                     l2250 06EC                     l2242 06DA  
                   l2146 0790                     l2402 00A6                     l2180 0510  
                   l2340 06C0                     l2332 06B4                     l2172 05D6  
                   l2164 05AC                     l2156 058F                     l2324 0743  
                   l2316 073B                     l2308 072B                     l2228 0674  
                   l2236 0688                     l2252 06F6                     l2244 06DD  
                   l2148 0797                     l2420 00F6                     l2404 00C2  
                   l2500 01EB                     l2190 0535                     l2350 06CA  
                   l2342 06C1                     l2334 06B8                     l2166 05BE  
                   l2158 0592                     l2174 05DC                     l2326 0744  
                   l2318 073E                     l2254 06FC                     l2246 06E4  
                   l2430 011B                     l2422 0101                     l2414 00D0  
                   l2406 00CA                     l2262 0FED                     l2510 0220  
                   l2502 01F9                     l2192 0537                     l2184 0519  
                   l2352 06CB                     l2344 06C3                     l2336 06BC  
                   l2328 068D                     l2168 05CC                     l2360 049D  
                   l2280 0712                     l2256 0703                     l2248 06E8  
                   l2440 013C                     l2432 0120                     l2424 010D  
                   l2408 00CE                     l2264 0FF3                     l2520 022A  
                   l2512 0222                     l2504 0204                     l2194 053B  
                   l2186 052C                     l2178 0505                     l2346 06C4  
                   l2338 06BE                     l2362 04AA                     l2354 0465  
                   l2290 071D                     l2282 0713                     l2258 0709  
                   l2450 0182                     l2442 0140                     l2434 0124  
                   l2426 0111                     l2418 00EC                     l2370 0021  
                   l2266 0FF7                     l2274 0FFE                     l2530 0271  
                   l2522 0235                     l2514 0228                     l2506 0212  
      writeEEPROM@dataEE 0070                     l2188 052D                     l2348 06C8  
                   l2364 04DC                     l2356 0497                     l2292 0720  
                   l2284 0717                     l2452 0186                     l2444 014C  
                   l2428 0115                     l2436 0131                     l2620 00BA  
                   l2380 0039                     l2372 0024                     l2268 0FFC  
                   l2540 02AA                     l2532 0276                     l2524 0236  
                   l2508 021D                     l2470 0FC8                     l2366 04E9  
                   l2358 049B                     l2294 0721                     l2286 0719  
                   l2278 070E                     l2446 014F                     l2438 0137  
                   l2390 0064                     l2374 002A                     l2454 018F  
                   l2550 02DB                     l2534 0285                     l2526 023C  
                   l2472 0FCE                     l2480 0FE9                     l2368 04F8  
                   l2296 0722                     l2288 071A                     l2448 017D  
                   l2456 019F                     l2392 0079                     l2384 003D  
                   l2376 002F                     l2616 02C2                     l2536 0290  
                   l2528 024A                     l2544 02B4                     l2474 0FD0  
                   l2482 0FEB                     l2298 0723                     l2394 008C  
                   l2386 0050                     l2618 004B                     l2378 0034  
                   l2538 029F                     l2546 02CA                     l2490 01AD  
                   l2468 07C2                     l2396 0090                     l2388 0060  
                   l2548 02D3                     l2492 01C2                     l2478 0FDF  
                   l2398 00A1                     l2494 01C5                     l2486 01A4  
                   l2496 01D2                     l2488 01A9                     l2498 01E0  
                   ?_isr 0070                     STR_1 0629                     STR_2 063D  
                   STR_3 063D                     STR_4 0640                     STR_5 063D  
                   STR_6 063D                     STR_7 0629                     _CREN 00C4  
                   u2010 0554                     u2011 0553                     u2020 055B  
                   u2100 0674                     u2021 055A                     u2005 0544  
                   u2101 0673                     u2040 056C                     u2120 0688  
                   u2200 0FF7                     u2041 056B                     u2121 0687  
                   u2105 0670                     u2201 0FF6                     u2050 0571  
                   u2210 06D0                     u2130 06DA                     u2051 0570  
                   u2035 055E                     u2211 06CF                     u2115 067C  
                   u2131 06D9                     u2220 0475                     u2060 0651  
                   u2300 00EB                     u2061 0650                     u2301 00EA  
                   u2230 049B                     u2150 06EC                     u2310 00F6  
                   u2231 049A                     u2151 06EB                     u2311 00F5  
                   u2400 0FCE                     u2240 04AA                     u2080 0663  
                   u2160 06F6                     u2320 0101                     u2401 0FCD  
                   u2241 04A9                     u2225 0470                     u2081 0662  
                   u2161 06F5                     u2145 06DE                     u2321 0100  
                   u2305 00E7                     u2410 0FE5                     u2250 04BA  
                   u2330 0115                     u2411 0FE4                     u2075 0655  
                   u2331 0114                     u2420 0FE9                     u2260 04E9  
                   u2180 0709                     u2340 011B                     u2421 0FE8  
                   u2261 04E8                     u2245 04A6                     u2181 0708  
                   u2165 06F2                     u2341 011A                     u2325 00FD  
                   u2350 0130                     u2270 002A                     u2190 0FF3  
                   u2430 0228                     u2255 04B5                     u2095 0664  
                   u2175 06FD                     u2351 012F                     u2271 0029  
                   u2191 0FF2                     u2431 0227                     u2360 0137  
                   u2280 0060                     u2440 0249                     u2265 04E5  
                   u2361 0136                     u2281 005F                     u2441 0248  
                   u1810 07F8                     u2370 014C                     u2290 00A0  
                   u2450 02D3                     u1811 07F7                     u2507 0738  
                   u2371 014B                     u2291 009F                     u2451 02D2  
                   u1820 077A                     u2380 018F                     u1821 0779  
                   u2381 018E                     u2445 0245                     u1910 05A3  
                   u1830 05EF                     u2390 019F                     u1911 05A2  
                   u1831 05EE                     u2391 019E                     u1840 05F5  
                   u1905 0594                     u1841 05F4                     u1930 05BE  
                   u1850 0783                     u1931 05BD                     u1851 0782  
                   u2467 01DA                     u1925 05A5                     u2477 01F3  
                   u1950 05DC                     u1951 05DB                     u1935 05BA  
                   u2487 020C                     u1960 0510                     u1880 079D  
                   u1961 050F                     u1945 05CE                     u1881 079C  
                   u1865 078A                     u2497 027E                     u1970 0527  
                   u1890 058F                     u1891 058E                     u1875 0791  
                   u1980 053B                     u1981 053A                     u1990 0542  
                   u1991 0541                     u1975 0522                     _RCIF 0065  
                   _OERR 00C1                     _TRMT 04C1                     _WPUB 0095  
                   _chn1 005F                     _chn2 005D                     _main 01A4  
                   btemp 007E                     start 000E              _writeEEPROM 07A2  
                  ??_isr 0027            ___fltol@sign1 0035       writeEEPROM@address 0071  
                  ?_main 0070                    _EEADR 010D          __end_of___fltol 057D  
                  _ANSEL 0188          __end_of___lldiv 05E5          __end_of___lwdiv 068D  
                  i1l110 07C0                    i1l111 07C1                    i1l105 0FDE  
                  i1l131 03A6                    i1l108 07BA                    i1l124 0382  
                  i1l109 07B9          __end_of___lwmod 070E                    i1l196 07EE  
                  i1l820 0412                    i1l814 03CF                    i1l816 0464  
                  i1l827 042E                    i1l828 043A                    _RCREG 001A  
                  _RCSTA 0018                    _SPBRG 0099                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISD 0088  
                  _TXREG 0019                    _TXSTA 0098              ?_UART_Print 002E  
        __end_of_dpowers 061A          __end_of_isdigit 05F9          __end_of_message 0629  
                  _setup 070E                    main@c 00A9                    pclath 000A  
       __end_of_PWM_init 06D2         __end_of_PWM_duty 07EF                    status 0003  
                  wtemp0 007E          __end_of_sprintf 01A4          __initialization 0011  
           __end_of_main 02E5                   ??_main 004A                   _ADRESH 001E  
                 _EEDATA 010C                   _CCPR1L 0015                   _CCPR2L 001B  
                 _EECON2 018D                   ?_setup 0070                   _ANSELH 0189  
                 i1l1650 0FD3                   i1l1652 0FD7                   i1l1660 07A9  
                 i1l1910 03B7                   i1l1654 0FDA                   i1l1670 07B4  
                 i1l1662 07AC                   i1l1680 07E8                   u130_20 07E1  
                 i1l1920 03E3                   i1l1912 03C7                   i1l1672 07B5  
                 i1l1664 07AF                   u130_21 07E0                   i1l1930 0419  
                 i1l1922 03F0                   i1l1914 03D7                   i1l1906 03AE  
                 i1l1674 07B7                   i1l1666 07B0                   i1l1658 07A3  
                 i1l1676 07D9                   i1l1940 0452                   i1l1932 0424  
                 i1l1924 03F7                   i1l1908 03B3                   i1l1668 07B2  
                 i1l1678 07E1                   i1l1942 0457                   i1l1934 0428  
                 i1l1926 03FB                   i1l1918 03E0                   i1l1950 02E5  
                 i1l1944 045B                   i1l1936 0432                   i1l1928 0409  
                 i1l1960 0347                   i1l1952 02E9                   i1l1946 045C  
                 i1l1938 043C                   i1l1970 037E                   i1l1962 0351  
                 i1l1954 02F2                   i1l1980 038F                   i1l1964 035A  
                 i1l1956 0318                   i1l1982 0397                   i1l1974 0386  
                 i1l1958 0321                   i1l1966 0377                   i1l1984 03A2  
                 i1l1976 038A                   i1l1968 037A                   u160_25 040A  
                 u161_20 0418                   u129_20 07C0                   _INTCON 000B  
                 u161_21 0417                   u129_21 07BF                   u170_20 02F2  
                 u170_21 02F1                   u162_25 041D                   u163_20 0428  
                 u155_20 03B3                   u171_20 0321                   u163_21 0427  
                 u155_21 03B2                   u171_21 0320                   u164_20 042E  
                 u156_20 03B7                   u172_20 035A                   u164_21 042D  
                 u156_21 03B6                   u172_21 0359                   u165_20 0432  
                 u157_20 03D7                   u173_20 037E                   u165_21 0431  
                 u157_21 03D6                   u173_21 037D                   u166_20 0447  
                 u174_20 0382                   u174_21 0381                   u166_25 0442  
                 u158_25 03E8                   u167_20 0457                   u159_20 03F6  
                 u175_20 0386                   u167_21 0456                   u159_21 03F5  
                 u175_21 0385                   u168_20 045B                   u176_20 038E  
                 u168_21 045A                   u176_21 038D                   u177_20 03A6  
                 u169_20 02E9                   u177_21 03A5                   u169_21 02E8  
                 _OSCCON 008F         __end_of___xxtofl 0465        __end_of_UART_GetC 0FED  
      __end_of_UART_Init 0505        __end_of_UART_PutC 07FD                   ___wmul 077B  
              ??___fltol 0031                ??___lldiv 0035                ??___lwdiv 0031  
              ??___lwmod 0039                   _valadr 0057                   _valpot 0055  
              ??_isdigit 002D                   saved_w 007E                ??_sprintf 003E  
           ___xxtofl@arg 007A             ___xxtofl@exp 0079             ___xxtofl@val 0070  
__end_of__initialization 001A               ___fltol@f1 002D           __pcstackCOMMON 0070  
          __end_of_setup 0746                ?_PWM_init 0037                ?_PWM_duty 0020  
         _OPTION_REGbits 0081             sprintf@width 0047                  ??_setup 002D  
             __pbssBANK0 004D               __pmaintext 01A4             ?_writeEEPROM 0070  
                ?___wmul 002D               __pintentry 0004       PWM_init@periodo_ms 003B  
             ??_PWM_init 003F               ??_PWM_duty 0026                ?___xxtofl 0070  
           PWM_init@chn1 0037             PWM_init@chn2 0039             ??_UART_Print 0030  
           PWM_duty@duty 0022               __stringtab 0600               _readEEPROM 0FD2  
     __end_of_UART_Print 077B                  ___fltol 0505                  ___lldiv 057D  
                ___lwdiv 0647                  ___lwmod 06D2                  __ptext1 0FED  
                __ptext2 001E                  __ptext3 05E5                  __ptext4 077B  
                __ptext5 06D2                  __ptext6 0647                  __ptext7 070E  
                __ptext8 07C2                  __ptext9 0746                  _dpowers 0610  
              _T2CONbits 0012                  _isdigit 05E5               ??___xxtofl 0074  
                _message 061A              UART_Print@i 0032           UART_Print@data 002E  
                _sprintf 001E                  clrloop0 0FC1     end_of_initialization 001A  
             _periodo_ms 0051        __end_of_uart_read 1000        __end_of_preguntas 07D9  
        ___lldiv@divisor 002D          ___lldiv@counter 003A                _RCSTAbits 0018  
      ??_UART_Data_Ready 002D                _UART_GetC 0FDF                _UART_Init 0465  
              _UART_PutC 07EF                _PORTBbits 0006       UART_Init@baud_rate 003B  
          ___xxtofl@sign 0078                _TRISCbits 0087        readEEPROM@address 0070  
            _CCP1CONbits 0017              ?_readEEPROM 0070              _CCP2CONbits 001D  
         __end_of___wmul 07A2               ?_UART_GetC 0070               ?_UART_Init 003B  
             ?_UART_PutC 0070   writeEEPROM@INTCON_SAVE 0072      start_initialization 0011  
            __end_of_isr 03AD                 ??___wmul 0031                ___latbits 0002  
          __pcstackBANK0 0020            __pcstackBANK1 00A0             _isdigit$1125 002D  
            sprintf@flag 0042              sprintf@prec 0045         ___lwdiv@dividend 002F  
               ?___fltol 002D                 ?___lldiv 002D                 ?___lwdiv 002D  
               ?___lwmod 0035              ??_UART_GetC 002D              ??_UART_Init 003F  
            ??_UART_PutC 002D                __pstrings 0600              PWM_duty@chn 0020  
               ?_isdigit 0070            UART_PutC@data 002D         ___lwdiv@quotient 0033  
               ?_sprintf 003B               UART_Init@n 0043        interrupt_function 0004  
         ___wmul@product 0031          _UART_Data_Ready 0FC8                clear_ram0 0FC0  
               _PIE1bits 008C                 _PIR1bits 000C                 _PIR2bits 000D  
              _uart_read 0FED                _preguntas 07C2               _ADCON0bits 001F  
            __stringbase 060F               _ADCON1bits 009F        ___wmul@multiplier 002D  
               _PWM_init 068D                 _PWM_duty 07D9             ??_readEEPROM 0070  
             _EECON1bits 018C               ?_uart_read 0070               ?_preguntas 0070  
     __end_of__stringtab 0610               sprintf@val 0043                 ___xxtofl 03AD  
     __end_of_readEEPROM 0FDF          ___lwdiv@divisor 002D          ___lwdiv@counter 0032  
               __ptext10 07EF                 __ptext11 0465                 __ptext20 03AD  
               __ptext12 057D                 __ptext21 07D9                 __ptext13 0FDF  
               __ptext14 0FC8                 __ptext15 068D                 __ptext16 0505  
               __ptext17 02E5                 __ptext18 07A2                 __ptext19 0FD2  
__end_of_UART_Data_Ready 0FD2            ??_writeEEPROM 0071                 main@text 00A0  
             _INTCONbits 000B                 isdigit@c 002E                 intlevel1 0000  
              sprintf@ap 0041                sprintf@sp 0046         ___lwmod@dividend 0037  
       ___lldiv@dividend 0031                stringcode 060A               _OSCCONbits 008F  
            ??_uart_read 002D              ??_preguntas 0033      __end_of_writeEEPROM 07C2  
               sprintf@c 0049                 sprintf@f 003B         ___lldiv@quotient 0036  
        ___lwmod@divisor 0035          ___lwmod@counter 003A                 stringdir 060A  
               stringtab 0600               _UART_Print 0746         ?_UART_Data_Ready 0070  
